{
"version":3,
"file":"HIDE.js",
"sourceRoot":"file://",
"sources":["/usr/lib/haxe/std/js/_std/EReg.hx","/home/as3boyan/HIDE-atom-shell/src/HIDE.hx","/usr/lib/haxe/std/js/_std/HxOverrides.hx","/usr/lib/haxe/std/Lambda.hx","/usr/lib/haxe/std/List.hx","/home/as3boyan/HIDE-atom-shell/src/Main.hx","/usr/lib/haxe/std/js/_std/Reflect.hx","/usr/lib/haxe/std/js/_std/Std.hx","/usr/lib/haxe/std/StringBuf.hx","/usr/lib/haxe/std/StringTools.hx","/usr/lib/haxe/std/js/_std/Type.hx","/usr/lib/haxe/std/js/_std/Xml.hx","/home/as3boyan/HIDE-atom-shell/src/autoformat/HaxePrinter.hx","/home/as3boyan/HIDE-atom-shell/src/autoformat/HaxePrinterLoader.hx","/home/as3boyan/HIDE-atom-shell/src/bootstrap/ButtonManager.hx","/home/as3boyan/HIDE-atom-shell/src/bootstrap/InputGroup.hx","/home/as3boyan/HIDE-atom-shell/src/bootstrap/InputGroupButton.hx","/home/as3boyan/HIDE-atom-shell/src/bootstrap/ListGroup.hx","/home/as3boyan/HIDE-atom-shell/src/bootstrap/RadioElement.hx","/home/as3boyan/HIDE-atom-shell/src/build/CommandPreprocessor.hx","/home/as3boyan/HIDE-atom-shell/src/build/Hxml.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/byte/js/ByteData.hx","/home/as3boyan/HIDE-atom-shell/src/cm/ColorPreview.hx","/home/as3boyan/HIDE-atom-shell/src/cm/ERegPreview.hx","/home/as3boyan/HIDE-atom-shell/src/cm/Editor.hx","/home/as3boyan/HIDE-atom-shell/src/cm/HighlightRange.hx","/home/as3boyan/HIDE-atom-shell/src/cm/Xml.hx","/home/as3boyan/HIDE-atom-shell/src/cm/Zoom.hx","/home/as3boyan/HIDE-atom-shell/src/completion/Filter.hx","/home/as3boyan/HIDE-atom-shell/src/completion/GoToDeclaration.hx","/home/as3boyan/HIDE-atom-shell/src/completion/Hxml.hx","/home/as3boyan/HIDE-atom-shell/src/completion/MetaTags.hx","/home/as3boyan/HIDE-atom-shell/src/completion/SnippetsCompletion.hx","/home/as3boyan/HIDE-atom-shell/src/core/AnnotationRuler.hx","/home/as3boyan/HIDE-atom-shell/src/core/CompilationOutput.hx","/home/as3boyan/HIDE-atom-shell/src/core/Completion.hx","/home/as3boyan/HIDE-atom-shell/src/core/DragAndDrop.hx","/home/as3boyan/HIDE-atom-shell/src/core/FileDialog.hx","/home/as3boyan/HIDE-atom-shell/src/core/FunctionParametersHelper.hx","/home/as3boyan/HIDE-atom-shell/src/core/GoToLine.hx","/home/as3boyan/HIDE-atom-shell/src/core/HaxeHelper.hx","/usr/lib/haxe/std/js/_std/haxe/ds/StringMap.hx","/home/as3boyan/HIDE-atom-shell/src/core/HaxeLint.hx","/home/as3boyan/HIDE-atom-shell/src/core/HaxeParserProvider.hx","/home/as3boyan/HIDE-atom-shell/src/core/HaxeServer.hx","/home/as3boyan/HIDE-atom-shell/src/core/Helper.hx","/home/as3boyan/HIDE-atom-shell/src/core/Hotkeys.hx","/home/as3boyan/HIDE-atom-shell/src/core/ImportDefinition.hx","/home/as3boyan/HIDE-atom-shell/src/core/LineWidget.hx","/home/as3boyan/HIDE-atom-shell/src/core/MenuCommands.hx","/home/as3boyan/HIDE-atom-shell/src/core/OutlinePanel.hx","/home/as3boyan/HIDE-atom-shell/src/core/ProcessHelper.hx","/home/as3boyan/HIDE-atom-shell/src/core/QuickOpen.hx","/home/as3boyan/HIDE-atom-shell/src/core/RecentProjectsList.hx","/home/as3boyan/HIDE-atom-shell/src/core/RunProject.hx","/home/as3boyan/HIDE-atom-shell/src/core/Splitter.hx","/home/as3boyan/HIDE-atom-shell/src/core/Utils.hx","/home/as3boyan/HIDE-atom-shell/src/core/WelcomeScreen.hx","/home/as3boyan/HIDE-atom-shell/src/dialogs/ModalDialog.hx","/home/as3boyan/HIDE-atom-shell/src/dialogs/BrowseDirectoryDialog.hx","/home/as3boyan/HIDE-atom-shell/src/dialogs/BrowseDirectoryWithDownloadButtonDialog.hx","/home/as3boyan/HIDE-atom-shell/src/dialogs/DialogManager.hx","/home/as3boyan/HIDE-atom-shell/src/dialogs/HaxelibManagerDialog.hx","/home/as3boyan/HIDE-atom-shell/src/dialogs/InstallHaxelibDialog.hx","/home/as3boyan/HIDE-atom-shell/src/dialogs/ProjectOptionsDialog.hx","/home/as3boyan/HIDE-atom-shell/src/filetree/FileTree.hx","/usr/lib/haxe/std/haxe/Resource.hx","/usr/lib/haxe/std/haxe/Serializer.hx","/usr/lib/haxe/std/haxe/Template.hx","/usr/lib/haxe/std/haxe/Timer.hx","/usr/lib/haxe/std/haxe/Unserializer.hx","/usr/lib/haxe/std/haxe/Utf8.hx","/usr/lib/haxe/std/haxe/io/Bytes.hx","/usr/lib/haxe/std/haxe/crypto/Base64.hx","/usr/lib/haxe/std/haxe/crypto/BaseCode.hx","/usr/lib/haxe/std/haxe/ds/GenericStack.hx","/usr/lib/haxe/std/js/_std/haxe/ds/IntMap.hx","/usr/lib/haxe/std/js/_std/haxe/ds/ObjectMap.hx","/usr/lib/haxe/std/haxe/io/Eof.hx","/usr/lib/haxe/std/haxe/macro/ExprTools.hx","/usr/lib/haxe/std/haxe/macro/Printer.hx","/usr/lib/haxe/std/haxe/xml/Fast.hx","/usr/lib/haxe/std/haxe/xml/Parser.hx","/home/as3boyan/HIDE-atom-shell/libs/haxeparser/src/haxeparser/Data.hx","/home/as3boyan/HIDE-atom-shell/libs/haxeparser/src/haxeparser/HaxeLexer.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/hxparse/Lexer.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/hxparse/LexEngine.hx","/usr/lib/haxe/std/js/Boot.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/hxparse/Ruleset.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/hxparse/Position.hx","/home/as3boyan/HIDE-atom-shell/libs/haxeparser/src/haxeparser/HaxeParser.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/hxparse/Parser.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/hxparse/ParserBuilderImpl.hx","/home/as3boyan/HIDE-atom-shell/libs/haxeprinter/src/haxeprinter/Printer.hx","/home/as3boyan/HIDE-atom-shell/src/haxeproject/HaxeProject.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/hxparse/LexerTokenSource.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/hxparse/NoMatch.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/hxparse/State.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/hxparse/Unexpected.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/hxparse/UnexpectedChar.hx","/usr/lib/haxe/std/js/Browser.hx","/home/as3boyan/HIDE-atom-shell/externs/haxe-js-kit/js/Lib.hx","/home/as3boyan/HIDE-atom-shell/src/kha/KhaProject.hx","/home/as3boyan/HIDE-atom-shell/src/menu/BootstrapMenu.hx","/home/as3boyan/HIDE-atom-shell/src/menu/Menu.hx","/home/as3boyan/HIDE-atom-shell/src/newprojectdialog/Category.hx","/home/as3boyan/HIDE-atom-shell/src/newprojectdialog/Item.hx","/home/as3boyan/HIDE-atom-shell/src/newprojectdialog/NewProjectDialog.hx","/home/as3boyan/HIDE-atom-shell/src/openflproject/CreateOpenFLProject.hx","/home/as3boyan/HIDE-atom-shell/src/openflproject/OpenFLProject.hx","/home/as3boyan/HIDE-atom-shell/src/openflproject/OpenFLTools.hx","/home/as3boyan/HIDE-atom-shell/src/openproject/OpenFL.hx","/home/as3boyan/HIDE-atom-shell/src/openproject/OpenProject.hx","/home/as3boyan/HIDE-atom-shell/src/parser/ClassParser.hx","/home/as3boyan/HIDE-atom-shell/src/parser/ClasspathWalker.hx","/home/as3boyan/HIDE-atom-shell/src/parser/OutlineHelper.hx","/home/as3boyan/HIDE-atom-shell/src/parser/RegexParser.hx","/home/as3boyan/HIDE-atom-shell/src/pluginloader/PluginManager.hx","/home/as3boyan/HIDE-atom-shell/src/projectaccess/Project.hx","/home/as3boyan/HIDE-atom-shell/src/projectaccess/ProjectAccess.hx","/home/as3boyan/HIDE-atom-shell/src/projectaccess/ProjectOptions.hx","/home/as3boyan/HIDE-atom-shell/src/tabmanager/ContextMenu.hx","/home/as3boyan/HIDE-atom-shell/src/tabmanager/Tab.hx","/home/as3boyan/HIDE-atom-shell/src/tabmanager/TabManager.hx","/home/as3boyan/HIDE-atom-shell/src/tabmanager/TabMap.hx","/usr/lib/haxe/lib/tjson/1,2,3/tjson/TJSON.hx","/home/as3boyan/HIDE-atom-shell/src/watchers/LocaleWatcher.hx","/home/as3boyan/HIDE-atom-shell/src/watchers/SettingsWatcher.hx","/home/as3boyan/HIDE-atom-shell/src/watchers/SnippetsWatcher.hx","/home/as3boyan/HIDE-atom-shell/src/watchers/ThemeWatcher.hx","/home/as3boyan/HIDE-atom-shell/src/watchers/Watcher.hx","/home/as3boyan/HIDE-atom-shell/externs/alertify/Alertify.hx","/usr/lib/haxe/std/Math.hx","/home/as3boyan/HIDE-atom-shell/externs/haxe-js-kit/atomshell/Package.hx","/home/as3boyan/HIDE-atom-shell/externs/haxe-js-kit/npm/Package.hx","/home/as3boyan/HIDE-atom-shell/libs/hxparse/src/hxparse/RuleBuilder.hx","/home/as3boyan/HIDE-atom-shell/externs/haxe-js-kit/js/Node.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : Dynamic;\n\n\tpublic function new( r : String, opt : String ) : Void {\n\t\topt = opt.split(\"u\").join(\"\"); // 'u' (utf8) depends on page encoding\n\t\tthis.r = untyped __new__(\"RegExp\",r,opt);\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n","package ;\nimport js.node.Fs;\nimport js.node.Fs.FsReadFileOpt;\nimport js.node.Path;\nimport js.atomshell.browser.BrowserWindow;\nimport haxe.ds.StringMap.StringMap;\nimport haxe.Serializer;\nimport js.Browser;\nimport js.html.LinkElement;\nimport js.html.ScriptElement;\nimport js.Node;\nimport pluginloader.PluginManager;\n\n/**\n * ...\n * @author AS3Boyan\n */\n\n //This class is a global HIDE API for plugins\n //Using this API plugins can load JS and CSS scripts in specified order \n //To use it in plugins you may need to add path to externs for this class, they are located at externs/plugins/hide\n\nclass HIDE\n{\n\tpublic static var windows:Array<BrowserWindow> = [];\n\t\n\t//Loads JS scripts in specified order and calls onLoad function when last item of urls array was loaded\n\tpublic static function loadJS(name:String, urls:Array<String>, ?onLoad:Dynamic):Void\n\t{\t\t\n\t\tif (name != null)\n\t\t{\n\t\t\tfor (i in 0...urls.length)\n\t\t\t{\n\t\t\t\turls[i] = Path.join(getPluginPath(name), urls[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tloadJSAsync(name, urls, onLoad);\n\t}\n\t\n\t//Asynchronously loads multiple CSS scripts\n\tpublic static function loadCSS(name:String, urls:Array<String>, ?onLoad:Dynamic):Void\n\t{\n\t\tif (name != null)\n\t\t{\n\t\t\tfor (i in 0...urls.length)\n\t\t\t{\n\t\t\t\turls[i] = Path.join(getPluginPath(name), urls[i]);\n\t\t\t}\n\t\t}\n\n\t\tloadCSSAsync(name, urls, onLoad);\n\t}\n\t\n\tstatic function loadCSSAsync(name:String, urls:Array<String>, ?onLoad:Dynamic):Void\n\t{\n\t\tvar link:LinkElement = Browser.document.createLinkElement();\n\t\tlink.href = urls.splice(0, 1)[0];\n\t\tlink.type = \"text/css\";\n\t\tlink.rel = \"stylesheet\";\n\t\tlink.onload = function (e)\n\t\t{\n\t\t\ttraceScriptLoadingInfo(name, link.href);\n\t\t\t\n\t\t\tif (urls.length > 0)\n\t\t\t{\n\t\t\t\tloadCSSAsync(name, urls, onLoad);\n\t\t\t}\n\t\t\telse if (onLoad != null)\n\t\t\t{\n\t\t\t\tonLoad();\n\t\t\t}\n\t\t};\n\t\t\n\t\tBrowser.document.head.appendChild(link);\n\t}\t\n\t\n\tstatic function traceScriptLoadingInfo(name:String, url:String):Void\n\t{\n\t\tvar str:String;\n\t\t\t\t\n\t\tif (name != null)\n\t\t{\n\t\t\tstr = \"\\n\" + name + \":\\n\" + url + \"\\n\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr = url + \" loaded\";\n\t\t}\n\t\t\n\t\t//trace(str);\n\t}\n\t\n\tpublic static function getPluginPath(name:String):String\n\t{\n\t\tvar pluginManager = PluginManager.get();\n\t\t\n\t\tvar pathToPlugin:String = pluginManager.pathToPlugins.get(name);\n\t\t\t\t\n\t\tif (pathToPlugin == null)\n\t\t{\n\t\t\ttrace(\"HIDE can't find path for plugin: \" + name + \"\\nPlease check folder structure of plugin, make sure that it corresponds to it's 'name'\");\n\t\t}\n\t\t\n\t\treturn pathToPlugin;\n\t}\n\t\n\tpublic static function waitForDependentPluginsToBeLoaded(name:String, plugins:Array<String>, onLoaded:Void->Void, ?callOnLoadWhenAtLeastOnePluginLoaded:Bool = false):Void\n\t{\t\n\t\tvar pluginManager = PluginManager.get();\n\t\t\n\t\tpluginManager.waitForDependentPluginsToBeLoaded(name, plugins, onLoaded, callOnLoadWhenAtLeastOnePluginLoaded);\n\t}\n\t\n\tpublic static function notifyLoadingComplete(name:String):Void\n\t{\n\t\tvar pluginManager = PluginManager.get();\n\t\t\n\t\tpluginManager.notifyLoadingComplete(name);\n\t}\n\t\n\tpublic static function openPageInNewBrowserWindow(name:String, url:String, ?params:Dynamic):Dynamic\n\t{\t\n\t\tvar window = null;\n\t\t\n// \t\tvar fullPath:String = url;\n\t\t\n// \t\tif (!StringTools.startsWith(url, \"http\") && name != null)\n// \t\t{\n// \t\t\tfullPath = Path.join(getPluginPath(name), url);\n// \t\t}\n\t\t\n// \t\tvar window = BrowserWindow.open(fullPath, params);\n// \t\twindows.push(window);\n\t\t\n// \t\twindow.on(\"close\", function (e)\n// \t\t{\n// \t\t\twindows.remove(window);\n// \t\t\twindow.close(true);\n// \t\t}\n// \t\t);\n\t\t\n\t\treturn window;\n\t}\n\n\tpublic static function compilePlugins(?onComplete:Dynamic, ?onFailed:Dynamic):Void\n\t{\n\t\tvar pluginManager = PluginManager.get();\n\t\t\n\t\tpluginManager.compilePlugins(onComplete, onFailed);\n\t}\n\t\n\tpublic static function readFile(name:String, path:String, onComplete:Dynamic):Void\n\t{\n\t\tvar options:FsReadFileOpt = { };\n\t\toptions.encoding = \"utf8\";\n\t\t\n\t\tvar pluginManager = PluginManager.get();\n\t\t\n\t\tvar fullPath:String = path;\n\t\t\n\t\tif (name != null) \n\t\t{\n\t\t\tfullPath = Path.join(pluginManager.pathToPlugins.get(name), path);\n\t\t}\n\t\t\n\t\tFs.readFile(fullPath, options, function (error, data:String):Void\n\t\t{\n\t\t\tif (error != null)\n\t\t\t{\n\t\t\t\ttrace(error);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tonComplete(data);\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic static function writeFile(name:String, path:String, contents:String, ?onComplete:Dynamic):Void\n\t{\n\t\tvar pluginManager = PluginManager.get();\n\t\t\n\t\tFs.writeFile(Path.join(pluginManager.pathToPlugins.get(name), path), contents, \"utf8\", function (error)\n\t\t{\n\t\t\tif (onComplete != null && error == null)\n\t\t\t{\n\t\t\t\tonComplete();\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic static function surroundWithQuotes(path:String):String\n\t{\n\t\treturn '\"' + path + '\"';\n\t}\n\t\n\t//Private function which loads JS scripts in strict order\n\tstatic function loadJSAsync(name:String, urls:Array<String>, ?onLoad:Dynamic):Void\n\t{\n\t\tvar script:ScriptElement = Browser.document.createScriptElement();\n\t\tscript.src = urls.splice(0, 1)[0];\n\t\tscript.onload = function (e)\n\t\t{\t\t\t\n\t\t\ttraceScriptLoadingInfo(name, script.src);\n\t\t\t\n\t\t\tif (urls.length > 0)\n\t\t\t{\n\t\t\t\tloadJSAsync(name, urls, onLoad);\n\t\t\t}\n\t\t\telse if (onLoad != null)\n\t\t\t{\n\t\t\t\tonLoad();\n\t\t\t}\n\t\t};\n\t\t\n\t\tBrowser.document.body.appendChild(script);\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\t#if mt\n\t\tvar x = (cast s).cca(index);\n\t\t#else\n\t\tvar x = (cast s).charCodeAt(index);\n\t\t#end\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\n#if mt\n\t\tif( String.prototype.cca == null ) String.prototype.cca = String.prototype.charCodeAt;\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe `Lambda` class is a collection of methods to support functional\n\tprogramming. It is ideally used with 'using Lambda' and then acts as an\n\textension to Iterable types.\n\n\tOn static platforms, working with the Iterable structure might be slower\n\tthan performing the operations directly on known types, such as Array and\n\tList.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\nclass Lambda {\n\n\t/**\n\t\tCreates an Array from Iterable `it`.\n\n\t\tIf `it` is an Array, this function returns a copy of it.\n\t**/\n\tpublic static function array<A>( it : Iterable<A> ) : Array<A> {\n\t\tvar a = new Array<A>();\n\t\tfor(i in it)\n\t\t\ta.push(i);\n\t\treturn a;\n\t}\n\n\t/**\n\t\tCreates a List form Iterable `it`.\n\n\t\tIf `it` is a List, this function returns a copy of it.\n\t**/\n\tpublic static function list<A>( it : Iterable<A> ) : List<A> {\n\t\tvar l = new List<A>();\n\t\tfor(i in it)\n\t\t\tl.add(i);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tCreates a new List by applying function `f` to all elements of `it`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function map<A,B>( it : Iterable<A>, f : A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tfor( x in it )\n\t\t\tl.add(f(x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tSimilar to map, but also passes the index of each element to `f`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function mapi<A,B>( it : Iterable<A>, f : Int -> A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tvar i = 0;\n\t\tfor( x in it )\n\t\t\tl.add(f(i++,x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tTells if `it` contains `elt`.\n\n\t\tThis function returns true as soon as an element is found which is equal\n\t\tto `elt` according to the `==` operator.\n\n\t\tIf no such element is found, the result is false.\n\t**/\n\tpublic static function has<A>( it : Iterable<A>, elt : A ) : Bool {\n\t\tfor( x in it )\n\t\t\tif( x == elt )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `it` contains an element for which `f` is true.\n\n\t\tThis function returns true as soon as an element is found for which a\n\t\tcall to `f` returns true.\n\n\t\tIf no such element is found, the result is false.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function exists<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `f` is true for all elements of `it`.\n\n\t\tThis function returns false as soon as an element is found for which a\n\t\tcall to `f` returns false.\n\n\t\tIf no such element is found, the result is true.\n\n\t\tIn particular, this function always returns true if `it` is empty.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function foreach<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( !f(x) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t/**\n\t\tCalls `f` on all elements of `it`, in order.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function iter<A>( it : Iterable<A>, f : A -> Void ) {\n\t\tfor( x in it )\n\t\t\tf(x);\n\t}\n\n\t/**\n\t\tReturns a List containing those elements of `it` for which `f` returned\n\t\ttrue.\n\n\t\tIf `it` is empty, the result is the empty List even if `f` is null.\n\n\t\tOtherwise if `f` is null, the result is unspecified.\n\t**/\n\tpublic static function filter<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tvar l = new List<A>();\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tFunctional fold on Iterable `it`, using function `f` with start argument\n\t\t`first`.\n\n\t\tIf `it` has no elements, the result is `first`.\n\n\t\tOtherwise the first element of `it` is passed to `f` alongside `first`.\n\t\tThe result of that call is then passed to `f` with the next element of\n\t\t`it`, and so on until `it` has no more elements.\n\n\t\tIf `it` or `f` are null, the result is unspecified.\n\t**/\n\tpublic static function fold<A,B>( it : Iterable<A>, f : A -> B -> B, first : B ) : B {\n\t\tfor( x in it )\n\t\t\tfirst = f(x,first);\n\t\treturn first;\n\t}\n\n\t/**\n\t\tReturns the number of elements in `it` for which `pred` is true, or the\n\t\ttotal number of elements in `it` if `pred` is null.\n\n\t\tThis function traverses all elements.\n\t**/\n\tpublic static function count<A>( it : Iterable<A>, ?pred : A -> Bool ) {\n\t\tvar n = 0;\n\t\tif( pred == null )\n\t\t\tfor( _ in it )\n\t\t\t\tn++;\n\t\telse\n\t\t\tfor( x in it )\n\t\t\t\tif( pred(x) )\n\t\t\t\t\tn++;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tTells if Iterable `it` does not contain any element.\n\t**/\n\tpublic static function empty<T>( it : Iterable<T> ) : Bool {\n\t\treturn !it.iterator().hasNext();\n\t}\n\n\t/**\n\t\tReturns the index of the first element `v` within Iterable `it`.\n\n\t\tThis function uses operator `==` to check for equality.\n\n\t\tIf `v` does not exist in `it`, the result is -1.\n\t**/\n\tpublic static function indexOf<T>( it : Iterable<T>, v : T ) : Int {\n\t\tvar i = 0;\n\t\tfor( v2 in it ) {\n\t\t\tif( v == v2 )\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t\tReturns the first element of `it` for which `f` is true.\n\n\t\tThis function returns as soon as an element is found for which a call to\n\t\t`f` returns true.\n\n\t\tIf no such element is found, the result is null.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function find<T>( it : Iterable<T>, f : T -> Bool ) : Null<T> {\n\t\tfor( v in it ) {\n\t\t\tif(f(v)) return v;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tReturns a new List containing all elements of Iterable `a` followed by\n\t\tall elements of Iterable `b`.\n\n\t\tIf `a` or `b` are null, the result is unspecified.\n\t**/\n\tpublic static function concat<T>( a : Iterable<T>, b : Iterable<T> ) : List<T> {\n\t\tvar l = new List();\n\t\tfor( x in a )\n\t\t\tl.add(x);\n\t\tfor( x in b )\n\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA linked-list of elements. The list is composed of two-elements arrays\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole array content every time.\n**/\nclass List<T> {\n\n\tprivate var h : Array<Dynamic>;\n\tprivate var q : Array<Dynamic>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x:Array<Dynamic> = #if neko untyped __dollar__array(item,null) #else [item] #end;\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq[1] = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x : Array<Dynamic> = #if neko\n\t\t\tuntyped __dollar__array(item,h)\n\t\t#else\n\t\t\t[item,h]\n\t\t#end;\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h[0];\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q[0];\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h[0];\n\t\th = h[1];\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l[0] == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l[1];\n\t\t\t\telse\n\t\t\t\t\tprev[1] = l[1];\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l[1];\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic function iterator() : Iterator<T> {\n\t\t#if (java || cs)\n\t\tvar h = h;\n\t\treturn cast {\n\t\t\thasNext : function() {\n\t\t\t\treturn (h != null);\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\t{\n\t\t\t\t\tif( h == null )\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tvar x = h[0];\n\t\t\t\t\th = h[1];\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t#else\n\t\treturn cast {\n\t\t\th : h,\n\t\t\thasNext : function() {\n\t\t\t\treturn untyped (__this__.h != null);\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\tuntyped {\n\t\t\t\t\tif( __this__.h == null )\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tvar x = __this__.h[0];\n\t\t\t\t\t__this__.h = __this__.h[1];\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l[0]));\n\t\t\tl = l[1];\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l[0]);\n\t\t\tl = l[1];\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n","package ;\nimport js.Node;\nimport js.atomshell.browser.BrowserWindow;\nimport core.HaxeHelper;\nimport kha.KhaProject;\n\nimport core.QuickOpen;\nimport core.AnnotationRuler;\nimport core.ProcessHelper;\nimport core.RecentProjectsList;\nimport core.Splitter;\nimport core.WelcomeScreen;\nimport dialogs.DialogManager;\nimport jQuery.JQuery;\nimport autoformat.HaxePrinterLoader;\nimport cm.Editor;\nimport cm.Zoom;\nimport core.CompilationOutput;\nimport core.Completion;\nimport core.DragAndDrop;\nimport core.FileDialog;\nimport core.HaxeLint;\nimport core.HaxeParserProvider;\nimport core.HaxeServer;\nimport core.Hotkeys;\nimport core.MenuCommands;\nimport core.PreserveWindowState;\nimport core.RunProject;\nimport core.Utils;\nimport filetree.FileTree;\nimport haxe.Timer;\nimport haxe.Unserializer;\nimport haxeproject.HaxeProject;\nimport js.Browser;\nimport js.html.Element;\nimport js.html.TextAreaElement;\nimport menu.BootstrapMenu;\nimport newprojectdialog.NewProjectDialog;\nimport openflproject.OpenFLProject;\nimport openproject.OpenProject;\nimport parser.ClasspathWalker;\nimport pluginloader.PluginManager;\nimport projectaccess.ProjectAccess;\nimport projectaccess.ProjectOptions;\nimport tabmanager.TabManager;\nimport watchers.SettingsWatcher;\nimport watchers.SnippetsWatcher;\n\n/**\n * ...\n * @author AS3Boyan\n */\n\nclass Main\n{\n\tpublic static var currentTime:Float;\n\tpublic static var window:BrowserWindow;\n    public static var sync:Bool;\n\n\tpublic static function main()\n\t{\n// \t\twindow = BrowserWindow.getAllWindows()[0];\n\t\t\n// \t\twindow.webContents.on(BrowserWindowWebContentsEvent.DID_FINISH_LOAD, function ()\n// \t\t\t{\n// \t\t\t\tPreserveWindowState.init();\n// \t\t\t});\n\n// \t\twindow.showDevTools();\n// \t\twindow.title = \"HIDE\";\n\t\t\n// \t\tjs.Node.process.on('uncaughtException', function (err)\n// \t\t{\n// \t\t\ttrace(err);\n\n// \t\t\twindow.show();\n\n\t\t\t//if (!window.isDevToolsOpen())\n\t\t\t//{\n\n\t\t\t//}\n// \t\t}\n// \t\t);\n\t\t\n\t\tNode.process.chdir(Node.__dirname);\n\t\t\n        sync = true;\n\t\t\n\t\tBrowser.window.addEventListener(\"load\", function (e):Void\n\t\t{\t\t\t\n\t\t\tvar splitter = Splitter.get();\n\t\t\tsplitter.load();\n\n\t\t\tSettingsWatcher.load();\n\t\t\t\n\t\t\tvar snippetsCompletion = SnippetsWatcher.get();\n\t\t\t\n\t\t\tsnippetsCompletion.load();\n\t\t\tUtils.prepare();\n\t\t\tHotkeys.prepare();\n\n\t\t\tBootstrapMenu.createMenuBar();\n\t\t\tNewProjectDialog.load();\n\t\t\t\n\t\t\tvar zoom = Zoom.get();\n\t\t\tzoom.load();\n\t\t\t\n\t\t\tvar fileTreeInstance = FileTree.get();\n\t\t\tfileTreeInstance.init();\n\t\t\t\n\t\t\tvar projectOptions = ProjectOptions.get();\n\t\t\tprojectOptions.create();\n\t\t\t\n\t\t\tDialogManager.load();\n\t\t\tFileDialog.create();\n\t\t\t\n\t\t\tvar tabManagerInstance = TabManager.get();\n\t\t\ttabManagerInstance.load();\n\t\t\t\t\t\t\n\t\t\tvar classpathWalker = ClasspathWalker.get();\n\t\t\tclasspathWalker.load();\n\t\t\t\n\t\t\tHaxeLint.load();\n\t\t\tEditor.load();\n\t\t\tMenuCommands.add();\n\t\t\t\n\t\t\tvar completionInstance = Completion.get();\n\t\t\tcompletionInstance.load();\n\t\t\t\n\t\t\tHaxePrinterLoader.load();\n\n\t\t\tProjectAccess.registerSaveOnCloseListener();\n\n\t\t\tvar haxeProject = HaxeProject.get();\n\t\t\tvar openFLProject = OpenFLProject.get();\n\t\t\tvar khaProject = KhaProject.get();\n            khaProject.load();\n\n\t\t\tCompilationOutput.load();\n\n\t\t\tvar recentProjectsList = RecentProjectsList.get();\n\t\t\tOpenProject.searchForLastProject();\n\t\t\tDragAndDrop.prepare();\n\t\t\tvar classWalker = ClasspathWalker.get();\n\t\t\tvar welcomeScreen = WelcomeScreen.get();\n\t\t\twelcomeScreen.load();\n\t\t\t\n\t\t\tvar quickOpen = QuickOpen.get();\n\n            sync = false;\n\n\t\t\tcurrentTime = Date.now().getTime();\n\n\t\t\tvar processHelper = ProcessHelper.get();\n\t\t\t\n\t\t\tvar pluginManager = PluginManager.get();\n\t\t\t\n\t\t\tprocessHelper.checkProcessInstalled(\"haxe\", [\"-v\"], function (installed:Bool)\n\t\t\t{\n\t\t\t\tif (installed)\n\t\t\t\t{\n\t\t\t\t\tHaxeServer.check();\n\t\t\t\t\tpluginManager.loadPlugins();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tAlertify.error(\"Haxe compiler is not found\");\n\t\t\t\t\tpluginManager.loadPlugins(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\n\t\t\tprocessHelper.checkProcessInstalled(\"npm\", [\"-v\"], function (installed:Bool):Void\n\t\t\t{\n\t\t\t\ttrace(\"npm installed \" + Std.string(installed));\n\n\t\t\t\tif (installed)\n\t\t\t\t{\n\t\t\t\t\tprocessHelper.runProcess(\"npm\", [\"list\", \"-g\", \"flambe\"], null, function (stdout:String, stderr:String):Void\n\t\t\t\t\t{\n\t\t\t\t\t\ttrace(\"flambe installed \" + Std.string(stdout.indexOf(\"(empty)\") == -1));\n\t\t\t\t\t}\n\t\t\t\t\t, function (code, stdout, stderr):Void\n\t\t\t\t\t{\n\t\t\t\t\t\ttrace(\"flambe installed \" + Std.string(stdout.indexOf(\"(empty)\") == -1));\n\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\n\t\t\tprocessHelper.checkProcessInstalled(\"haxelib run lime\", [], function (installed:Bool):Void\n\t\t\t{\n\t\t\t\ttrace(\"lime installed \" + Std.string(installed));\n\t\t\t}\n\t\t\t);\n\n            processHelper.checkProcessInstalled(\"git\", [\"--version\"], function (installed:Bool)\n            {\n                trace(\"git installed \" + Std.string(installed));\n            }\n            );\n\n// \t\t\twindow.show();\n\t\t}\n\t\t);\n\n// \t\twindow.on(\"close\", function (e)\n// \t\t{\n// \t\t\tApp.closeAllBrowserWindows();\n// \t\t}\n// \t\t);\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic untyped {\n\t\treturn try o[field] catch( e : Dynamic ) null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : Dynamic, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn cast(x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String = \"\";\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic function new() {}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t'using StringTools' and then acts as an extension to the String class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cs\n@:keep\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlEncode( s : String ) : String untyped {\n\t\t#if flash9\n\t\t\treturn __global__[\"encodeURIComponent\"](s);\n\t\t#elseif flash\n\t\t\treturn _global[\"escape\"](s);\n\t\t#elseif neko\n\t\t\treturn new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn s.__URLEncode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLEncoder.encode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn cs.system.Uri.EscapeUriString(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlDecode( s : String ) : String untyped {\n\t\t#if flash9\n\t\t\treturn __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif flash\n\t\t\treturn _global[\"unescape\"](s);\n\t\t#elseif neko\n\t\t\treturn new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn cs.system.Uri.UnescapeDataString(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: htmlUnescape(htmlEscape(s)) == s\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is null, the result is unspecified.\n\n\t\tIf `start` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is null, the result is unspecified.\n\n\t\tIf `end` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String \"\", or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for ltrim(rtrim(s)).\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String \"\", `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String \"\", `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits length equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash9\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`.\n\n\t\tThis method is faster than String.charCodeAt() on most platforms.\n\t\tHowever, unlike String.charCodeAt(), the result is unspecified if\n\t\t`index` is negative or exceeds `s.length`.\n\n\t\tThis operation is not guaranteed to work if `s` contains the \\0\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int untyped {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn s.cca(index);\n\t\t#elseif flash9\n\t\treturn s.cca(index);\n\t\t#elseif flash\n\t\treturn s[\"cca\"](index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(untyped s[index], Int) : -1;\n\t\t#elseif js\n\t\t\t#if mt\n\t\treturn (untyped s).cca(index);\n\t\t\t#else\n\t\treturn (untyped s).charCodeAt(index);\n\t\t\t#end\n\t\t#else\n\t\treturn s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash9 || cpp)\n\t\treturn c == 0;\n\t\t#elseif flash8\n\t\treturn c <= 0; // fast NaN\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif neko\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static function getClass<T>( o : T ) : Class<T> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\tvar a : Array<String> = untyped e.__constructs__;\n\t\treturn a.copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped e.__empty_constructs__;\n\t}\n\n}\n\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum XmlType {\n}\n\n@:coreApi class Xml {\n\n\tpublic static var Element(default,null) : XmlType;\n\tpublic static var PCData(default,null) : XmlType;\n\tpublic static var CData(default,null) : XmlType;\n\tpublic static var Comment(default,null) : XmlType;\n\tpublic static var DocType(default,null) : XmlType;\n\tpublic static var ProcessingInstruction(default,null) : XmlType;\n\tpublic static var Document(default,null) : XmlType;\n\n\tpublic var nodeType(default,null) : XmlType;\n\tpublic var nodeName(get,set) : String;\n\tpublic var nodeValue(get,set) : String;\n\tpublic var parent(get,null) : Xml;\n\n\tvar _nodeName : String;\n\tvar _nodeValue : String;\n\tvar _attributes : haxe.ds.StringMap<String>;\n\tvar _children : Array<Xml>;\n\tvar _parent : Xml;\n\n\tpublic static function parse( str : String ) : Xml {\n\t\treturn haxe.xml.Parser.parse(str);\n\t}\n\n\tprivate function new() : Void {\n\t}\n\n\tpublic static function createElement( name : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.Element;\n\t\tr._children = new Array();\n\t\tr._attributes = new haxe.ds.StringMap();\n\t\tr.set_nodeName( name );\n\t\treturn r;\n\t}\n\n\tpublic static function createPCData( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.PCData;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createCData( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.CData;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createComment( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.Comment;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createDocType( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.DocType;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createProcessingInstruction( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.ProcessingInstruction;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createDocument() : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.Document;\n\t\tr._children = new Array();\n\t\treturn r;\n\t}\n\n\tprivate function get_nodeName() : String {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _nodeName;\n\t}\n\n\tprivate function set_nodeName( n : String ) : String {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _nodeName = n;\n\t}\n\n\tprivate function get_nodeValue() : String {\n\t\tif( nodeType == Xml.Element || nodeType == Xml.Document )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _nodeValue;\n\t}\n\n\tprivate function set_nodeValue( v : String ) : String {\n\t\tif( nodeType == Xml.Element || nodeType == Xml.Document )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _nodeValue = v;\n\t}\n\n\tprivate function get_parent() : Xml {\n\t\treturn _parent;\n\t}\n\n\tpublic function get( att : String ) : String {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _attributes.get( att );\n\t}\n\n\tpublic function set( att : String, value : String ) : Void {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\t_attributes.set( att, value );\n\t}\n\n\tpublic function remove( att : String ) : Void{\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\t_attributes.remove( att );\n\t}\n\n\tpublic function exists( att : String ) : Bool {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _attributes.exists( att );\n\t}\n\n\tpublic function attributes() : Iterator<String> {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _attributes.keys();\n\t}\n\n\tpublic function iterator() : Iterator<Xml> {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\treturn untyped {\n\t\t\tcur: 0,\n\t\t\tx: this._children,\n\t\t\thasNext : function(){\n\t\t\t\treturn __this__.cur < __this__.x.length;\n\t\t\t},\n\t\t\tnext : function(){\n\t\t\t\treturn __this__.x[__this__.cur++];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function elements() : Iterator<Xml> {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\treturn untyped {\n\t\t\tcur: 0,\n\t\t\tx: this._children,\n\t\t\thasNext : function() {\n\t\t\t\tvar k = __this__.cur;\n\t\t\t\tvar l = __this__.x.length;\n\t\t\t\twhile( k < l ) {\n\t\t\t\t\tif( __this__.x[k].nodeType == Xml.Element )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tk += 1;\n\t\t\t\t}\n\t\t\t\t__this__.cur = k;\n\t\t\t\treturn k < l;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\tvar k = __this__.cur;\n\t\t\t\tvar l = __this__.x.length;\n\t\t\t\twhile( k < l ) {\n\t\t\t\t\tvar n = __this__.x[k];\n\t\t\t\t\tk += 1;\n\t\t\t\t\tif( n.nodeType == Xml.Element ) {\n\t\t\t\t\t\t__this__.cur = k;\n\t\t\t\t\t\treturn n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function elementsNamed( name : String ) : Iterator<Xml> {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\treturn untyped {\n\t\t\tcur: 0,\n\t\t\tx: this._children,\n\t\t\thasNext : function() {\n\t\t\t\tvar k = __this__.cur;\n\t\t\t\tvar l = __this__.x.length;\n\t\t\t\twhile( k < l ) {\n\t\t\t\t\tvar n = __this__.x[k];\n\t\t\t\t\tif( n.nodeType == Xml.Element && n._nodeName == name )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\t__this__.cur = k;\n\t\t\t\treturn k < l;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\tvar k = __this__.cur;\n\t\t\t\tvar l = __this__.x.length;\n\t\t\t\twhile( k < l ) {\n\t\t\t\t\tvar n = __this__.x[k];\n\t\t\t\t\tk++;\n\t\t\t\t\tif( n.nodeType == Xml.Element && n._nodeName == name ) {\n\t\t\t\t\t\t__this__.cur = k;\n\t\t\t\t\t\treturn n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function firstChild() : Xml {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\treturn _children[0];\n\t}\n\n\tpublic function firstElement() : Xml {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\tvar cur = 0;\n\t\tvar l = _children.length;\n\t\twhile( cur < l ) {\n\t\t\tvar n = _children[cur];\n\t\t\tif( n.nodeType == Xml.Element )\n\t\t\t\treturn n;\n\t\t\tcur++;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic function addChild( x : Xml ) : Void {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\tif( x._parent != null ) x._parent._children.remove(x);\n\t\tx._parent = this;\n\t\t_children.push( x );\n\t}\n\n\tpublic function removeChild( x : Xml ) : Bool {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\tvar b = _children.remove( x );\n\t\tif( b )\n\t\t\tx._parent = null;\n\t\treturn b;\n\t}\n\n\tpublic function insertChild( x : Xml, pos : Int ) : Void {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\tif( x._parent != null ) x._parent._children.remove(x);\n\t\tx._parent = this;\n\t\t_children.insert( pos, x );\n\t}\n\n\tpublic function toString() : String {\n\t\tif( nodeType == Xml.PCData )\n\t\t\treturn StringTools.htmlEscape(_nodeValue);\n\t\tif( nodeType == Xml.CData )\n\t\t\treturn \"<![CDATA[\"+_nodeValue+\"]]>\";\n\t\tif( nodeType == Xml.Comment )\n\t\t\treturn \"<!--\"+_nodeValue+\"-->\";\n\t\tif( nodeType == Xml.DocType )\n\t\t\treturn \"<!DOCTYPE \"+_nodeValue+\">\";\n\t\tif( nodeType == Xml.ProcessingInstruction )\n\t\t\treturn \"<?\"+_nodeValue+\"?>\";\n\t\tvar s = new StringBuf();\n\n\t\tif( nodeType == Xml.Element ) {\n\t\t\ts.add(\"<\");\n\t\t\ts.add(_nodeName);\n\t\t\tfor( k in _attributes.keys() ){\n\t\t\t\ts.add(\" \");\n\t\t\t\ts.add(k);\n\t\t\t\ts.add(\"=\\\"\");\n\t\t\t\ts.add(_attributes.get(k));\n\t\t\t\ts.add(\"\\\"\");\n\t\t\t}\n\t\t\tif( _children.length == 0 ) {\n\t\t\t\ts.add(\"/>\");\n\t\t\t\treturn s.toString();\n\t\t\t}\n\t\t\ts.add(\">\");\n\t\t}\n\n\t\tfor( x in iterator() )\n\t\t\ts.add(x.toString());\n\n\t\tif( nodeType == Xml.Element ) {\n\t\t\ts.add(\"</\");\n\t\t\ts.add(_nodeName);\n\t\t\ts.add(\">\");\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\tXml.Element = \"element\";\n\t\tXml.PCData = \"pcdata\";\n\t\tXml.CData = \"cdata\";\n\t\tXml.Comment = \"comment\";\n\t\tXml.DocType = \"doctype\";\n\t\tXml.ProcessingInstruction = \"processingInstruction\";\n\t\tXml.Document = \"document\";\n\t}\n\n}\n","package autoformat;\nimport js.node.Fs;\nimport js.node.Path;\n\nimport haxe.io.Bytes;\nimport haxeprinter.Printer;\nimport hxparse.NoMatch;\nimport hxparse.Unexpected;\nimport js.Node;\nimport tjson.TJSON;\n\n/**\n * ...\n * @author David Peek\n */\nclass HaxePrinter\n{\n\tpublic static function formatSource(source:String)\n\t{\n\t\tvar input = byte.ByteData.ofString(source);\n\t\tvar parser = new haxeparser.HaxeParser(input, \"\");\n\n\t\tvar ast = try {\n\t\t\tparser.parse();\n\t\t} catch(e:NoMatch<Dynamic>) {\n\t\t\tthrow e.pos.format(input) + \": Unexpected \" +e.token.tok;\n\t\t} catch(e:Unexpected<Dynamic>) {\n\t\t\tthrow e.pos.format(input) + \": Unexpected \" + e.token.tok;\n\t\t}\n\n\t\tvar printer = new Printer();\n\t\t\n// \t\tvar options:NodeFsFileOptions = { };\n// \t\toptions.encoding = \"utf8\";\n\t\tprinter.config = TJSON.parse(Fs.readFileSync(Path.join(\"core\", \"config\", \"autoformat.json\"), \"utf8\"));\n\t\treturn printer.printAST(ast);\n\t}\n}","package autoformat;\nimport js.node.Path;\nimport cm.Editor;\nimport js.Node;\nimport menu.BootstrapMenu;\nimport tabmanager.TabManager;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass HaxePrinterLoader\n{\n\tpublic static function load():Void\n\t{\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n\t\tBootstrapMenu.getMenu(\"Source\", 5).addMenuItem(\"Autoformat\", 1, function ()\n\t\t{\n\t\t\tif (Path.extname(tabManagerInstance.getCurrentDocumentPath()) == \".hx\") \n\t\t\t{\n\t\t\t\tvar data:String = Editor.editor.getValue();\n\t\t\t\t\n\t\t\t\tif (data != \"\") \n\t\t\t\t{\n\t\t\t\t\tdata = HaxePrinter.formatSource(data);\n\t\t\t\t\tEditor.editor.setValue(data);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, \"Ctrl-Shift-F\");\n\t\t\n\t\tBootstrapMenu.getMenu(\"Options\").addMenuItem(\"Open autoformat configuration file\", 1, tabManagerInstance.openFileInNewTab.bind(Path.join(\"core\", \"config\",\"autoformat.json\")));\n\t}\n\t\n}","package bootstrap;\nimport js.Browser;\nimport js.html.ButtonElement;\nimport watchers.LocaleWatcher;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass ButtonManager\n{\n\tstatic var instance:ButtonManager = null;\n\t\n\tpublic function new()\n\t{\n\t\t\t\n\t}\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new ButtonManager();\n\t\t}\n\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function createButton(text:String, ?disabled:Bool = false, ?hide:Bool = false, ?primary:Bool = false):ButtonElement\n\t{\n\t\tvar button = Browser.document.createButtonElement();\n\t\tbutton.type = \"button\";\n\t\t\n\t\tif (primary) \n\t\t{\n\t\t\tbutton.className = \"btn btn-primary\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tbutton.className = \"btn btn-default\";\n\t\t}\n\t\t\n\t\tbutton.setAttribute(\"localeString\", text);\n\t\tbutton.textContent = LocaleWatcher.getStringSync(text);\n\t\t\n\t\tif (disabled) \n\t\t{\n\t\t\tbutton.classList.add(\"disabled\");\n\t\t}\n\t\t\n\t\tif (hide) \n\t\t{\n\t\t\tbutton.setAttribute(\"data-dismiss\", \"modal\");\n\t\t}\n\t\t\n\t\treturn button;\n\t}\n}","package bootstrap;\nimport js.Browser;\nimport js.html.DivElement;\nimport js.html.InputElement;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass InputGroup\n{\n\tvar inputGroup:DivElement;\n\tvar input:InputElement;\n\n\tpublic function new() \n\t{\n\t\tinputGroup = Browser.document.createDivElement();\n\t\tinputGroup.className = \"input-group\";\n\t\t\n\t\tinput = Browser.document.createInputElement();\n\t\tinput.type = \"text\";\n\t\tinput.className = \"form-control\";\n\t\tinputGroup.appendChild(input);\n\t}\n\t\n\tpublic function getInput():InputElement \n\t{\n\t\treturn input;\n\t}\n\t\n\tpublic function getElement():DivElement\n\t{\n\t\treturn inputGroup;\n\t}\n\t\n\t\n}","package bootstrap;\nimport js.Browser;\nimport js.html.ButtonElement;\nimport js.html.SpanElement;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass InputGroupButton extends InputGroup\n{\n\tvar span:SpanElement;\n\tvar button:ButtonElement;\n\t\n\tpublic function new(text:String) \n\t{\n\t\tsuper();\n\t\t\n\t\tspan = Browser.document.createSpanElement();\n\t\tspan.className = \"input-group-btn\";\n\t\t\n\t\tvar buttonManager = ButtonManager.get();\n\t\t\n\t\tbutton = buttonManager.createButton(text);\n\t\tspan.appendChild(button);\n\t\t\n\t\tinputGroup.appendChild(span);\n\t}\n\t\n\tpublic function getSpan():SpanElement\n\t{\n\t\treturn span;\n\t}\n\t\n\tpublic function getButton():ButtonElement\n\t{\n\t\treturn button;\n\t}\n\t\n}","package bootstrap;\nimport js.Browser;\nimport js.html.AnchorElement;\nimport js.html.DivElement;\nimport js.html.HeadingElement;\nimport js.html.ParagraphElement;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass ListGroup\n{\n\tvar listGroup:DivElement;\n\tvar items:Array<AnchorElement> = [];\n\n\tpublic function new() \n\t{\n\t\tlistGroup = Browser.document.createDivElement();\n\t\tlistGroup.className = \"list-group\";\n\t}\n\n\tpublic function addItem(text:String, description:String, ?onClick:Dynamic)\n\t{\n\t\tvar a:AnchorElement = Browser.document.createAnchorElement();\n\t\ta.href = \"#\";\n\t\ta.className = \"list-group-item\";\n\t\t\n\t\tif (onClick != null) \n\t\t{\n\t\t\ta.onclick = onClick;\n\t\t}\n\t\t\n\t\tvar h4:HeadingElement = cast(Browser.document.createElement(\"h4\"), HeadingElement);\n\t\th4.className = \"list-group-item-heading\";\n\t\th4.textContent = text;\n\t\ta.appendChild(h4);\n\t\t\n\t\tvar p:ParagraphElement = Browser.document.createParagraphElement();\n\t\tp.className = \"list-group-item-text\";\n\t\tp.textContent = description;\n\t\ta.appendChild(p);\n\t\t\n        items.push(a);\n\t\tlistGroup.appendChild(a);\n\t}\n\t\n    public function clear():Void\n    {\n        //http://jsperf.com/removechildren/8\n        \n        var len = listGroup.childNodes.length;\n        \n        while (len-- > 0) \n        {\n        \tlistGroup.removeChild(listGroup.lastChild);\n        };\n        \n        items = [];\n    }\n    \n    public function getItems():Array<AnchorElement>\n    {\n        return items;\n    }\n    \n\tpublic function getElement():DivElement\n\t{\n\t\treturn listGroup;\n\t}\n\t\n}","package bootstrap;\nimport js.Browser;\nimport js.html.DivElement;\nimport js.html.InputElement;\nimport js.html.LabelElement;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass RadioElement\n{\n\tvar element:DivElement;\n\tvar input:InputElement;\n\n\tpublic function new(_name:String, _value:String, _text:String, ?_onChange:Dynamic) \n\t{\n\t\telement = Browser.document.createDivElement();\n\t\telement.className = \"radio\";\n\t\t\n\t\tvar label:LabelElement = Browser.document.createLabelElement();\n\t\telement.appendChild(label);\n\t\t\n\t\tinput = Browser.document.createInputElement();\n\t\tinput.type = \"radio\";\n\t\tinput.name = _name;\n\t\tinput.value = _value;\n\t\t\n\t\tinput.onchange = function (e):Void \n\t\t{\n\t\t\tif (_onChange != null) \n\t\t\t{\n\t\t\t\t_onChange();\n\t\t\t}\n\t\t};\n\t\t\n\t\tlabel.appendChild(input);\n\t\t\n\t\tlabel.appendChild(Browser.document.createTextNode(_text));\n\t\t\n\t\telement.appendChild(label);\n\t}\n\t\n\tpublic function getInput():InputElement\n\t{\n\t\treturn input;\n\t}\n\t\n\tpublic function getElement():DivElement\n\t{\n\t\treturn element;\n\t}\n\t\n}","package build;\nimport js.node.Path;\nimport js.Node;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass CommandPreprocessor\n{\n\tpublic static function preprocess(command:String, path:String):String\n\t{\n\t\tvar processedCommand:String = command;\n\t\t\n\t\tprocessedCommand = StringTools.replace(processedCommand, \"%path%\", path);\n\t\t\n\t\tvar ereg:EReg = ~/%join%[(](.+)[)]/;\n\t\t\n\t\tif (ereg.match(processedCommand))\n\t\t{\n\t\t\tvar matchedString:String = ereg.matched(1);\n\t\t\tvar args = matchedString.split(\",\");\n\t\t\t\n\t\t\tprocessedCommand = StringTools.replace(processedCommand, ereg.matched(0), Path.join(args[0], args[1]));\n\t\t}\n\t\t\n\t\treturn processedCommand;\n\t}\t\n}","package build;\nimport core.HaxeHelper;\nimport js.Node;\nimport parser.ClasspathWalker;\nimport projectaccess.ProjectAccess;\nimport core.ProcessHelper;\nimport core.Utils;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass Hxml\n{\n\tpublic static function checkHxml(dirname:String, filename:String, hxmlData:String, ?onComplete:Dynamic)\n\t{\n\t\tvar useCompilationServer:Bool = true;\n\t\tvar startCommandLine:Bool = false;\n\t\t\n\t\tif (hxmlData != null) \n\t\t{\n\t\t\tif (hxmlData.indexOf(\"-cmd\") != -1) \n\t\t\t{\n\t\t\t\tstartCommandLine = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (hxmlData.indexOf(\"-cpp\") != -1) \n\t\t\t{\n\t\t\t\tuseCompilationServer = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tbuildHxml(dirname, filename, useCompilationServer, startCommandLine, onComplete);\n\t}\n\t\n\tpublic static function buildHxml(dirname:String, filename:String, ?useCompilationServer:Bool = true, ?startCommandLine:Bool = false, ?onComplete:Dynamic)\n\t{\n\t\tvar params:Array<String> = [];\n\t\t\n\t\tif (startCommandLine) \n\t\t{\n\t\t\tswitch (Utils.os) \n\t\t\t{\n\t\t\t\tcase Utils.WINDOWS:\n\t\t\t\t\tparams.push(\"start\");\n\t\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar pathToHaxe = HaxeHelper.getPathToHaxe();\n\t\t\t\n\t\tparams = params.concat([pathToHaxe, \"--cwd\", dirname]);\n\t\t\n\t\tif (useCompilationServer)\n\t\t{\n\t\t\tparams = params.concat([\"--connect\", \"5000\"]);\n\t\t}\n\t\t\n\t\tparams.push(filename);\n\t\t\n\t\tvar process:String = params.shift();\n\t\t\n\t\tvar cwd = ProjectAccess.path;\n\t\t\n\t\tvar processHelper = ProcessHelper.get();\n\t\t\n\t\tprocessHelper.runProcessAndPrintOutputToConsole(process, params, cwd, onComplete);\n\t}\n}","package byte.js;\n\ntypedef NativeByteRepresentation = js.html.Uint8Array;\n\nabstract ByteData(NativeByteRepresentation) {\n\t\n\tpublic var length(get, never):Int;\n\t#if as3 public #end\n\tfunction get_length():Int return this.length;\n\n\tpublic var reader(get, never):LittleEndianReader;\n\t#if as3 public #end\n\tinline function get_reader():LittleEndianReader return new LittleEndianReader(new ByteData(this));\n\n\tpublic var writer(get, never):LittleEndianWriter;\n\t#if as3 public #end\n\tinline function get_writer():LittleEndianWriter return new LittleEndianWriter(new ByteData(this));\n\t\n\tpublic inline function new(data:NativeByteRepresentation) {\n\t\tthis = data;\n\t}\n\t\t\n\tpublic inline function readByte(pos:Int):Int {\n\t\treturn this[pos];\n\t}\n\t\n\tpublic inline function writeByte(pos:Int, v:Int):Void {\n\t\tthis[pos] = v & 0xFF;\n\t}\n\t\n\tpublic function readString(pos:Int, len:Int):String {\n\t\tvar buf = new StringBuf();\n\t\tfor (i in pos...pos + len) buf.addChar(this[i]);\n\t\treturn buf.toString();\n\t}\n\t\n\tstatic public function alloc(length:Int):ByteData {\n\t\tvar b = new js.html.Uint8Array(length);\n\t\treturn new ByteData(b);\n\t}\n\t\t\n\tstatic public function ofString(s:String):ByteData {\n\t\tvar a = new js.html.Uint8Array(s.length);\n\t\tfor(i in 0...s.length) a[i] = StringTools.fastCodeAt(s, i);\n\t\treturn new ByteData(a);\n\t}\n}","package cm;\nimport core.Completion;\nimport jQuery.JQuery;\nimport js.Browser;\nimport js.html.DivElement;\nimport js.html.KeyboardEvent;\nimport js.html.TextAreaElement;\nimport js.Node;\nimport tabmanager.TabManager;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass ColorPreview\n{\n\tstatic var preview:DivElement;\n\tstatic var startScroll:Dynamic;\n\tstatic var top:Int = 0;\n\tstatic var left:Int = 0;\n\tstatic var wordStart:CodeMirror.Pos;\n\tstatic var wordEnd:CodeMirror.Pos;\n\tstatic var startingFormat:String;\n\tstatic var isColorPickerShown:Bool;\n\tstatic var applyChanges:Bool;\n\tstatic var startingColor:String;\n\n\tpublic static function create(cm:CodeMirror):Void \n\t{\n\t\tpreview = cast(Browser.document.getElementsByClassName(\"colorPreview\")[0], DivElement);\n\t\tstartScroll = cm.getScrollInfo();\n\t\t\n\t\tuntyped new JQuery(\".colorPreview\").spectrum( \n\t\t{ \n\t\t\tshowButtons: false,\n\t\t\t\n\t\t\tshow: function ():Void \n\t\t\t{\n\t\t\t\tisColorPickerShown = true;\n\t\t\t\tapplyChanges = true;\n\t\t\t\tuntyped new JQuery(\".colorPreview\").spectrum(\"set\", preview.style.backgroundColor);\n\t\t\t},\n\t\t\t\n\t\t\thide: function ():Void \n\t\t\t{\n\t\t\t\tisColorPickerShown = false;\n\t\t\t},\n\t\t\t\n\t\t\tchange: function (color):Void \n\t\t\t{\n\t\t\t\tif (applyChanges) \n\t\t\t\t{\n\t\t\t\t\tvar colorString = color.toHex();\n\t\t\t\t\tcm.replaceRange(startingFormat + colorString, wordStart, wordEnd);\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tpreview.style.backgroundColor = startingColor;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tmove: function (color):Void \n\t\t\t{\n\t\t\t\tvar colorString = color.toHex();\n\t\t\t\tpreview.style.backgroundColor = \"#\" + colorString;\n\t\t\t}\n\t\t} \n\t\t);\n\t\t\n\t\tBrowser.window.onkeyup = function (e:KeyboardEvent):Void \n\t\t{\n\t\t\tapplyChanges = false;\n\t\t\t\n\t\t\tif (e.keyCode == 27 && preview.style.display != \"none\") \n\t\t\t{\n\t\t\t\tuntyped new JQuery(\".colorPreview\").spectrum(\"hide\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tnew JQuery(Browser.document).click(function (e):Void \n\t\t{\n\t\t\tif (!Std.is(Browser.document.activeElement, TextAreaElement))\n\t\t\t{\n\t\t\t\tapplyChanges = false;\n\t\t\t\tnew JQuery(preview).fadeOut(250);\n\t\t\t\tuntyped new JQuery(\".colorPreview\").spectrum(\"hide\");\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic static function update(cm:CodeMirror):Void \n\t{\n\t\tvar completionInstance = Completion.get();\n\t\t\n\t\tvar wordData = completionInstance.getCurrentWord(cm, { word:~/[A-Fx0-9#]+$/i }, cm.getCursor());\n\t\t\n\t\tvar word = wordData.word;\n\t\tvar color:String = null;\n\t\t\n\t\tif (word != null && word.length > 2) \n\t\t{\n\t\t\tif (!isColorPickerShown) \n\t\t\t{\n\t\t\t\twordStart = wordData.from;\n\t\t\t\twordEnd = wordData.to;\n\t\t\t\t\n\t\t\t\tif (StringTools.startsWith(word, \"0x\")) \n\t\t\t\t{\n\t\t\t\t\tcolor = word.substr(2);\n\t\t\t\t\tstartingFormat = \"0x\";\n\t\t\t\t}\n\t\t\t\telse if (StringTools.startsWith(word, \"#\"))\n\t\t\t\t{\n\t\t\t\t\tcolor = word.substr(1);\n\t\t\t\t\tstartingFormat = \"#\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (color != null) \n\t\t\t\t{\n\t\t\t\t\tstartScroll = cm.getScrollInfo();\n\t\t\t\t\tvar pos = cm.cursorCoords(null);\n\t\t\t\t\ttop = pos.bottom;\n\t\t\t\t\tleft = pos.left;\n\t\t\t\t\tstartingColor = \"#\" + color;\n\t\t\t\t\tpreview.style.backgroundColor = startingColor;\n\t\t\t\t\tnew JQuery(preview).animate( { left: Std.string(pos.left) + \"px\", top: Std.string(pos.bottom) + \"px\" } );\n\t\t\t\t\t\n\t\t\t\t\tif (preview.style.display == \"none\")\n\t\t\t\t\t{\n\t\t\t\t\t\tnew JQuery(preview).fadeIn(250);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tnew JQuery(preview).fadeOut(250);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tnew JQuery(preview).fadeOut(250);\n\t\t\tuntyped new JQuery(\".colorPreview\").spectrum(\"hide\");\n\t\t}\n\t}\n\t\n\tpublic static function scroll(cm:CodeMirror):Void \n\t{\n\t\tif (preview.style.display != \"none\") \n\t\t{\t\t\t\n\t\t\tvar curScroll = cm.getScrollInfo();\n\t\t\tvar editor = cm.getWrapperElement().getBoundingClientRect();\n\t\t\tvar newTop = top + startScroll.top - curScroll.top;\n\t\t\t\n\t\t\tvar point = newTop - new JQuery().scrollTop();\n\t\t\tif (point <= editor.top || point >= editor.bottom)\n\t\t\t{\n\t\t\t\tnew JQuery(preview).fadeOut(250);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tpreview.style.top = newTop + \"px\";\n\t\t\tpreview.style.left = (left + startScroll.left - curScroll.left) + \"px\";\n\t\t}\n\t}\n\t\n}","package cm;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass ERegPreview\n{\n\tstatic var markers:Array<CodeMirror.MarkedText> = [];\n\t\n\tpublic static function update(cm:CodeMirror):Void \n\t{\n\t\tvar lineData = cm.getLine(cm.getCursor().line);\n\t\t\t\n\t\tvar ereg:EReg = ~/~\\/(.)+\\/[gimsu]+/;\n\t\t\n\t\tvar foundEreg:String = null;\n\t\tvar foundEregOptions:String = null;\n\t\t\n\t\tif (ereg.match(lineData))\n\t\t{\t\t\t\n\t\t\tvar str = ereg.matched(0);\n\t\t\tstr = StringTools.trim(str.substr(2, str.length - 2));\n\t\t\tvar index = str.lastIndexOf(\"/\");\n\t\t\t\n\t\t\tfoundEreg = str.substr(0, index);\n\t\t\tfoundEregOptions = str.substr(index + 1);\n\t\t}\n\t\t\n\t\tfor (marker in markers)\n\t\t{\n\t\t\tmarker.clear();\n\t\t}\n\t\t\n\t\tmarkers = [];\n\t\t\n\t\tif (foundEreg != null) \n\t\t{\n\t\t\ttry\n            {\n                var ereg = new EReg(foundEreg, foundEregOptions);\n                ereg.map(cm.getValue(), function (matchedEreg:EReg):String \n                {\n                    var pos = cm.posFromIndex(matchedEreg.matchedPos().pos);\n                    var pos2 = cm.posFromIndex(matchedEreg.matchedPos().pos + matchedEreg.matchedPos().len);\n                    markers.push(cm.markText(pos, pos2, {className: \"showRegex\"}));\n                    return \"\";\n                }\n                );\n            }\n            catch (unknown:Dynamic)\n            {\n                trace(unknown);\n            }\n\t\t}\n\t}\n}","package cm;\n#if !macro\nimport js.Error;\nimport js.node.Path;\nimport js.node.Fs;\nimport projectaccess.Project.FileData;\nimport parser.RegexParser;\nimport CodeMirror.Pos;\nimport core.Completion;\nimport core.FunctionParametersHelper;\nimport core.HaxeLint;\nimport core.HaxeParserProvider;\nimport core.Helper;\nimport core.Hotkeys;\nimport core.OutlinePanel;\nimport haxe.Json;\nimport haxe.Timer;\nimport jQuery.JQuery;\nimport js.Browser;\nimport js.html.DivElement;\nimport js.html.KeyboardEvent;\nimport js.html.svg.TextElement;\nimport js.html.TextAreaElement;\nimport js.Lib;\nimport js.Node;\nimport menu.BootstrapMenu;\nimport parser.OutlineHelper;\nimport projectaccess.ProjectAccess;\nimport tabmanager.TabManager;\nimport tjson.TJSON;\n#end\n\n#if macro\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport sys.FileSystem;\n#end\n    \n/**\n * ...\n * @author AS3Boyan\n */\nclass Editor\n{\t\n\t#if !macro\n\t\n\tpublic static var editor:CodeMirror;\n\tpublic static var regenerateCompletionOnDot:Bool;\n\t\n\tpublic static function load():Void\n\t{\t\t\n\t\tregenerateCompletionOnDot = true;\n\t\t\n// \t\tvar readFileOptions:NodeFsFileOptions = {};\n// \t\treadFileOptions.encoding = \"utf8\";\n\t\t\n\t\tvar options:Dynamic = { };\n\t\t\n\t\ttry \n\t\t{\n\t\t\toptions = TJSON.parse(Fs.readFileSync(Path.join(\"core\", \"config\", \"editor.json\"), \"utf8\"));\n\t\t}\n\t\tcatch (err:Error)\n\t\t{\n\t\t\ttrace(err);\n\t\t}\n\t\t\n\t\twalk(options);\n\t\t\n\t\tvar tabManagerInstance = TabManager.get();\n\t\tvar completionInstance = Completion.get();\n\t\tvar xmlInstance = cm.Xml.get();\n\t\t\n\t\toptions.extraKeys = \n\t\t{\n\t\t\t\".\" : \n\t\t\t\tfunction passAndHint(cm) \n\t\t\t\t{\n\t\t\t\t\tif (tabManagerInstance.getCurrentDocument().getMode().name == \"haxe\") \n\t\t\t\t\t{\n\t\t\t\t\t\tvar completionActive = editor.state.completionActive;\n\t\t\t\t\t\tvar completionType = completionInstance.getCompletionType();\n                        \n\t\t\t\t\t\tif ((completionType == CompletionType.REGULAR || completionType == CompletionType.CLASSLIST) && completionActive != null && completionActive.widget != null) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcompletionActive.widget.pick();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn CodeMirrorStatic.Pass;\n\t\t\t\t},\n\t\t\t\";\":\n\t\t\t\tfunction passAndHint(cm:CodeMirror) \n\t\t\t\t{\n\t\t\t\t\tvar cursor = editor.getCursor();\n\t\t\t\t\tvar ch = editor.getRange(cursor, { line: cursor.line, ch: cursor.ch +1 } );\n\t\t\t\t\t\n\t\t\t\t\tif (ch == \";\") \n\t\t\t\t\t{\n\t\t\t\t\t\tcm.execCommand(\"goCharRight\");\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\treturn CodeMirrorStatic.Pass;\n\t\t\t\t\t}\n\t\t\t\t},\n           \t\"=\":\n\t\t\t\tfunction passAndHint(cm2:CodeMirror) \n\t\t\t\t{\n                    var mode = tabManagerInstance.getCurrentDocument().getMode().name;\n                    \n\t\t\t\t\tif (completionInstance.getCompletionType() == CompletionType.REGULAR && mode == \"haxe\" || mode == \"xml\")\n\t\t\t\t\t{\n\t\t\t\t\t\tvar completionActive = cm2.state.completionActive;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (completionActive != null && completionActive.widget != null) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcompletionActive.widget.pick();\n\t\t\t\t\t\t}\n                            \n                        if (mode == \"xml\")\n                        {\n                            var cur = cm2.getCursor();\n                            cm2.replaceRange(\"=\\\"\\\"\", cur, cur);\n                            cm2.execCommand(\"goCharLeft\");\n                            xmlInstance.completeIfInTag(cm2);\n\t\t\t\t\t\t\treturn null;\n                        }\n                        else\n                        {\n                            return CodeMirrorStatic.Pass;\n                        }\n                        \n\t\t\t\t\t}\n\t\t\t\t\telse\n                    {\n                        return CodeMirrorStatic.Pass;\n                    }\n\t\t\t\t\t\n\t\t\t\t},\n//             \"\\\\\\'(\\\\\\'\":\n//             \tfunction passAndHint(cm2:CodeMirror)\n//             \t{\n//                     trace(\"test\");\n//                     cm.Xml.completeIfInTag(cm2);\n//                     untyped __js__(\"return CodeMirror.Pass\");\n//                 },\n            \t\n            \"\\\\\\'<\\\\\\'\":\n            \tfunction passAndHint(cm2:CodeMirror)\n            \t{\n                    xmlInstance.completeAfter(cm2);\n                    return CodeMirrorStatic.Pass;\n                },\n            \t\n            \"\\\\\\'/\\\\\\'\":\n            \tfunction passAndHint(cm2:CodeMirror)\n            \t{\n                    xmlInstance.completeIfAfterLt(cm2);\n                    return CodeMirrorStatic.Pass;\n                },\n            \"\\\\\\' \\\\\\'\":\n                function passAndHint(cm2:CodeMirror)\n            \t{\n                    xmlInstance.completeIfInTag(cm2);\n                    return CodeMirrorStatic.Pass;\n                },\n            \"Ctrl-J\": \"toMatchingTag\"\n\t\t}\n\t\t\n\t\teditor = CodeMirror.fromTextArea(Browser.document.getElementById(\"code\"), options);\n        \n\t\teditor.on(\"keypress\", function (cm:CodeMirror, e:KeyboardEvent):Void \n\t\t{\n\t\t\tif (e.shiftKey) \n\t\t\t{\n                if (e.keyCode == 40 || e.keyCode == 62)\n                {\n                    if (completionInstance.getCompletionType() == CompletionType.REGULAR && tabManagerInstance.getCurrentDocument().getMode().name == \"haxe\")\n                    {\n                        var completionActive = editor.state.completionActive;\n\n                        if (completionActive != null && completionActive.widget != null) \n                        {\n                            completionActive.widget.pick();\n                        }\n                    }\n                }\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\tnew JQuery(\"#editor\").hide(0);\n\t\t\n\t\tloadThemes(getThemeList(), loadTheme);\n\t\t\n\t\tvar value:String = \"\";\n\t\tvar map = CodeMirror.keyMap.sublime;\n\t\tvar mapK = untyped CodeMirror.keyMap[\"sublime-Ctrl-K\"];\n\t\t\n\t\t  for (key in Reflect.fields(map)) \n\t\t  {\n\t\t\t  //&& !/find/.test(map[key])\n\t\t\tif (key != \"Ctrl-K\" && key != \"fallthrough\")\n\t\t\t{\n\t\t\t\tvalue += \"  \\\"\" + key + \"\\\": \\\"\" + Reflect.field(map, key) + \"\\\",\\n\";\n\t\t\t}\n\t\t\t  \n\t\t  }\n\t\t  for (key in Reflect.fields(mapK)) \n\t\t  {\n\t\t\tif (key != \"auto\" && key != \"nofallthrough\")\n\t\t\t{\n\t\t\t\tvalue += \"  \\\"Ctrl-K \" + key + \"\\\": \\\"\" + Reflect.field(mapK, key) + \"\\\",\\n\";\n\t\t\t}\n\t\t\t  \n\t\t  }\n\t\t\n// \t\ttrace(Editor.editor);\n\t\t\n\t\tFs.writeFileSync(Path.join(\"core\", \"bindings.txt\"), value, \"utf8\");\n\t\t\n\t\tBrowser.window.addEventListener(\"resize\", function (e)\n\t\t{\t\t\t\n\t\t\tHelper.debounce(\"resize\", function ():Void \n\t\t\t{\n\t\t\t\teditor.refresh();\n\t\t\t}, 100);\n\t\t\t\n\t\t\tTimer.delay(resize, 50);\n\t\t}\n\t\t);\n\t\t\n\t\tnew JQuery('#thirdNested').on('resize', \n\t\tfunction (event) {       \n\t\t\tvar panels = event.args.panels;\n\t\t\t\n\t\t\tresize();\n\t\t});\n\t\t\n\t\tColorPreview.create(editor);\n\t\t\n\t\teditor.on(\"cursorActivity\", function (cm:CodeMirror)\n\t\t{\n\t\t\tHelper.debounce(\"cursorActivity\", function ():Void \n\t\t\t{\n\t\t\t\tvar functionParametersHelper = FunctionParametersHelper.get();\n\t\t\t\tfunctionParametersHelper.update(cm);\n\t\t\t\tColorPreview.update(cm);\n\t\t\t\tERegPreview.update(cm);\n\t\t\t}, 100);\n\t\t\t\n\t\t\tvar doc = tabManagerInstance.getCurrentDocument();\n\t\t\tif (doc != null)\n\t\t\t{\n\t\t\t\tvar pos = doc.getCursor();\n\t\t\t\tBrowser.document.getElementById(\"status-cursor\").textContent = \"Line \" + Std.string(pos.line + 1) + \", Column \" + Std.string(pos.ch + 1);\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\teditor.on(\"scroll\", function (cm:CodeMirror):Void \n\t\t{\n\t\t\tColorPreview.scroll(editor);\n\t\t}\n\t\t);\n\t\t\n\t\tvar timer:Timer = null;\n\t\t\n\t\tvar basicTypes = [\"Array\", \"Map\", \"StringMap\"];\n\t\t\n// \t\tvar ignoreNewLineKeywords = [\"function\", \"for \", \"while\"];\n\t\t\n\t\teditor.on(\"change\", function (cm:CodeMirror, e:CodeMirror.ChangeEvent):Void \n\t\t{\t\t\t\n            if (e.origin == \"paste\" && (e.from.line - e.to.line) > 0)\n            {\n                for (line2 in e.from.line...e.to.line)\n                {\n\t\t\t\t\tcm.indentLine(line2);                \n                }\n            }\n            \n\t\t\tvar doc = tabManagerInstance.getCurrentDocument();\n\t\t\tvar modeName:String = doc.getMode().name;\n\t\t\t\n\t\t\tif (modeName == \"haxe\") \n\t\t\t{\n\t\t\t\tHelper.debounce(\"change\", function ():Void \n\t\t\t\t{\n\t\t\t\t\tHaxeLint.updateLinting();\n\t\t\t\t}, 100);\n\t\t\t\t\n\t\t\t\tvar cursor = cm.getCursor();\n\t\t\t\tvar data = cm.getLine(cursor.line);\n\t\t\t\t\n\t\t\t\t//if (StringTools.endsWith(e.text[0], \";\")) \n\t\t\t\t//{\n\t\t\t\t\t//var insertNewLine:Bool = true;\n\t\t\t\t\t//\n\t\t\t\t\t//for (keyword in ignoreNewLineKeywords) \n\t\t\t\t\t//{\n\t\t\t\t\t\t//if (data.indexOf(keyword) != -1) \n\t\t\t\t\t\t//{\n\t\t\t\t\t\t\t//insertNewLine = false;\n\t\t\t\t\t\t\t//break;\n\t\t\t\t\t\t//}\n\t\t\t\t\t//}\n\t\t\t\t\t//\n\t\t\t\t\t//cm.execCommand(\"newlineAndIndent\");\n\t\t\t\t//}\n\t\t\t\t\n\t\t\t\tvar lastChar = data.charAt(cursor.ch - 1);\n\t\t\t\t\n\t\t\t\tif (lastChar == \".\")\n                {\n                    triggerCompletion(Editor.editor, true);\n                }\t\n\t\t\t\telse if (data.charAt(cursor.ch - 2) == \"=\" && lastChar == \" \")\n                {\n                    var name = StringTools.trim(data.substring(0, cursor.ch - 2));\n\t\t\t\t\t\n\t\t\t\t\tvar type = null;\n\t\t\t\t\t\n\t\t\t\t\tvar ereg = ~/[a-z_0-9]+$/i;\n\t\t\t\t\t\n\t\t\t\t\tvar start = name.length;\n\t\t\t\t\t\n\t\t\t\t\twhile (start - 1 > 0 && ereg.match(name.charAt(start - 1))) \n\t\t\t\t\t{\n\t\t\t\t\t\tstart--;\n\t\t\t\t\t}\n\n\t\t\t\t\tname = name.substr(start);\n\t\t\t\t\t\n\t\t\t\t\tif (name != \"\" && name.indexOf(\".\") == -1)\n\t\t\t\t\t{\t\t\t\t\t\t\n\t\t\t\t\t\tvar variableDeclarations = RegexParser.getVariableDeclarations(doc.getValue());\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar variableWithExplicitType = [];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (item in variableDeclarations)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (item.type != null)\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvariableWithExplicitType.push(item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tfor (item in variableWithExplicitType)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (name == item.name)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype = item.type;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\t \n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar suggestions = [];\n\t\t\t\t\t\n\t\t\t\t\t\tvar value = doc.getValue();\t\t\n\t\t\t\t\n\t\t\t\t\t\tif (type != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (type == \"Bool\")\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsuggestions = [\"false;\", \"true;\"];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (StringTools.startsWith(type, \"Array<\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsuggestions = [\"[\"];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (type == \"String\")\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsuggestions = [\"\\\"\"];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (type == \"Dynamic\")\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsuggestions = [\"{\"];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar variableWithSameType = [];\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (item in variableWithExplicitType)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (type == item.type)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvariableWithSameType.push(item.name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tfor (item in variableWithSameType)\n\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t~/[\\t ]*editor2[\\t ]*= *(.+)$/gm\n// \t\t\t\t\t\t\t\t~/[\\t ]*editor2[\\t ]*:[a-zA-Z0-9_]*[\\t ]*= *(.+)$/gm\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\tvar ereg = new EReg(\"[\\t ]*\" + item + \"[\\t ]*= *(.+)$\", \"gm\");\n\t\t\t\t\t\t\t\tvar ereg2 = new EReg(\"[\\t ]*\" + item + \"[\\t ]*:[a-zA-Z0-9_<>]*[\\t ]*= *(.+)$\", \"gm\");\n\t\t\t\t\n\t\t\t\t\t\t\t\tereg.map(value, function (ereg3)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar text = StringTools.trim(ereg3.matched(1));\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (text != \"\" && suggestions.indexOf(text) == -1)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tsuggestions.push(text);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\n\t\t\t\t\t\t\t\tereg2.map(value, function (ereg3)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar text = StringTools.trim(ereg3.matched(1));\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (text != \"\" && suggestions.indexOf(text) == -1)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tsuggestions.push(text);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tsuggestions.push(\"new \" + type);\n\t\t\t\t\t\t\tcompletionInstance.showCodeSuggestions(suggestions);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttrace(name);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar ereg = new EReg(\"[\\t ]*\" + name + \"[\\t ]*= *(.+)$\", \"gm\");\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tereg.map(value, function (ereg3)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar text = StringTools.trim(ereg3.matched(1));\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (text != \"\" && suggestions.indexOf(text) == -1)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tsuggestions.push(text);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (suggestions.length > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcompletionInstance.showCodeSuggestions(suggestions);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                }\t\n\t\t\t\telse if (lastChar == \":\")\n\t\t\t\t{\n\t\t\t\t\tif (data.charAt(cursor.ch - 2) == \"@\")\n\t\t\t\t\t{\n\t\t\t\t\t\tcompletionInstance.showMetaTagsCompletion();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pos = {line: cursor.line, ch: cursor.ch - 1};\n\t\t\t\t\t\tvar word = completionInstance.getCurrentWord(editor, {word: ~/[A-Z_0-9\\.]+$/i}, pos);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (word.word == null || word.word != \"default\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar len = 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (word.word != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlen = word.word.length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar dataBeforeWord = data.substring(0, pos.ch - len);\n\t\t\t\t\t\t\tdataBeforeWord = StringTools.trim(dataBeforeWord);\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!StringTools.endsWith(dataBeforeWord, \"case\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcompletionInstance.showClassList();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (lastChar == \"<\")\n\t\t\t\t{\n\t\t\t\t\tfor (type in basicTypes) \n\t\t\t\t\t{\n\t\t\t\t\t\tif (StringTools.endsWith(data.substr(0, cursor.ch - 1), type)) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcompletionInstance.showClassList();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (StringTools.endsWith(data, \"import \")) \n\t\t\t\t{                    \n\t\t\t\t\tcompletionInstance.showClassList(true);\n\t\t\t\t}\n\t\t\t\telse if (StringTools.endsWith(data, \"in )\"))\n\t\t\t\t{\t\n\t\t\t\t\tvar ereg = ~/for[\\t ]*\\([a-z_0-9]+[\\t ]+in[\\t ]+\\)/gi;\n\t\t\t\t\t\n\t\t\t\t\tif (ereg.match(data))\n\t\t\t\t\t{\n\t\t\t\t\t\ttriggerCompletion(editor, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if\t(StringTools.endsWith(data, \"new \") || StringTools.endsWith(data, \"extends \"))\n\t\t\t\t{\n\t\t\t\t\tcompletionInstance.showClassList(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (modeName == \"hxml\") \n\t\t\t{\n\t\t\t\tvar cursor = cm.getCursor();\n\t\t\t\tvar data = cm.getLine(cursor.line);\n\t\t\t\t\n\t\t\t\tif (data == \"-\")\n\t\t\t\t{\n\t\t\t\t\tcompletionInstance.showHxmlCompletion();\n\t\t\t\t}\n                else if (data == \"-cp \")\n                {\n                    completionInstance.showFileList(false, true);\n                }\n                else if (data == \"-dce \" || data == \"-lib \")\n                {\n                    completionInstance.showHxmlCompletion();\n\t\t\t\t}\n                else if (data == \"--macro \")\n               \t{\n                    completionInstance.showClassList(true);\n                }\n\t\t\t}\n\t\t\t\n\t\t\t//Helper.debounce(\"filechange\", function ():Void \n\t\t\t//{\n\t\t\t\tvar tab = tabManagerInstance.tabMap.get(tabManagerInstance.selectedPath);\n\t\t\t\ttab.setChanged(!tab.doc.isClean());\n\t\t\t//}\n\t\t\t//, 150);\n\t\t\t\n\t\t\ttrace(e);\n\n\t\t\tif ([\"+input\", \"+delete\"].indexOf(e.origin) != -1)\n\t\t\t{\n// \t\t\t\tHelper.debounce(\"type\", function ():Void\n// \t\t\t\t\t\t   {\n\t\t\t\t\t\t\t var text = e.text[0];\n\t\t\t\t\t\t\t var removed = e.removed[0];\n\t\t\t\t\n\t\t\t\t\t\t\t   if (text != \"\\t\" && text != \" \" && removed != \"\\t\" && removed != \" \" && isValidWordForCompletionOnType())\n\t\t\t\t\t\t\t   {\n\t\t\t\t\t\t\t\t   var doc = tabManagerInstance.getCurrentDocument();\n\t\t\t\t\t\t\t\t   var pos = doc.getCursor();\n\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t   completionInstance.getCompletion(function ()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (isValidWordForCompletionOnType())\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar pos2 = doc.getCursor();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (pos.line == pos2.line && pos.ch == pos2.ch)\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcompletionInstance.showRegularCompletion(false);\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}, pos);\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t   }, 500);\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\tCodeMirror.prototype.centerOnLine = function(line) \n\t\t{\n\t\t\tuntyped __js__(\" var h = this.getScrollInfo().clientHeight;  var coords = this.charCoords({line: line, ch: 0}, 'local'); this.scrollTo(null, (coords.top + coords.bottom - h) / 2); \");\n\t\t};\n\n\t\teditor.on(\"gutterClick\", function (cm:CodeMirror, line:Int, gutter:String, e)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (ProjectAccess.currentProject != null && gutter == \"CodeMirror-foldgutter\")\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsaveFoldedRegions();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t}\n\t\t\n\t\tstatic function isValidWordForCompletionOnType()\n\t\t{\n\t\t\tvar isValid:Bool = false;\n\t\t\t\n\t\t\tvar cm = editor;\n\t\t\t\n\t\t\tvar tabManagerInstance = TabManager.get();\n\t\t\tvar completionInstance = Completion.get();\n\t\t\t\n\t\t\tvar doc = tabManagerInstance.getCurrentDocument();\n\n\t\t    if (doc != null && doc.getMode().name == \"haxe\")\n\t\t    {\n\t\t\t\tvar completionActive = editor.state.completionActive;\n\n\t\t\t\tif (completionActive == null) \n\t\t\t\t{\n\t\t\t\t\tvar pos = doc.getCursor();\n\n\t\t\t\t\tvar word = completionInstance.getCurrentWord(editor, {word: ~/[A-Z_0-9]+$/i}, pos);\n\n\t\t\t\t\tvar type = cm.getTokenTypeAt(pos);\n\n\t\t\t\t\tvar eregDigit = ~/[0-9]+$/i;\n\t\t\t\t\t\n\t\t\t\t\tif (word.word != null && type != \"string\" && type != \"string-2\")\n\t\t\t\t\t{\n\t\t\t\t\t\tif (word.word.length >= 1 && !eregDigit.match(word.word.charAt(0)))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar lineData = doc.getLine(pos.line);\n\t\t\t\t\t\t\tvar dataBeforeWord = lineData.substring(0, pos.ch - word.word.length);\n\n\t\t\t\t\t\t\tif (!StringTools.endsWith(dataBeforeWord, \"var \") && !StringTools.endsWith(dataBeforeWord, \"function \"))\n\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tisValid = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t    }\n\t\t\t\t\n\t\t\treturn isValid;\n\t\t}\n\n\t\t\n\tpublic static function saveFoldedRegions()\n\t{\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n\t\tvar doc = tabManagerInstance.getCurrentDocument();\n\t\t\n\t\tif (doc != null && ProjectAccess.currentProject != null)\n\t\t{\n\t\t\tvar cm = editor;\n\t\t\tvar cursor = doc.getCursor();\n\t\t\tvar foldedRegions:Array<Pos> = [];\n\n\t\t\tfor (marker in doc.getAllMarks())\n\t\t\t{\n\t\t\t\tvar pos = marker.find().from;\n\n\t\t\t\tif (cm.isFolded(pos))\n\t\t\t\t{\n\t\t\t\t\tfoldedRegions.push(pos);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar selectedFile = ProjectAccess.getFileByPath(tabManagerInstance.getCurrentDocumentPath());\n\n\t\t\tif (selectedFile != null)\n\t\t\t{\n\t\t\t\tselectedFile.foldedRegions = foldedRegions;\n\t\t\t\tselectedFile.activeLine = cursor.line;\n\t\t\t\t\n\t\t\t\ttrace(\"folding regions saved successfully for\" + Std.string(selectedFile));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttrace(\"cannot save folded regions for this document\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttrace(\"unable to preserve code folding for\" + Std.string(doc));\n\t\t}\n\t}\n\n\t\t\n\tpublic static function triggerCompletion(cm:CodeMirror, ?dot:Bool = false) \n\t{\n        trace(\"triggerCompletion\");\n        \n\t\tvar tabManagerInstance = TabManager.get();\n\t\tvar completionInstance = Completion.get();\n\t\t\n\t\tvar modeName:String = tabManagerInstance.getCurrentDocument().getMode().name;\n\t\t\n\t\tswitch (modeName)\n\t\t{\n\t\t\tcase \"haxe\":\n\t\t\t\t//HaxeParserProvider.getClassName();\n\t\t\t\t\n\t\t\t\tif (!dot || regenerateCompletionOnDot || (dot && !cm.state.completionActive)) \n\t\t\t\t{\n\t\t\t\t\ttabManagerInstance.saveActiveFile(function ():Void \n\t\t\t\t\t{\n\t\t\t\t\t\tcompletionInstance.showRegularCompletion();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\tcase \"hxml\":\n\t\t\t\tcompletionInstance.showHxmlCompletion();\n        \tcase \"xml\":\n        \t\tcm.showHint({completeSingle: false});\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t}\n\t\n\tprivate static function walk(object:Dynamic)\n\t{\t\t\n\t\tvar regexp = untyped __js__(\"RegExp\");\n\t\t\n\t\tfor (field in Reflect.fields(object))\n\t\t{\n\t\t\tvar value = Reflect.field(object, field);\n\t\t\t\n\t\t\tif (Std.is(value, String)) \n\t\t\t{\n\t\t\t\tif (StringTools.startsWith(value, \"regexp\")) \n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tReflect.setField(object, field, Type.createInstance(regexp, [value.substring(6)]));\n\t\t\t\t\t}\n\t\t\t\t\tcatch (err:Error)\n\t\t\t\t\t{\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (StringTools.startsWith(value, \"eval\")) \n\t\t\t\t{\n\t\t\t\t\ttry \n\t\t\t\t\t{\n\t\t\t\t\t\tReflect.setField(object, field, Lib.eval(value.substring(4)));\n\t\t\t\t\t}\n\t\t\t\t\tcatch (err:Error)\n\t\t\t\t\t{\n\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\tif (Reflect.isObject(value) && !Std.is(value, Array) && Type.typeof(value).getName() == \"TObject\") \n\t\t\t{\n\t\t\t\twalk(value);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static function resize():Void \n\t{\t\t\n\t\tvar panels = untyped new JQuery('#thirdNested').jqxSplitter('panels');\n\n\t\tvar height = Browser.window.innerHeight - 34 - new JQuery(\"ul.tabs\").height() - panels[1].element[0].clientHeight - 5;\n\t\tnew JQuery(\".CodeMirror\").css(\"height\", Std.string(Std.int(height)) + \"px\");\n\t\t\n\t\tnew JQuery(\"#annotationRuler\").css(\"height\", Std.string(Std.int(height - 1)) + \"px\");\n\t}\n\t\n\tstatic function loadTheme() \n\t{\n\t\tvar localStorage2 = Browser.getLocalStorage();\n\t\t\n\t\tif (localStorage2 != null)\n\t\t{\n\t\t\tvar theme:String = localStorage2.getItem(\"theme\");\n\t\t\t\n\t\t\tif (theme != null) \n\t\t\t{\n\t\t\t\tsetTheme(theme);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n            \tsetTheme(\"mbo\");\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\tstatic function loadThemes(themes:Array<String>, onComplete:Dynamic):Void\n\t{\n\t\tvar themesSubmenu = BootstrapMenu.getMenu(\"View\").getSubmenu(\"Themes\");\n\t\tvar theme:String;\n\t\t\n\t\tvar pathToThemeArray:Array<String> = new Array();\n\t\t\n\t\tthemesSubmenu.addMenuItem(\"default\", 0, setTheme.bind(\"default\"));\n\t\t\n\t\tfor (i in 0...themes.length)\n\t\t{\n\t\t\ttheme = themes[i];\n\t\t\tthemesSubmenu.addMenuItem(theme, i + 1, setTheme.bind(theme));\n\t\t}\n\t\t\n\t\tonComplete();\n\t}\n\t\n\tpublic static function setTheme(theme:String):Void\n\t{\n\t\teditor.setOption(\"theme\", theme);\n\t\tBrowser.getLocalStorage().setItem(\"theme\", theme);\n\t}\n\t\n\t#end\n\t\n\tmacro public static function getThemeList() \n\t{\n\t\tvar p = Context.currentPos();\n\t\tvar result = [];\n\t\t\n\t\tfor (theme in sys.FileSystem.readDirectory(Sys.getCwd() + \"libs/js/CodeMirror/theme\")) \n\t\t{\n\t\t\tvar basename = theme.split(\".\").shift();\n\t\t\tvar eConst = EConst(CString(basename));\n\t\t\tresult.push( { expr: eConst, pos: p } );\n\t\t}\n        \n//         for (theme in sys.FileSystem.readDirectory(Sys.getCwd() + \"libs/css/theme\"))\n// \t\t{\n// \t\t\tvar eConst = EConst(CString(theme.split(\".\").shift()));\n// \t\t\tresult.push( { expr: eConst, pos: p } );\n// \t\t}\n\t\t\n\t\treturn { expr: EArrayDecl(result), pos: p };\n    }\n}\n","package cm;\nimport CodeMirror.Pos;\nimport haxe.Timer;\n\n/**\n* @author \n */\nclass HighlightRange\n{\n\tstatic var instance:HighlightRange;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new HighlightRange();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function highlight(cm:CodeMirror, from:Pos, to:Pos)\n\t{\n\t\tvar marker = cm.markText(from, to, {className: \"showDeclaration\"});\n\t\t\t\t\n\t\tTimer.delay(function ()\n\t\t\t\t\t{\n\t\t\t\t\t\tmarker.clear();\n\t\t\t\t\t}\n\t\t\t\t\t, 1000);\n\t}\n\n}","package cm;\nimport parser.ClassParser;\nimport haxe.xml.Fast;\nimport haxe.xml.Parser;\nimport tabmanager.TabManager;\nimport haxe.Timer;\n\n/**\n* @author \n */\nclass Xml\n{\n\tstatic var instance:Xml;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new Xml();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n    var tags:Dynamic;\n    \n    public function generateXmlCompletion()\n    {\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n        var data = tabManagerInstance.getCurrentDocument().getValue();\n        \n        var xml = null;\n        \n        try\n        {\n            xml = Parser.parse(data);\n        }\n        catch (unknown:Dynamic)\n        {\n            trace(unknown);\n        }\n        \n        var tags:Dynamic = {\"!attrs\": {}};\n            \n\t\tif (xml != null)\n        {\n            var fast = new Fast(xml);\n            walkThroughElements(tags, fast);\n            cm.Editor.editor.setOption(\"hintOptions\", {schemaInfo: tags});\n        }\n        \n        \n//         var dummy = {\n//         attrs: {\n//           color: [\"red\", \"green\", \"blue\", \"purple\", \"white\", \"black\", \"yellow\"],\n//           size: [\"large\", \"medium\", \"small\"],\n//           description: null\n//         },\n//         children: []\n//     };\n        \n//         var a = untyped __js__(\"class\");\n        \n//         tags = {\n//         \"!top\": [\"top\"],\n//         \"!attrs\": {\n//           id: null\n// //           a: [\"A\", \"B\", \"C\"]\n//         },\n//         top: {\n//           attrs: {\n//             lang: [\"en\", \"de\", \"fr\", \"nl\"],\n//             freeform: null\n//           },\n//           children: [\"animal\", \"plant\"]\n//         },\n//         animal: {\n//           attrs: {\n//             name: null,\n//             isduck: [\"yes\", \"no\"]\n//           },\n//           children: [\"wings\", \"feet\", \"body\", \"head\", \"tail\"]\n//         },\n//         plant: {\n//           attrs: {name: null},\n//           children: [\"leaves\", \"stem\", \"flowers\"]\n//         },\n//         wings: dummy, feet: dummy, body: dummy, head: dummy, tail: dummy,\n//         leaves: dummy, stem: dummy, flowers: dummy\n//       };\n\t}\n    \n    function walkThroughElements(tags:Dynamic, fast:Fast)\n    {\n        for (element in fast.elements)\n        {\n            if (Reflect.field(tags, element.name) == null)\n            {\n                Reflect.setField(tags, element.name, {attrs: {}});\n            }\n             \n            var attrs:Dynamic = Reflect.field(tags, element.name).attrs;\n        \n            for (attribute in element.x.attributes())\n            {\n                var values:Array<String>;\n                 \n                if (Reflect.field(attrs, attribute) == null)\n                {\n                    values = [];\n                    Reflect.setField(attrs, attribute, values);\n                    \n                    if (attribute == \"path\")\n                    {\n\t\t\t\t\t\tfor (item in ClassParser.filesList)\n                        {\n                            values.push(item.path);\n                        }\n                    }\n                }\n        \t\telse\n               \t{\n                    values = Reflect.field(attrs, attribute);\n                }\n\n        \t\tvar value = element.att.resolve(attribute);\n        \t\t\n        \t\tif (values.indexOf(value) == -1)\n                {\n                    values.push(value);\n                }\n            }\n             \n            Reflect.setField(tags, element.name, {attrs: attrs});\n        \twalkThroughElements(tags, element);\n        }\n    }\n\n\tpublic function completeAfter(cm:CodeMirror, ?pred:Dynamic) \n    {\n        var cur = cm.getCursor();\n        if (pred == null || pred() != null)\n        {\n\t\t\tTimer.delay(function() \n            {\n                if (cm.state.completionActive == null)\n                {\n                    cm.showHint({completeSingle: false});\n                }\n            }, 100);\n        }\n        \n        return CodeMirrorStatic.Pass;\n    }\n    \n    public function completeIfAfterLt(cm:CodeMirror) \n    {\n        return completeAfter(cm, function() {\n          var cur = cm.getCursor();\n            return cm.getRange({line: cur.line, ch: cur.ch - 1}, cur) == \"<\";\n        });\n    }\n    \n\tpublic function completeIfInTag(cm:CodeMirror) \n    {\n        return completeAfter(cm, function() {\n          var tok = cm.getTokenAt(cm.getCursor());\n          if (tok.type == \"string\" && (!~/['\"]/.match(tok.string.charAt(tok.string.length - 1)) || tok.string.length == 1)) return false;\n          var inner = CodeMirrorStatic.innerMode(cm.getMode(), tok.state).state;\n          return inner.tagName;\n        });\n\t}\n}","package cm;\nimport js.Browser;\nimport js.html.KeyboardEvent;\nimport js.html.WheelEvent;\nimport jQuery.JQuery;\nimport menu.BootstrapMenu;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass Zoom\n{\t\n\tstatic var instance:Zoom;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new Zoom();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function load():Void\n\t{\n\t\tBrowser.document.addEventListener(\"mousewheel\", function(e:WheelEvent)\n\t\t{\n\t\t\tif (e.altKey || e.ctrlKey || e.metaKey)\n\t\t\t{\n\t\t\t\tif (e.wheelDeltaY < 0)\n\t\t\t\t{\n\t\t\t\t\tvar fontSize:Int = Std.parseInt(new JQuery(\".CodeMirror\").css(\"font-size\"));\n\t\t\t\t\tfontSize--;\n\t\t\t\t\tsetFontSize(fontSize);\n\t\t\t\t\te.preventDefault(); \n\t\t\t\t\te.stopPropagation(); \n\t\t\t\t}\n\t\t\t\telse if (e.wheelDeltaY > 0)\n\t\t\t\t{\n\t\t\t\t\tvar fontSize:Int = Std.parseInt(new JQuery(\".CodeMirror\").css(\"font-size\"));\n\t\t\t\t\tfontSize++;\n\t\t\t\t\tsetFontSize(fontSize);\n\t\t\t\t\te.preventDefault(); \n\t\t\t\t\te.stopPropagation(); \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\tBootstrapMenu.getMenu(\"View\").addMenuItem(\"Increase Font Size\", 10001, function ()\n\t\t{\n\t\t\tvar fontSize:Int = Std.parseInt(new JQuery(\".CodeMirror\").css(\"font-size\"));\n\t\t\tfontSize++;\n\t\t\tsetFontSize(fontSize);\n\t\t}\n\t\t, \"Ctrl-+\");\n\t\t\n\t\tBootstrapMenu.getMenu(\"View\").addMenuItem(\"Decrease Font Size\", 10002, function ()\n\t\t{\n\t\t\tvar fontSize:Int = Std.parseInt(new JQuery(\".CodeMirror\").css(\"font-size\"));\n\t\t\tfontSize--;\n\t\t\tsetFontSize(fontSize);\n\t\t}\n\t\t, \"Ctrl--\");\n\t}\n\t\n\tpublic function setFontSize(fontSize:Int):Void\n\t{\n\t\tnew JQuery(\".CodeMirror\").css(\"font-size\", Std.string(fontSize) + \"px\");\n\t\tnew JQuery(\".CodeMirror-hint\").css(\"font-size\", Std.string(fontSize - 2) + \"px\");\n\t\tnew JQuery(\".CodeMirror-hints\").css(\"font-size\", Std.string(fontSize - 2) + \"px\");\n\t\tEditor.editor.refresh();\n\t}\n\t\n}","package completion;\nimport core.Completion;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass Filter\n{\n\tpublic static function filter(completions:Array<Hxml.CompletionData>, word:String, completionType:CompletionType):Array<Hxml.CompletionData>\n\t{\n\t\tvar list:Array<Hxml.CompletionData> = [];\n\t\t\n\t\tif (word != null) \n\t\t{\n\t\t\tvar filtered_results = [];\n\t\t\tvar sorted_results = [];\n\t\t\t\n\t\t\tword = word.toLowerCase();\n\t\t\t\n\t\t\tfor (completion in completions) \n\t\t\t{\n\t\t\t\tvar n = completion.text.toLowerCase();\n\t\t\t\tvar b = true;\n\t\t\t  \n\t\t\t\t  for (j in 0...word.length)\n\t\t\t\t  {\n\t\t\t\t\t  if (n.indexOf(word.charAt(j)) == -1)\n\t\t\t\t\t  {\n\t\t\t\t\t\t  b = false;\n\t\t\t\t\t\t  break;\n\t\t\t\t\t  }\n\t\t\t\t  }\n\n\t\t\t\tif (b)\n\t\t\t\t{\n\t\t\t\t\tfiltered_results.push(completion);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar results = [];\n\t\t\tvar filtered_results2 = [];\n\t\t\tvar filtered_results3 = [];\n\t\t\tvar exactResults = [];\n\t\t\t\n\t\t\tfor (i in 0...filtered_results.length) \n\t\t\t{\n\t\t\t\tvar str = filtered_results[i].text.toLowerCase();\n\t\t\t\tvar index:Int = str.indexOf(word);\n\t\t\t\t\n\t\t\t\tif (word == str) \n\t\t\t\t{\n\t\t\t\t\texactResults.push(filtered_results[i]);\n\t\t\t\t}\n\t\t\t\telse if (index == 0)\n\t\t\t\t{\n\t\t\t\t\tsorted_results.push(filtered_results[i]);\n\t\t\t\t}\n                else if (index == str.length)\n\t\t\t\t{\n\t\t\t\t\tfiltered_results3.push(filtered_results[i]);\n\t\t\t\t}\n\t\t\t\telse if (index != -1) \n\t\t\t\t{\n\t\t\t\t\tfiltered_results2.push(filtered_results[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresults.push(filtered_results[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (completion in exactResults) \n\t\t\t{\n\t\t\t\tlist.push(completion);\n\t\t\t}\n\t\t\t\n\t\t\tfor (completion in sorted_results) \n\t\t\t{\n\t\t\t\tlist.push(completion);\n\t\t\t}\n\t\t\t\n\t\t\tfor (completion in filtered_results2) \n\t\t\t{\n\t\t\t\tlist.push(completion);\n\t\t\t}\n                \n            for (completion in filtered_results3) \n\t\t\t{\n\t\t\t\tlist.push(completion);\n\t\t\t}\n\t\t\t\n\t\t\tfor (completion in results) \n\t\t\t{\n\t\t\t\tlist.push(completion);\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlist = completions;\n\t\t}\n\t\t\n\t\treturn list;\n\t}\n        \n    public static function sortFileList(list:Array<parser.ClassParser.FileData>)\n\t{        \n        list.sort(function(a:parser.ClassParser.FileData, b:parser.ClassParser.FileData):Int\n        {\n            var aCount:Int;\n            var bCount:Int;\n\n            var aHaxeFile:Bool = StringTools.endsWith(a.filename, \".hx\");\n            var bHaxeFile:Bool = StringTools.endsWith(b.filename, \".hx\");\n\n            if (aHaxeFile && !bHaxeFile) return -1;\n            if (!aHaxeFile && bHaxeFile) return 1;\n\n            aCount = a.path.split(\"\\\\\").length + a.path.split(\"/\").length;\n            bCount = b.path.split(\"\\\\\").length + b.path.split(\"/\").length;\n            if (aCount < bCount) return -1;\n            if (aCount > bCount) return 1;\n            return 0;\n        } );\n        \n        return list;\n    }\n\n\tpublic static function filterFiles(fileList:Array<parser.ClassParser.FileData>, word:String)\n\t{\n        var list:Array<parser.ClassParser.FileData> = [];\n        \n        var filtered_results = [];\n        var sorted_results = [];\n\n        word = word.toLowerCase();\n\n        for (completion in fileList) \n        {\n            var n = completion.path.toLowerCase();\n            var b = true;\n\n              for (j in 0...word.length)\n              {\n                  if (n.indexOf(word.charAt(j)) == -1)\n                  {\n                      b = false;\n                      break;\n                  }\n              }\n\n            if (b)\n            {\n                filtered_results.push(completion);\n            }\n        }\n\n        var results = [];\n        var filtered_results2 = [];\n        var filtered_results3 = [];\n        var exactResults = [];\n\t\tvar filenameResults = [];\n\n        for (i in 0...filtered_results.length) \n        {\n            var path = filtered_results[i].path.toLowerCase();\n\t\t\tvar filename = filtered_results[i].filename.toLowerCase();\n\n            var index:Int = path.indexOf(word);\n\n\t\t\tif (word == filename)\n            {\n                filenameResults.push(filtered_results[i]);\n            }\n            else if (StringTools.startsWith(filename, word))\n            {\n                filenameResults.push(filtered_results[i]);\n            }\n            else if (word == path) \n            {\n                exactResults.push(filtered_results[i]);\n            }\n            else if (index == 0)\n            {\n                sorted_results.push(filtered_results[i]);\n            }\n            else if (index == path.length)\n            {\n                filtered_results3.push(filtered_results[i]);\n            }\n            else if (index != -1) \n            {\n                filtered_results2.push(filtered_results[i]);\n            }\n            else\n            {\n                results.push(filtered_results[i]);\n            }\n        }\n\n        for (completion in filenameResults) \n        {\n            list.push(completion);\n        }\n            \n        for (completion in exactResults) \n        {\n            list.push(completion);\n        }\n\n        for (completion in sorted_results) \n        {\n            list.push(completion);\n        }\n\n        for (completion in filtered_results2) \n        {\n            list.push(completion);\n        }\n\n        for (completion in filtered_results3) \n        {\n            list.push(completion);\n        }\n\n        for (completion in results) \n        {\n            list.push(completion);\n        }\n            \n        return list;\n    }\n}","package completion;\nimport cm.HighlightRange;\nimport tabmanager.TabManager;\nimport CodeMirror.Pos;\nimport cm.Editor;\nimport core.Completion;\n\n/**\n* @author \n */\nclass GoToDeclaration\n{\n\tstatic var instance:GoToDeclaration = null;\n\t\n\tpublic function new()\n\t{\n\t\t\t\n\t}\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new GoToDeclaration();\n\t\t}\n\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function start()\n\t{\n\t\tvar ereg = ~/([^:\\n\\r]+):([0-9]+): (lines|characters) ([0-9]+)-([0-9]+)/g;\n\t\t\n\t\tvar cm = Editor.editor;\n\t\t\n\t\tvar completionInstance = Completion.get();\n\t\t\n\t\tcompletionInstance.getCompletion(function ()\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t if (completionInstance.declarationPositions.length > 0)\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t var posData = completionInstance.declarationPositions[0];\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t if (ereg.match(posData))\n\t\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\t var path = ereg.matched(1);\n\t\t\t\t\t\t\t\t\t\t\t var line = Std.parseInt(ereg.matched(2)) - 1;\n\t\t\t\t\t\t\t\t\t\t\t var posType = ereg.matched(3);\n\t\t\t\t\t\t\t\t\t\t\t var from = Std.parseInt(ereg.matched(4));\n\t\t\t\t\t\t\t\t\t\t\t var to = Std.parseInt(ereg.matched(5));\n\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t var from2:Pos = null;\n\t\t\t\t\t\t\t\t\t\t\t var to2:Pos = null;\n\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t if (posType == \"lines\")\n\t\t\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\t\t from2 = {line: from - 1, ch: 0};\n\t\t\t\t\t\t\t\t\t\t\t\t to2 = {line: to, ch: 0};\n\t\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t\t\t else if (posType == \"characters\")\n\t\t\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\t\t from2 = {line: line, ch: from};\n\t\t\t\t\t\t\t\t\t\t\t\t to2 = {line: line, ch: to};\n\t\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t if (from2 != null && to2 != null)\n\t\t\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\t\t var tabManagerInstance = TabManager.get();\n\n\t\t\t\t\t\t\t\t\t\t\t\t tabManagerInstance.openFileInNewTab(path, true, function ():Void \n\t\t\t\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\t\t\t var cm = Editor.editor;\n\t\t\t\t\t\t\t\t\t\t\t\t\t cm.centerOnLine(from2.line);\n\t\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t var highlightRange = HighlightRange.get();\n\t\t\t\t\t\t\t\t\t\t\t\t\t highlightRange.highlight(cm, from2, to2);\n\t\t\t\t\t\t\t\t\t\t\t\t });\n\t\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t\t\t else\n\t\t\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\t\t Alertify.error(\"Go To Declaration data parsing failed.\");\n\t\t\t\t\t\t\t\t\t\t\t }\n\n\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t, cm.getCursor(), \"position\", false);\n\t}\n\n\n}","package completion;\nimport completion.Hxml.CompletionData;\nimport core.Completion.CompletionItem;\nimport core.HaxeHelper;\nimport core.ProcessHelper;\n\n/**\n * ...\n * @author AS3Boyan\n */\n\ntypedef CompletionData =\n{\n\t@:optional var text:String;\n\t@:optional var displayText:String;\n\t@:optional var hint:CodeMirror->Dynamic->CompletionData->Void;\n\t@:optional var info:CompletionData->Dynamic;\n\t@:optional var className:String;\n}\n\nclass Hxml\n{\n\tstatic var completions:Array<CompletionData>;\n\t\n\tpublic static function load()\n\t{\n\t\tcompletions = [];\n\t\t\n\t\tgetArguments(getDefines.bind(getHaxelibList));\n\t}\n\t\n\tstatic function getHaxelibList(onComplete:Dynamic) \n\t{\n\t\tHaxeHelper.getInstalledHaxelibList(function (installedLibs:Array<String>):Void \n\t\t{\n\t\t\tfor (item in installedLibs)\n\t\t\t{\n\t\t\t\tvar completionItem:CompletionData = { };\n\t\t\t\tcompletionItem.text =  \"-lib \" + item;\n\t\t\t\tcompletionItem.displayText =  completionItem.text + \" - installed\";\n\t\t\t\tcompletionItem.className = \"CodeMirror-Tern-completion\" + \" CodeMirror-Tern-completion-lib\";\n\t\t\t\t\n\t\t\t\tcompletions.push(completionItem);\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tHaxeHelper.getHaxelibList(function (libs:Array<String>):Void \n\t\t\t{\n\t\t\t\tfor (item in libs) \n\t\t\t\t{\n\t\t\t\t\tif (installedLibs.indexOf(item) == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar completionItem:CompletionData = { };\n\t\t\t\t\t\tcompletionItem.text =  \"-lib \" + item;\n\t\t\t\t\t\tcompletionItem.displayText =  completionItem.text + \" - not installed\";\n\t\t\t\t\t\tcompletionItem.className = \"CodeMirror-Tern-completion\" + \" CodeMirror-Tern-completion-lib\";\n\t\t\t\t\t\t\n\t\t\t\t\t\tcompletions.push(completionItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (onComplete != null) \n\t\t\t\t{\n\t\t\t\t\tonComplete();\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t\t}\n\t\t);\n\t}\n\t\n\tstatic function getDefines(onComplete:Dynamic) \n\t{\n\t\tHaxeHelper.getDefines(function (data:Array<String>):Void \n\t\t{\n\t\t\tfor (item in data)\n\t\t\t{\n\t\t\t\tcompletions.push( { text: \"-D \" + item, className: \"CodeMirror-Tern-completion\" + \" CodeMirror-Tern-completion-define\" } );\n\t\t\t}\n\t\t\t\n\t\t\tif (onComplete != null) \n\t\t\t{\n\t\t\t\tonComplete();\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tstatic function getArguments(?onComplete:Dynamic) \n\t{\n\t\tHaxeHelper.getArguments(function (data:Array<String>):Void \n\t\t{\n\t\t\tfor (item in data)\n\t\t\t{\n\t\t\t\tcompletions.push( { text: item, className: \"CodeMirror-Tern-completion\"} );\n            \n            \tif (item == \"-dce\")\n                {\n                    completions.push( { text: item + \" \" + \"no\", className: \"CodeMirror-Tern-completion\"} );\n                    completions.push( { text: item + \" \" + \"std\", className: \"CodeMirror-Tern-completion\"} );\n                    completions.push( { text: item + \" \" + \"full\", className: \"CodeMirror-Tern-completion\"} );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (onComplete != null) \n\t\t\t{\n\t\t\t\tonComplete();\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic static function getCompletion():Array<CompletionData>\n\t{\n\t\treturn completions;\n\t}\n}","package completion;\nimport core.ProcessHelper;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass MetaTags\n{\n\tstatic var completions:Array<Hxml.CompletionData>;\n\t\n\tpublic static function load()\n\t{\n\t\tcompletions = [];\n\t\t\n\t\tvar processHelper = ProcessHelper.get();\n\t\t\n\t\tprocessHelper.runProcess(\"haxe\", [\"--help-metas\"], null, function (stdout:String, stderr:String):Void \n\t\t{\n\t\t\tvar regex:EReg = ~/@:[A-Z]+ /gim;\n\t\t\tregex.map(stdout, function (ereg:EReg):String\n\t\t\t{\n\t\t\t\tcompletions.push({text: StringTools.trim(ereg.matched(0))});\n\t\t\t\treturn ereg.matched(0);\n\t\t\t}\n\t\t\t);\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic static function getCompletion():Array<Hxml.CompletionData>\n\t{\n\t\treturn completions;\n\t}\n}","package completion;\nimport js.node.Fs.FsReadFileOpt;\nimport js.node.Fs;\nimport js.node.Path;\nimport cm.Editor;\nimport completion.Hxml.CompletionData;\nimport haxe.Timer;\nimport js.Node;\nimport tjson.TJSON;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass SnippetsCompletion\n{\n\tstatic var instance:SnippetsCompletion;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new SnippetsCompletion();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function load():Void \n\t{\n\t\tvar options:FsReadFileOpt = { };\n\t\toptions.encoding = \"utf8\";\n\t\t\n\t\tFs.readFile(Path.join(\"core\", \"config\", \"snippets.json\"), options, function (error, data:String):Void \n\t\t{\n\t\t\tif (error == null) \n\t\t\t{\n\t\t\t\tvar templates = TJSON.parse(data);\n\t\t\t\t\n\t\t\t\tvar snippets:Array<Dynamic> = templates.snippets;\n\t\t\t\t\n\t\t\t\tfor (template in snippets) \n\t\t\t\t{\n\t\t\t\t\tuntyped CodeMirrorStatic.templatesHint.addTemplates(template, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tAlertify.error(\"Can't open core/config/snippets.json\");\n\t\t\t}\n\t\t});\n\t}\n\t\n\tpublic function getCompletion():Array<CompletionData>\n\t{\t\t\n\t\tvar completions:Array<CompletionData> = untyped CodeMirrorStatic.templatesHint.getCompletions(Editor.editor);\n\t\treturn completions;\n\t}\n\t\n}","package core;\nimport cm.Editor;\nimport jQuery.JQuery;\nimport js.Browser;\nimport js.html.AnchorElement;\nimport js.html.DivElement;\nimport tabmanager.TabManager;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass AnnotationRuler\n{\n    var positions:Array<Float> = [];\n    \n\tstatic var instance:AnnotationRuler = null;\n\t\n\tpublic function new()\n\t{\n\t\t\t\n\t}\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new AnnotationRuler();\n\t\t}\n\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function addErrorMarker(pathToFile:String, line:Int, ch:Int, message:String):Void \n\t{\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n\t\tvar a:AnchorElement = Browser.document.createAnchorElement();\n\t\ta.href = \"#\";\n\t\ta.onclick = function (e):Void \n\t\t{\n\t\t\ttabManagerInstance.openFileInNewTab(pathToFile, true, function ():Void \n\t\t\t{\n\t\t\t\tvar cm:Dynamic = Editor.editor;\n\t\t\t\tcm.centerOnLine(line);\n\t\t\t});\n\t\t};\n\t\t\n\t\tvar div:DivElement = Browser.document.createDivElement();\n\t\tdiv.className = \"errorMarker\";\n\t\t\n\t\tvar lineCount = tabManagerInstance.getCurrentDocument().lineCount();\n\t\t\n        var targetLine:Float = line / lineCount * 100;\n        \n        while (positions.indexOf(targetLine) != -1)\n        {\n            targetLine++;\n        }\n        \n\t\tdiv.style.top = Std.string(targetLine) + \"%\";\n\t\t\n        positions.push(targetLine);\n        \n\t\tdiv.setAttribute(\"data-toggle\", \"tooltip\");\n\t\tdiv.setAttribute(\"data-placement\", \"left\");\n\t\tdiv.title = \"Line: \" + Std.string(line) + \":\" + message;\n\t\t\n\t\tuntyped new JQuery(div).tooltip({});\n\t\t\n\t\ta.appendChild(div);\n\t\t\n\t\tnew JQuery(\"#annotationRuler\").append(a);\n\t}\n\t\n\tpublic function clearErrorMarkers():Void \n\t{\n\t\tnew JQuery(\"#annotationRuler\").children().remove();\n        positions = [];\n\t}\n}","package core;\nimport js.Browser;\nimport js.html.TextAreaElement;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass CompilationOutput\n{\n\tpublic static function load():Void\n\t{\t\t\n\t\tvar output:TextAreaElement = Browser.document.createTextAreaElement();\n\t\toutput.id = \"outputTextArea\";\n\t\toutput.readOnly = true;\n\t\t\n\t\tnew jQuery.JQuery(\"#output\").append(output);\n\t}\n\t\n}","package core;\nimport js.node.Path;\nimport haxe.Timer;\nimport completion.Hxml.CompletionData;\nimport parser.RegexParser;\nimport cm.Editor;\nimport CodeMirror;\nimport completion.Filter;\nimport completion.Hxml;\nimport completion.MetaTags;\nimport completion.SnippetsCompletion;\nimport haxe.ds.StringMap.StringMap;\nimport haxe.xml.Fast;\nimport js.Browser;\nimport js.html.DivElement;\nimport js.html.SpanElement;\nimport js.Node;\nimport openproject.OpenFL;\nimport parser.ClassParser;\nimport projectaccess.Project;\nimport projectaccess.ProjectAccess;\nimport tabmanager.TabManager;\n\n/**\n * ...\n * @author AS3Boyan\n */\nenum CompletionType\n{\n\tREGULAR;\n\tFILELIST;\n\tPASTEFOLDER;\n    OPENFILE;\n\tCLASSLIST;\n\tHXML;\n\tMETATAGS;\n}\n\ntypedef CompletionItem = \n{\n\t@:optional\n\tvar d:String;\n\t@:optional\n\tvar t:String;\n\tvar n:String;\n}\n    \ntypedef TopLevelImport =\n{\n    name:String,\n    ?fullName:String\n}\n\nclass Completion\n{\n\tvar list:Array<CompletionData>;\n\tvar editor:CodeMirror;\n\tvar word:EReg;\n\tvar range:Int;\n\tvar cur:Pos;\n\tvar end:Int;\n\tvar start:Int;\n\tvar WORD:EReg = ~/[A-Z_0-9]+$/i;\n\tvar RANGE = 500;\n\tpublic var curWord:String;\n\tpublic var completions:Array<CompletionItem> = [];\n\tpublic var declarationPositions:Array<String> = [];\n\tvar completionType:CompletionType = REGULAR;\n\tvar completionActive:Bool;\n    \n\tstatic var instance:Completion;\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new Completion();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\n\t\n\tpublic function load()\n\t{\n\t\tHxml.load();\n\t\tMetaTags.load();\n\t\t\n\t\tvar snippetsCompletion = SnippetsCompletion.get();\n\t\t\n\t\tsnippetsCompletion.load();\n\t\t\n        completionActive = false;\n        \n        Editor.editor.on(\"endCompletion\", function ()\n                        {\n                            completionActive = false;\n                        });\n\t}\n\n\t\n\tfunction getHints(cm:CodeMirror, ?options:Dynamic): { list: Array<CompletionData>, from: CodeMirror.Pos, to: CodeMirror.Pos }\n\t{\t\t\n\t\tword = null;\n\t\t\n\t\trange = null;\n\t\t\n\t\tif (options != null && options.range != null)\n\t\t{\n\t\t\trange = options.range;\n\t\t}\n\t\telse if (RANGE != null)\n\t\t{\n\t\t\trange = RANGE;\n\t\t}\n\t\t\n\t\tlist = new Array();\n\n\t\tswitch (completionType) \n\t\t{\n\t\t\tcase REGULAR:\n\t\t\t\tfor (completion in completions) \n\t\t\t\t{\n\t\t\t\t\tvar completionItem = generateCompletionItem(completion.n, completion.t, completion.d);\n\t\t\t\t\tlist.push(completionItem);\n\t\t\t\t}\n        \t\t\n        \t\tgetCurrentWord(cm, {word: ~/[A-Z_0-9.]+$/i});\n        \n        \t\tvar className = \"CodeMirror-Tern-completion\";\t\n        \n\t\t\t\tif (curWord == null || curWord.indexOf(\".\") == -1)\n                    \n\t\t\t\t{\n\t\t\t\t\tvar tabManagerInstance = TabManager.get();\n\t\t\t\t\t\n\t\t\t\t\tvar doc = tabManagerInstance.getCurrentDocument();\n\t\t\t\t\t\n\t\t\t\t\tif (doc != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar data = doc.getRange({line: 0, ch: 0}, {line: cm.getCursor().line + 1, ch: 0});\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar functionParams = RegexParser.getFunctionParameters(data, doc.getCursor());\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (item in functionParams)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar completionItem = generateCompletionItem(item.name, item.type);\n\t\t\t\t\t\t\tlist.push(completionItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar variableDeclarations = RegexParser.getVariableDeclarations(data);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (item in variableDeclarations)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar completionItem = generateCompletionItem(item.name, item.type);\n\t\t\t\t\t\t\tlist.push(completionItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar functionDeclarations = RegexParser.getFunctionDeclarations(doc.getValue());\n\n\t\t\t\t\t\tfor (item in functionDeclarations)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (item.name != \"\")\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar completionData = generateFunctionCompletionItem(item.name, item.params);\n\t\t\t\t\t\t\t\tvar completionItem = createCompletionItem(item.name, null, completionData);\n\t\t\t\t\t\t\t\tlist.push(completionItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar snippetsCompletion = SnippetsCompletion.get();\n\n\t\t\t\t    list = list.concat(snippetsCompletion.getCompletion());\n\n                    var classList = getClassList();\n                    \n\t\t\t\t\tvar packages:Array<String> = [];\t\t\t\t\n\t\n                    for (item in classList.topLevelClassList)\n                    {\n                        var completion:CompletionData = {text: item.name };\n                        completion.className = className + \" CodeMirror-Tern-completion-class\";\n                    \tlist.push(completion);\n                    }\n\n\t\t\t\t\tfor (list in [ClassParser.importsList, ClassParser.haxeStdImports])\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (item in list)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar str = item.split(\".\")[0];\n\t\n\t\t\t\t\t\t\tif (packages.indexOf(str) == -1 && str.charAt(0) == str.charAt(0).toLowerCase())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpackages.push(str);\n\t\t\t\t\t\t\t}\t \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (item in packages)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar completion:CompletionData = {text: item };\n                        completion.className = className + \" CodeMirror-Tern-completion-package\";\n                    \tlist.push(completion);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase METATAGS:\n\t\t\t\tlist = MetaTags.getCompletion();\n\t\t\tcase HXML:\n\t\t\t\tlist = Hxml.getCompletion().copy();\n        \n        \t\tfor (list2 in [ClassParser.topLevelClassList, ClassParser.importsList, ClassParser.haxeStdTopLevelClassList, ClassParser.haxeStdImports])\n                {\n                \tfor (item in list2) \n                    {\n                        list.push( { text: item} );\n                    }\n                }\n\t\t\tcase FILELIST:\n        \t\tvar displayText:String;\n        \n\t\t\t\tfor (list2 in [ClassParser.filesList, ClassParser.haxeStdFileList])\n                {\n                    for (item in list2) \n                    {                    \n                        list.push( { text: item.path, displayText: processDisplayText(item.path)} );\n                    }\n\t\t\t\t}\n            case PASTEFOLDER:\n        \t\tvar displayText:String;\n        \n        \t\tfor (item in ClassParser.filesList) \n\t\t\t\t{\n\t\t\t\t\tlist.push( { text: item.directory, displayText: processDisplayText(item.path)} );\n\t\t\t\t}\n\t\t\tcase CLASSLIST:\n\t\t\t\tvar classList = getClassList();\n                     \n\t\t\t\tvar className = \"CodeMirror-Tern-completion\";\n\n                for (item in classList.topLevelClassList)\n                {\n                    var completion:CompletionData = {text: item.name };\n                    completion.className = className + \" CodeMirror-Tern-completion-class\";\n                    list.push(completion);\n                }\n                    \n                for (item in classList.importsList)\n                {\n                    var completion:CompletionData = {text: item};\n                    completion.className = className + \" CodeMirror-Tern-completion-class\";\n                    list.push(completion);\n                }\n\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n    \tgetCurrentWord(cm, options);\n    \n\t\tlist = Filter.filter(list, curWord, completionType);\n\t\t\n\t\tvar data:Dynamic = { list: list, from: { line:cur.line, ch:start }, to: { line:cur.line, ch:end } };\n\t\tCodeMirrorStatic.attachContextInfo(Editor.editor, data);\n\n\t\tswitch (completionType)\n        {\n        \tcase REGULAR, CLASSLIST:\n                CodeMirrorStatic.on(data, \"pick\", searchForImport);\n            default:\n        }\n\n\t\treturn data;\n\t}\n\t\n    function searchForImport(completion:CompletionData)\n    {\n        var cm = Editor.editor;\n        \n        var cursor = cm.getCursor();\n        var curLine:String = cm.getLine(cursor.line);\n        \n\t\tif (!StringTools.startsWith(curLine, \"import \"))\n\t\t{\n\t\t\tvar word = ~/[A-Z_0-9\\.]+$/i;\n        \n\t\t\tvar importStart = cursor.ch;\n\t\t\tvar importEnd = importStart;\n\n\t\t\twhile (importStart > 0 && word.match(curLine.charAt(importStart - 1))) --importStart;\n\n\t\t\tif (importStart != importEnd) \n\t\t\t{\n\t\t\t\tvar fullImport = curLine.substring(importStart, importEnd);\n\n\t\t\t\tif (fullImport.indexOf(\".\") != -1)\n\t\t\t\t{\n\t\t\t\t\tvar topLevelClassList = getClassList().topLevelClassList;\n\t\t\t\t\tImportDefinition.searchImportByText(topLevelClassList, fullImport, {line: cursor.line, ch:importStart}, {line: cursor.line, ch:importEnd}, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n\t\n    public function processDisplayText(displayText:String):String\n    {\n        if (displayText.length > 70)\n        {\n            displayText = displayText.substr(0, 35) + \" ... \" + displayText.substr(displayText.length - 35);\n        }\n            \n        return displayText;\n    }\n    \n\tpublic function getCurrentWord(cm:CodeMirror, ?options:Dynamic, ?pos:Pos):{word:String, from:CodeMirror.Pos, to:CodeMirror.Pos}\n\t{\n\t\tif (options != null && options.word != null)\n\t\t{\n\t\t\tword = options.word;\n\t\t}\n\t\telse if (WORD != null)\n\t\t{\n\t\t\tword = WORD;\n\t\t}\n\t\t\n\t\tif (pos != null) \n\t\t{\n\t\t\tcur = pos;\n\t\t}\n\t\t\n\t\tvar curLine:String = cm.getLine(cur.line);\n\t\tstart = cur.ch;\n\t\t\n\t\tend = start;\n\t\t\n\t\twhile (end < curLine.length && word.match(curLine.charAt(end))) ++end;\n\t\twhile (start > 0 && word.match(curLine.charAt(start - 1))) --start;\n\t\t\n\t\tcurWord = null;\n\t\t\n\t\tif (start != end) \n\t\t{\n\t\t\tcurWord = curLine.substring(start, end);\n\t\t}\n\t\t\n\t\treturn {word:curWord, from: {line:cur.line, ch: start}, to: {line:cur.line, ch: end}};\n\t}\n\t\n\tpublic function getCompletion(onComplete:Dynamic, ?_pos:Pos, ?mode:String, ?moveCursorToStart:Bool = true):Void\n\t{        \n\t\tif (ProjectAccess.path != null) \n\t\t{\n\t\t\tvar projectArguments:Array<String> = [];\n\t\t\t//= ProjectAccess.currentProject.args.copy();\n\t\t\t\n\t\t\tvar project = ProjectAccess.currentProject;\n            \n\t\t\tswitch (project.type)\n\t\t\t{\n\t\t\t\tcase Project.HAXE:\n\t\t\t\t\tvar pathToHxml:String = project.targetData[project.target].pathToHxml;\n\t\t\t\t\tprojectArguments.push(pathToHxml);\n\t\t\t\t\tprocessArguments(projectArguments, onComplete, _pos, mode, moveCursorToStart);\n\t\t\t\tcase Project.HXML:\n\t\t\t\t\tprojectArguments.push(project.main);\n\t\t\t\t\tprocessArguments(projectArguments, onComplete, _pos, mode, moveCursorToStart);\n\t\t\t\tcase Project.OPENFL:\n\t\t\t\t\tOpenFL.parseOpenFLDisplayParameters(ProjectAccess.path, project.openFLTarget, function (args:Array<String>):Void \n\t\t\t\t\t{\n\t\t\t\t\t\tprojectArguments = args;\n\t\t\t\t\t\tprocessArguments(projectArguments, onComplete, _pos, mode, moveCursorToStart);\n\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction processArguments(projectArguments:Array<String>, onComplete:Dynamic, ?_pos:Pos, mode:String, moveCursorToStart:Bool):Void \n\t{\n        trace(\"processArguments\");\n        \n\t\tprojectArguments.push(\"--no-output\");\n\t\tprojectArguments.push(\"--display\");\n\t\t\n\t\tvar cm:CodeMirror = Editor.editor;\n\t\tcur = _pos;\n\t\t\n\t\tif (cur == null) \n\t\t{\n\t\t\tcur = cm.getCursor();\n\t\t}\n\t\t\n\t\tgetCurrentWord(cm, null, cur);\n\t\t\n\t\tif (curWord != null) \n\t\t{\n\t\t\tcur = {line: cur.line,  ch:start};\n\t\t}\n\t\t\t\n\t\tif (moveCursorToStart == false)\n\t\t{\n// \t\t\tcur.ch = cm.getCursor().ch;\n\t\t\tcur.ch = end;\n\t\t\t\n\t\t\tif (mode == \"position\")\n\t\t\t{\n\t\t\t\tcur.ch += 1;\n\t\t\t}\n\n// \t\t\ttrace(cm.getRange({line:cur.line, ch: 0}, {line:cur.line, ch:end}));\n\t\t}\n\t\t\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\t\n\t\tvar displayArgs = tabManagerInstance.getCurrentDocumentPath() + \"@\" + Std.string(cm.indexFromPos(cur));\n\t\t\n\t\tif (mode != null)\n\t\t{\n\t\t\tdisplayArgs += \"@\" + mode;\n\t\t}\n\t\t\t\n\t\tprojectArguments.push(displayArgs);\n\t\t\n\t\tcompletions = [];\n\t\tdeclarationPositions = [];\n\t\t\n\t\tvar params = [\"--connect\", \"5000\", \"--cwd\", HIDE.surroundWithQuotes(ProjectAccess.path)].concat(projectArguments);\n\t\ttrace(params);\n\t\tvar pathToHaxe = HaxeHelper.getPathToHaxe();\n\t\t\n\t\tvar processHelper = ProcessHelper.get();\n\t\t\n\t\tprocessHelper.runProcess(pathToHaxe, params, null, function (stdout:String, stderr:String)\n\t\t{\n\t\t\tgenerateCompletion(stderr);\n\t\t\tonComplete();\n\t\t}, \n\t\tfunction (code:Int, stdout:String, stderr:String)\n\t\t{\n\t\t\ttrace(code);\n\t\t\ttrace(stderr);\n\t\t\t\n\t\t\tgenerateCompletion(stderr);\n\t\t\tonComplete();\n\t\t}\n\t\t);\n\t}\n\t\n\tfunction generateCompletion(stderr:String)\n\t{\n\t\tvar data = stderr;\n\t\tvar index = stderr.indexOf(\"<list>\");\n\n\t\tif (index == -1)\n\t\t{\n\t\t\tindex = stderr.indexOf(\"<pos>\");\n\t\t}\n\n\t\tif (index != -1)\n\t\t{\n\t\t\tif (index != 0)\n\t\t\t{\n\t\t\t\tdata = data.substring(index);\t\n\t\t\t}\n\t\t}\n\n\t\tvar xml:Xml = Xml.parse(data);\n\n\t\tvar fast = new Fast(xml);\n\n\t\tif (fast.hasNode.list)\n\t\t{\n\t\t\tvar list = fast.node.list;\n\t\t\tvar completion:CompletionItem;\n\n\t\t\tif (list.hasNode.i)\n\t\t\t{\n\t\t\t\tfor (item in list.nodes.i) \n\t\t\t\t{\n\t\t\t\t\tif (item.has.n)\n\t\t\t\t\t{\n\t\t\t\t\t\tcompletion = {n: item.att.n};\n\n\t\t\t\t\t\tif (item.hasNode.d)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar str = StringTools.trim(item.node.d.innerHTML);\n\t\t\t\t\t\t\tstr = StringTools.replace(str, \"\\t\", \"\");\n\t\t\t\t\t\t\tstr = StringTools.replace(str, \"\\n\", \"\");\n\t\t\t\t\t\t\tstr = StringTools.replace(str, \"*\", \"\");\n\t\t\t\t\t\t\tstr = StringTools.replace(str, \"&lt;\", \"<\");\n\t\t\t\t\t\t\tstr = StringTools.replace(str, \"&gt;\", \">\");\n\t\t\t\t\t\t\tstr = StringTools.trim(str);\n\t\t\t\t\t\t\tcompletion.d = str;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (item.hasNode.t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcompletion.t = item.node.t.innerData;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcompletions.push(completion);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (fast.hasNode.pos)\n\t\t{\n\t\t\tfor (item in fast.nodes.pos)\n\t\t\t{\n\t\t\t\t declarationPositions.push(item.innerData);\n\t\t\t}\n\n\t\t}\n\t}\n\n    function getHintAsync(cm:CodeMirror, c:Dynamic->Void)\n\t{\n        if (completionActive)\n        {\n            c(getHints(cm));\n        }\n        else\n        {\n            getCompletion(function ()\n                                     {\n                                         c(getHints(cm));\n                                     });\n            \n            completionActive = true;\n\t\t\t\n        }\n    }\n        \n\tpublic function isEditorVisible():Bool\n\t{\n\t\tvar editor = cast(Browser.document.getElementById(\"editor\"), DivElement);\n\t\treturn editor.style.display != \"none\";\n\t}\n\t\n\tpublic function showRegularCompletion(?getCompletionFromHaxeCompiler:Bool = true):Void\n\t{\n\t\tif (isEditorVisible()) \n\t\t{\n\t\t\tEditor.regenerateCompletionOnDot = true;\n\t\t\tWORD = ~/[A-Z_0-9]+$/i;\n\t\t\tcompletionType = REGULAR;\n            \n\t\t\tvar cm = Editor.editor;\n\t\t\t\n            if (!getCompletionFromHaxeCompiler)\n\t\t\t{\n\t\t\t\tcompletionActive = true;\n\t\t\t}\n\t\t\t\n\t\t\tvar hint:Dynamic = getHintAsync;\n\t\t\thint.async = true;\n\t\t\tcm.showHint({hint: hint, completeSingle: false});\n\t\t}\n\t}\n\t\n\tpublic function showMetaTagsCompletion():Void\n\t{\n\t\tif (isEditorVisible()) \n\t\t{\n            cur = Editor.editor.getCursor();\n            Editor.regenerateCompletionOnDot = false;\n\t\t\tWORD = ~/[A-Z_0-9@:]+$/i;\n\t\t\tcompletionType = METATAGS;\n\t\t\tCodeMirrorStatic.showHint(Editor.editor, getHints, { closeCharacters: untyped __js__(\"/[\\\\s()\\\\[\\\\]{};>,]/\") } );\n\t\t}\n\t}\n        \n\tpublic function showHxmlCompletion():Void\n\t{\n\t\tif (isEditorVisible()) \n\t\t{\n            cur = Editor.editor.getCursor();\n            Editor.regenerateCompletionOnDot = false;\n\t\t\tWORD = ~/[A-Z_0-9- \\.\\\\\\/]+$/i;\n\t\t\tcompletionType = HXML;\n\t\t\tCodeMirrorStatic.showHint(Editor.editor, getHints, { closeCharacters: untyped __js__(\"/[()\\\\[\\\\]{};:>,]/\") } );\n\t\t}\n\t}\n\t\n//     Quick Open/Show File List for Hxml completion\n\tpublic function showFileList(?openFile:Bool = true, ?insertDirectory:Bool = false):Void\n\t{\t\t\n        if (openFile)\n        {\n            completionType = OPENFILE;\n\t\t\t\n\t\t\tvar quickOpen = QuickOpen.get();\n\t\t\t\n            quickOpen.show(ClassParser.filesList.copy().concat(ClassParser.haxeStdFileList));\n        }\n        else if (isEditorVisible()) \n\t\t{\n            cur = Editor.editor.getCursor();\n\t\t\tEditor.regenerateCompletionOnDot = false;\n\t\t\tWORD = ~/[A-Z_0-9-\\.\\\\\\/]+$/i;\n            \n            if (insertDirectory == false)\n            {\n                completionType = FILELIST;\n            }\n            else\n            {\n                completionType = PASTEFOLDER;\n            }\n                \n            CodeMirrorStatic.showHint(Editor.editor, getHints);\n\t\t}\n\t}\n\t\n//     Shows list of all classes available for project, used to provide imports completion(\"import |\"), triggered on \":\" symbol\n\tpublic function showClassList(?ignoreWhitespace:Bool = false):Void\n\t{\n\t\tif (isEditorVisible()) \n\t\t{\n            cur = Editor.editor.getCursor();\n\t\t\tEditor.regenerateCompletionOnDot = true;\n\t\t\tWORD = ~/[A-Z_0-9\\.]+$/i;\n\t\t\tcompletionType = CLASSLIST;\n            \n//             default closeCharacters value\n//             \"/[\\s()\\[\\]{};:>,]/\"\n\t\t\t\n\t\t\tvar closeCharacters = untyped __js__(\"/[\\\\s()\\\\[\\\\]{};>,]/\");\n\t\t\t\n\t\t\tif (ignoreWhitespace) \n\t\t\t{\n\t\t\t\tcloseCharacters = untyped __js__(\"/[()\\\\[\\\\]{};>,]/\");\n\t\t\t}\n\t\t\t\n\t\t\tCodeMirrorStatic.showHint(Editor.editor, getHints, { closeCharacters: closeCharacters  } );\n\t\t}\n\t}\n\t\n// \tstatic function getImportHints(cm:CodeMirror)\n// \t{\n        \n//     }\n\n\tfunction searchImage(name:String, ?type:String, ?description:String)\n\t{\n\t\tvar functionParametersHelper = FunctionParametersHelper.get();\n\t\t\n\t\tvar functionData = functionParametersHelper.parseFunctionParams(name, type, description);\n\t\t\n\t\tvar info:String = null;\n\n\t\tvar className = \"CodeMirror-Tern-completion\";\n\n\t\tif (functionData.parameters != null) \n\t\t{\n\t\t\tvar data = generateFunctionCompletionItem(name, functionData.parameters);\n\t\t\tclassName = data.className;\n\t\t\tinfo = data.info + \":\" + functionData.retType;\n\t\t}\n\t\telse if (type != null)\n\t\t{\n\t\t\tinfo = type;\n\n\t\t\tswitch (info) \n\t\t\t{\n\t\t\t\tcase \"Bool\":\n\t\t\t\t\tclassName += \" CodeMirror-Tern-completion-bool\";\n\t\t\t\tcase \"Float\", \"Int\", \"UInt\":\n\t\t\t\t\tclassName += \" CodeMirror-Tern-completion-number\";\n\t\t\t\tcase \"String\":\n\t\t\t\t\tclassName += \" CodeMirror-Tern-completion-string\";\n\t\t\t\tdefault:\n\t\t\t\t\tif (info.indexOf(\"Array\") != -1) \n\t\t\t\t\t{\n\t\t\t\t\t\tclassName += \" CodeMirror-Tern-completion-array\";\n\t\t\t\t\t}\n\t\t\t\t\telse if(info.indexOf(\"Map\") != -1 || info.indexOf(\"StringMap\") != -1) \n\t\t\t\t\t{\n\t\t\t\t\t\tclassName += \" CodeMirror-Tern-completion-map\";\n\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\tclassName += \" CodeMirror-Tern-completion-object\";\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn {className: className, info: info};\n\t}\n\n\tfunction generateFunctionCompletionItem(name:String, params:Array<String>)\n\t{\n\t\tvar info:String = null;\n\n\t\tvar className = \"CodeMirror-Tern-completion\";\n\t\t\n\t\tinfo = name + \"(\";\n\t\t\n\t\tif (params != null)\n\t\t{\n\t\t\tinfo += params.join(\", \");\n\t\t}\n\t\t\t\n\t\tinfo += \")\";\n\t\t\n\t\tclassName += \" CodeMirror-Tern-completion-fn\";\n\t\t\n\t\treturn {className: className, info: info};\n\t}\n\n\tfunction generateCompletionItem(name:String, ?type:String, ?description:String)\n\t{\n\t\tvar completionData = searchImage(name, type, description);\n\t\treturn createCompletionItem(name, description, completionData);\n\t}\n\n\tfunction createCompletionItem(name:String, description:String, completionData:Dynamic)\n\t{\n\t\tvar completionItem:CompletionData = { text: name };\n\n\t\tcompletionItem.className = completionData.className;\t\n\n\t\tvar infoSpan:SpanElement = Browser.document.createSpanElement();\n\n\t\tif (completionData.info != null)\n\t\t{\n\t\t\tvar infoTypeSpan:SpanElement = Browser.document.createSpanElement();\n\t\t\tinfoTypeSpan.textContent = completionData.info;\n\t\t\tinfoSpan.appendChild(infoTypeSpan);\n\n\t\t\tinfoSpan.appendChild(Browser.document.createElement(\"br\"));\n\t\t\tinfoSpan.appendChild(Browser.document.createElement(\"br\"));\n\t\t}\n\n\t\tif (description != null)\n\t\t{\n\t\t\tvar infoDescriptionSpan:SpanElement = Browser.document.createSpanElement();\n\t\t\tinfoDescriptionSpan.className = \"completionDescription\";\n\t\t\tinfoDescriptionSpan.innerHTML = description;\n\t\t\tinfoSpan.appendChild(infoDescriptionSpan);\n\t\t}\n\n\t\tif (completionData.info != null || description != null)\n\t\t{\n\t\t\tcompletionItem.info = function (completionItem) \n\t\t\t{\n\t\t\t\treturn infoSpan;\n\t\t\t};\n\t\t}\n\n\t\treturn completionItem;\n\t}\n\n\n\tpublic function showImportDefinition(importsSuggestions:Array<String>, ?from:CodeMirror.Pos, ?to:CodeMirror.Pos)\n\t{\n        var cm = Editor.editor;\n        \n        CodeMirrorStatic.showHint(cm, function ()\n            {\n                var completions:Array<CompletionData> = [];\n                \n                var completion:CompletionData;\n                \n                for (item in importsSuggestions)\n                {\n                     completion = {};\n                     completion.text = item;\n                     completion.displayText = \"import \" + item;\n                     completion.hint = ImportDefinition.importClassHint.bind(from, to);\n                     completions.push(completion);\n\t\t\t\t}\n        \t\t\n\t\t\t\tvar pos = cm.getCursor();\n                                  \n        \t\tvar data:Dynamic = { list: completions, from: pos, to: pos };\n        \t\treturn data;\n            }\n        , {completeSingle: false});\n    }\n\t\t\n\tpublic function showActions(completions:Array<CompletionData>)\n\t{\n\t\tvar cm = Editor.editor;\n        \n        CodeMirrorStatic.showHint(cm, function ()\n            {        \t\t\n\t\t\t\tvar pos = cm.getCursor();\n                                  \n        \t\tvar data:Dynamic = { list: completions, from: pos, to: pos };\n        \t\treturn data;\n            }\n        , {completeSingle: false});\n\t}\n\n\t\t\n\tpublic function showCodeSuggestions(suggestions:Array<String>)\n\t{\n\t\tvar cm = Editor.editor;\n        \n        CodeMirrorStatic.showHint(cm, function ()\n            {\n                var completions:Array<CompletionData> = [];\n                \n                var completion:CompletionData;\n                \n\t\t\t\tvar pos = cm.getCursor();\n\t\t\t\t\n\t\t\t\tvar word = getCurrentWord(cm, {word: ~/[A-Z_0-9]+$/i}, pos).word;\n\t\t\t\t\n                for (item in suggestions)\n                {\n\t\t\t\t\t if (word == null || StringTools.startsWith(item, word))\n\t\t\t\t\t {\n\t\t\t\t\t\t completion = {};\n\t\t\t\t\t\t completion.text = item;\n\t\t\t\t\t\t completions.push(completion); \n\t\t\t\t\t } \n\t\t\t\t}\n                                  \n\t\t\t\tvar data:Dynamic = { list: completions, from: {line: pos.line, ch: start}, to: {line: pos.line, ch: end} };\n        \t\treturn data;\n            }\n        , {completeSingle: false});\n\t}\n\t\n    public function getClassList()\n    {\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n        var value = tabManagerInstance.getCurrentDocument().getValue();\n\t\tvar mainClass = Path.basename(tabManagerInstance.getCurrentDocumentPath(), \".hx\");\n\n        var filePackage = RegexParser.getFilePackage(value);\n        var fileImports = RegexParser.getFileImportsList(value);\n\n        var topLevelClassList:Array<TopLevelImport> = [];\n        var importsList:Array<String> = [];\n        \n        var relativeImport:String = null;\n\n        var parentPackages:Array<String> = [];\n        \n        if (filePackage.filePackage != null && filePackage.filePackage != \"\")\n        {\n            var packages = filePackage.filePackage.split(\".\");\n\n            var parentPackage:String;\n\n            while (packages.length > 0)\n            {\n                parentPackage = packages.join(\".\");\n                packages.pop();\n                parentPackages.push(parentPackage);\n            }\n        }\n        \n        var found:Bool;\n            \n        for (list2 in [ClassParser.importsList, ClassParser.haxeStdImports])\n        {\n            for (item in list2) \n            {\n                found = false;\n                \n                for (parentPackage in parentPackages)\n                {\n                \tif (StringTools.startsWith(item, parentPackage + \".\") && item.indexOf(\".\", parentPackage.length + 1) == -1)\n                    {\n                        relativeImport = item.substr(parentPackage.length + 1);\n                        topLevelClassList.push({name: relativeImport, fullName: item});\n                        found = true;\n                        break;\n                    }\n                }\n                \n            \tif (!found)\n                {\n                    if (fileImports.indexOf(item) != -1)\n                    {\n                        relativeImport = item.split(\".\").pop();\n                        topLevelClassList.push({name: relativeImport, fullName: item});\n                    }\n                    else if (filePackage.filePackage != null && filePackage.filePackage != \"\" && StringTools.startsWith(item, filePackage.filePackage + \".\"))\n                    {\n\t\t\t\t\t\trelativeImport = item.substr(filePackage.filePackage.length + 1);\n\t\t\t\t\t\t\n\t\t\t\t\t\ttrace(relativeImport);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (StringTools.startsWith(relativeImport, mainClass + \".\"))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trelativeImport = relativeImport.substr(mainClass.length + 1);\n\t\t\t\t\t\t\ttrace(relativeImport);\n\t\t\t\t\t\t\ttopLevelClassList.push({name: relativeImport, fullName: item});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\timportsList.push(relativeImport);\n\t\t\t\t\t\t}\n                    }\n                    else\n                    {\n                        relativeImport = item;\n                        importsList.push(relativeImport);\n                    }\n                }\n                \n            }\n        }\n\n        for (list2 in [ClassParser.haxeStdTopLevelClassList, ClassParser.topLevelClassList])\n        {\n            for (item in list2) \n            {\n\n                topLevelClassList.push({name: item});\n            }\n        }\n            \n       \tfor (item in fileImports)\n        {\n            found = false;\n             \n\t\t\trelativeImport = item.split(\".\").pop();\n\t\t\t\n\t\t\tfor (topLevelItem in topLevelClassList)\n            {\n                if (topLevelItem.name == relativeImport)\n                {\n                    found = true;\n                    break;\n                }\n\t\t\t}\n\n\t\t\tif (!found)\n            {\n                topLevelClassList.push({name: relativeImport, fullName: item});\n            }\n\t\t}\n            \n        return {topLevelClassList: topLevelClassList, importsList: importsList};\n    }\n\n        \n\tpublic function getCompletionType()\n    {\n        return completionType;\n    }\n\n}\n","package core;\nimport js.node.Fs;\nimport js.node.Path;\nimport js.node.fs.Stats;\nimport filetree.FileTree;\nimport js.Browser;\nimport openproject.OpenProject;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass DragAndDrop\n{\t\n\t//If this plugin is selected as active in HIDE, then HIDE will call this function once on load\t\n\tpublic static function prepare():Void\n\t{\t\t\n\t\tBrowser.window.addEventListener(\"dragover\", function(e) \n\t\t{\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t\t);\n\t\t\n\t\tBrowser.window.addEventListener(\"drop\", function(e:Dynamic) \n\t\t{\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\t\n\t\t\tfor (i in 0...e.dataTransfer.files.length) \n\t\t\t{\n\t\t\t\tvar path:String = e.dataTransfer.files[i].path;\n\t\t\t\tFs.stat(path, function (err, stats:Stats)\n\t\t\t\t{\n\t\t\t\t\tif (stats.isDirectory())\n\t\t\t\t\t{\n\t\t\t\t\t\tvar filetreeInstance = FileTree.get();\n\t\t\t\t\t\tfiletreeInstance.load(Path.basename(path), path);\n\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\tOpenProject.openProject(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t\t);\n\t}\n\t\n}","package core;\nimport js.atomshell.browser.BrowserWindow;\nimport js.atomshell.browser.Dialog;\nimport js.Browser;\nimport js.html.InputElement;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass FileDialog\n{\n\tstatic var input:InputElement;\n\tstatic var onClick:String->Void;\n\t\n\tpublic static function create():Void\n\t{\n// \t\tinput = Browser.document.createInputElement();\n// \t\tinput.type = \"file\";\n// \t\tinput.style.display = \"none\";\n// \t\tinput.addEventListener(\"change\", function(e) \n// \t\t{\n// \t\t\tvar value:String = input.value;\n// \t\t\tif (value != \"\") \n// \t\t\t{\n// \t\t\t\tonClick(value);\n// \t\t\t}\n// \t\t});\n\t\t\n// \t\tBrowser.document.body.appendChild(input);\n\t}\n\t\n\tpublic static function openFile(_onClick:String->Void, ?extensions:String):Void\n\t{\n// \t\tinput.value = \"\";\n\t\t\n// \t\tonClick = _onClick;\n\t\t\n// \t\tif (input.hasAttribute(\"nwsaveas\"))\n// \t\t{\n// \t\t\tinput.removeAttribute(\"nwsaveas\");\n// \t\t}\n\t\t\n// \t\tif (input.hasAttribute(\"nwdirectory\"))\n// \t\t{\n// \t\t\tinput.removeAttribute(\"nwdirectory\");\n// \t\t}\n\t\t\n// \t\tif (extensions != null) \n// \t\t{\n// \t\t\tinput.setAttribute(\"accept\", extensions);\n// \t\t}\n// \t\telse \n// \t\t{\n// \t\t\tinput.removeAttribute(\"accept\");\n// \t\t}\n\t\t\n// \t\tinput.click();\n\t\t\n\t\tvar options:DialogOpenOptions = {};\n\t\toptions.title = \"Open File\";\n\t\toptions.properties = [];\n\t\toptions.properties.push(DialogOpenOptionsProperty.OPEN_FILE);\n\t\t\n\t\tDialog.showOpenDialog(BrowserWindow.getAllWindows()[0], options, function (filenames)\n\t\t{\n\t\t\tif (filenames != null)\n\t\t\t{\n\t\t\t\ttrace(filenames);\n\t\t\t\t_onClick(filenames[0]);\n\t\t\t}\n\n\t\t});\n\t}\n\t\n\tpublic static function saveFile(_onClick:String->Void, ?_name:String):Void\n\t{\n// \t\tinput.value = \"\";\n\t\t\n// \t\tonClick = _onClick;\n\t\t\n// \t\tif (_name == null)\n// \t\t{\n// \t\t\t_name = \"\";\n// \t\t}\n\t\t\n// \t\tif (input.hasAttribute(\"nwdirectory\"))\n// \t\t{\n// \t\t\tinput.removeAttribute(\"nwdirectory\");\n// \t\t}\n\t\t\n// \t\tinput.setAttribute(\"nwsaveas\", _name);\n// \t\tinput.click();\n\t\t\n\t\tvar options:DialogSaveOptions = {};\n\t\toptions.title = \"Save As\";\n\t\t\n\t\tDialog.showSaveDialog(BrowserWindow.getAllWindows()[0], options, function (filename)\n\t\t{\n\t\t\tif (filename != null)\n\t\t\t{\n\t\t\t\t_onClick(filename);\n\t\t\t}\n\n\t\t}); \n\t}\n\t\n\tpublic static function openFolder(_onClick:String->Void):Void\n\t{\n// \t\tinput.value = \"\";\n\t\t\n// \t\tonClick = _onClick;\n\t\t\n// \t\tif (input.hasAttribute(\"nwsaveas\"))\n// \t\t{\n// \t\t\tinput.removeAttribute(\"nwsaveas\");\n// \t\t}\n\t\t\n// \t\tinput.setAttribute(\"nwdirectory\", \"\");\n// \t\tinput.click();\n\t\t\n\t\tvar options:DialogOpenOptions = {};\n\t\toptions.title = \"Open Folder\";\n\t\toptions.properties = [];\n\t\toptions.properties.push(DialogOpenOptionsProperty.OPEN_DIRECTORY);\n\t\t\n\t\tDialog.showOpenDialog(BrowserWindow.getAllWindows()[0], options, function (filenames)\n\t\t{\n\t\t\tif (filenames != null)\n\t\t\t{\n\t\t\t\ttrace(filenames);\n\t\t\t\t_onClick(filenames[0]);\n\t\t\t}\n\n\t\t});\n\t}\n\t\n}","package core;\nimport CodeMirror.Pos;\nimport cm.Editor;\nimport core.Completion.CompletionItem;\nimport core.LineWidget;\nimport js.Browser;\nimport js.html.DivElement;\nimport js.html.SpanElement;\nimport js.Node;\nimport tabmanager.TabManager;\n\n/**\n * ...\n * @author AS3\n */\nclass FunctionParametersHelper\n{\n\tpublic var widgets:Array<LineWidget> = [];\n\tvar lastPos:CodeMirror.Pos;\n\t\n\tstatic var instance:FunctionParametersHelper = null;\n\t\n\tpublic function new()\n\t{\n\t\t\t\n\t}\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new FunctionParametersHelper();\n\t\t}\n\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function addWidget(type:String, name:String, parameters:Array<String>, retType:String, description:String, currentParameter:Int, pos:CodeMirror.Pos):Void\n\t{\t\t\n\t\tvar lineWidget:LineWidget = new LineWidget(type, name, parameters, retType, description, currentParameter, pos);\n\t\twidgets.push(lineWidget);\n\t}\n\t\n\tpublic function alreadyShown():Bool\n\t{\n\t\treturn widgets.length > 0;\n\t}\n\t\n\tpublic function updateScroll():Void\n\t{\n\t\tvar info = Editor.editor.getScrollInfo();\n\t\tvar after = Editor.editor.charCoords( { line: Editor.editor.getCursor().line + 1, ch: 0 }, \"local\").top;\n\t\t\n\t\tif (info.top + info.clientHeight < after)\n\t\t{\n\t\t\tEditor.editor.scrollTo(null, after - info.clientHeight + 3);\n\t\t}\n\t}\n\t\n\tpublic function clear():Void\n\t{\n\t\tfor (widget in widgets) \n\t\t{\n\t\t\tEditor.editor.removeLineWidget(widget.getWidget());\n\t\t}\n\t\t\n\t\twidgets = [];\n\t}\n\t\n\tpublic function update(cm:CodeMirror):Void\n\t{\t\t\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n\t\tvar doc = tabManagerInstance.getCurrentDocument();\n\t\t\n\t\tif (doc != null)\n\t\t{\n\t\t\tvar modeName:String = doc.getMode().name;\n\t\t\t\n\t\t\tif (modeName == \"haxe\" && !cm.state.completionActive)\n\t\t\t{\t\n\t\t\t\tvar cursor = cm.getCursor();\n\t\t\t\tvar data = cm.getLine(cursor.line);\t\t\t\n\n\t\t\t\tif (cursor != null && data.charAt(cursor.ch - 1) != \".\")\n\t\t\t\t{\n\t\t\t\t\tscanForBracket(cm, cursor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction scanForBracket(cm:CodeMirror, cursor:CodeMirror.Pos):Void\n\t{\n\t\t//{bracketRegex: untyped __js__(\"/[([\\\\]]/\")}\n        //{bracketRegex: untyped __js__(\"/[({}]/\")}\n        var bracketsData = cm.scanForBracket(cursor, -1, null, {bracketRegex: untyped __js__(\"/[([\\\\]]/\")});\n        \n        var pos:CodeMirror.Pos = null;\n        \n\t\tif (bracketsData != null && bracketsData.ch == \"(\") \n\t\t{\n            pos = {line:bracketsData.pos.line, ch:bracketsData.pos.ch};\n            \n            var matchedBracket:CodeMirror.Pos = cm.findMatchingBracket(pos, false, null).to;\n            \n            if (matchedBracket == null || (cursor.line <= matchedBracket.line && cursor.ch <= matchedBracket.ch))\n            {\n                var range:String = cm.getRange(bracketsData.pos, cursor);\n\t\t\t\n                var currentParameter:Int = range.split(\",\").length - 1;\n                \n                if (lastPos == null || lastPos.ch != pos.ch || lastPos.line != pos.line)\n                {\n                    getFunctionParams(cm, pos, currentParameter);  \n                }\n                else if (alreadyShown())\n                {\n                    for (widget in widgets)\n\t\t\t\t\t{\n\t\t\t\t\t\twidget.updateParameters(currentParameter);\t \n\t\t\t\t\t}\n                }\n                \n                lastPos = pos;\n\t\t\t}\n            else\n            {\n                lastPos = null;\n                clear();\n            }\n\t\t}\n\t\telse\n\t\t{\n            lastPos = null;\n\t\t\tclear();\n\t\t}\n\t}\n\t\n\tfunction getFunctionParams(cm:CodeMirror, pos:Pos, currentParameter:Int):Void\n\t{\n\t\tvar posBeforeBracket:Pos = {line:pos.line, ch:pos.ch - 1};\n\t\t\n\t\tvar completionInstance = Completion.get();\n\t\t\n\t\tvar word = completionInstance.getCurrentWord(cm, {}, posBeforeBracket).word;\n        \n\t\tcompletionInstance.getCompletion(function ()\n\t\t{\n\t\t\tvar found:Bool = false;\n\t\t\t\n\t\t\tclear();\n\t\t\t\n\t\t\tfor (completion in completionInstance.completions) \n\t\t\t{\t\t\t\t\t\t\t\n\t\t\t\tif (word == completion.n) \n\t\t\t\t{\n\t\t\t\t\tvar functionData = parseFunctionParams(completion.n, completion.t, completion.d);\n\t\t\t\t\t\n\t\t\t\t\tif (functionData.parameters != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar description = parseDescription(completion.d);\n\t\t\t\t\t\taddWidget(\"function\", completion.n, functionData.parameters, functionData.retType, description, currentParameter, cm.getCursor());\n\t\t\t\t\t\tfound = true;\n// \t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tupdateScroll();\n\t\t\t\n// \t\t\tif (!found) \n// \t\t\t{\n// \t\t\t\tFunctionParametersHelper.clear();\n// \t\t\t}  \n\t\t}\n\t\t, posBeforeBracket);\n\t}\n\t\n\tfunction parseDescription(description:String)\n\t{\t\t\t\t\t\t\n\t\tif (description != null) \n\t\t{\n\t\t\tif (description.indexOf(\".\") != -1) \n\t\t\t{\n\t\t\t\tdescription = description.split(\".\")[0];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn description;\n\t}\n\t\n\tpublic function parseFunctionParams(name:String, type:String, description:String)\n\t{\n\t\tvar parameters:Array<String> = null;\n\t\t\n\t\tvar retType:String = null;\n\t\t\n\t\tif (type != null && type.indexOf(\"->\") != -1) \n\t\t{\n\t\t\tvar openBracketsCount:Int = 0;\n\t\t\tvar positions:Array<{start:Int, end:Int}> = [];\n\t\t\tvar i:Int = 0;\n\t\t\tvar lastPos:Int = 0;\n\t\t\t\n\t\t\twhile (i < type.length) \n\t\t\t{\t\t\t\t\n\t\t\t\tswitch (type.charAt(i)) \n\t\t\t\t{\n\t\t\t\t\tcase \"-\":\n\t\t\t\t\t\tif (openBracketsCount == 0 && type.charAt(i + 1) == \">\") \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpositions.push({start: lastPos, end: i-1});\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\tlastPos = i;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \"(\":\n\t\t\t\t\t\topenBracketsCount++;\n\t\t\t\t\tcase \")\":\n\t\t\t\t\t\topenBracketsCount--;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ti++;\n\t\t\t}\n\t\t\t\n\t\t\tpositions.push( { start: lastPos, end: type.length } );\n\t\t\t\n\t\t\tparameters = [];\n\t\t\t\n\t\t\tfor (j in 0...positions.length) \n\t\t\t{\n\t\t\t\tvar param:String = StringTools.trim(type.substring(positions[j].start, positions[j].end));\n\t\t\t\t\n\t\t\t\tif (j < positions.length - 1) \n\t\t\t\t{\n\t\t\t\t\tparameters.push(param);\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tretType = param;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (parameters.length == 1 && parameters[0] == \"Void\") \n\t\t\t{\n\t\t\t\tparameters = [];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn {parameters: parameters, retType: retType};\n\t}\n}\n","package core;\nimport cm.Editor;\nimport tabmanager.TabManager;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass GoToLine\n{\n\tstatic var instance:GoToLine;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new GoToLine();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function show()\n\t{\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n\t\tif (tabManagerInstance.selectedPath != null) \n\t\t{\n\t\t\tAlertify.prompt(\"Go to Line\", function (e:Bool, str:String):Void \n\t\t\t{\n\t\t\t\tvar cm2 = Editor.editor;\n\t\t\t\tvar lineNumber = Std.parseInt(str);\n\t\t\t\tcm2.centerOnLine(lineNumber);\n\t\t\t\tvar highlightRange = cm.HighlightRange.get();\n\t\t\t\t\n\t\t\t\tvar from = {line: lineNumber, ch: 0};\n\t\t\t\tvar to = {line: lineNumber, ch: cm2.getLine(lineNumber).length};\n\t\t\t\thighlightRange.highlight(cm2, from, to);\n\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n}","package core;\nimport js.node.Path;\nimport parser.ClasspathWalker;\nimport haxe.xml.Fast;\nimport js.Node;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass HaxeHelper\n{\n\tstatic var haxeArguments:Array<String>;\n\tstatic var haxeDefines:Array<String>;\n\tstatic var haxelibHaxelibs:Array<String>;\n\tstatic var installedHaxelibs:Array<String>;\n\tstatic var pathToHaxe:String;\n\tstatic var pathToHaxelib:String;\n\t\n\tpublic static function getArguments(onComplete:Array<String>->Void):Void\n\t{\n\t\tif (haxeArguments != null) \n\t\t{\n\t\t\tonComplete(haxeArguments);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tvar data:Array<String> = [];\n\t\t\n\t\t\tvar processHelper = ProcessHelper.get();\n\t\t\t\n\t\t\tprocessHelper.runProcess(getPathToHaxe(), [\"--help\"], null, function (stdout:String, stderr:String):Void \n\t\t\t{\n\t\t\t\tvar regex:EReg = ~/-+[A-Z-]+ /gim;\n\t\t\t\tregex.map(stderr, function (ereg:EReg):String\n\t\t\t\t{\n\t\t\t\t\tvar str = ereg.matched(0);\n\t\t\t\t\tdata.push(str.substr(0, str.length - 1));\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\t);\n\t\t\t\thaxeArguments = data;\n\t\t\t\tonComplete(haxeArguments);\n\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\t\n\tpublic static function getDefines(onComplete:Array<String>->Void):Void\n\t{\n\t\tif (haxeDefines != null) \n\t\t{\n\t\t\tonComplete(haxeDefines);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tvar processHelper = ProcessHelper.get();\n\t\t\t\n\t\t\tvar data:Array<String> = [];\n\t\t\n\t\t\tprocessHelper.runProcess(getPathToHaxe(), [\"--help-defines\"], null, function (stdout:String, stderr:String):Void \n\t\t\t{\n\t\t\t\tvar regex:EReg = ~/[A-Z-]+ +:/gim;\n\t\t\t\tregex.map(stdout, function (ereg:EReg):String\n\t\t\t\t{\n\t\t\t\t\tvar str = ereg.matched(0);\n\t\t\t\t\tdata.push(StringTools.trim(str.substr(0, str.length - 1)));\n\t\t\t\t\treturn ereg.matched(0);\n\t\t\t\t}\n\t\t\t\t);\n\t\t\t\thaxeDefines = data;\n\t\t\t\tonComplete(haxeDefines);\n\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\t\n\tpublic static function getInstalledHaxelibList(onComplete:Array<String>->Void):Void\n\t{\n\t\tif (installedHaxelibs != null) \n\t\t{\n\t\t\tonComplete(installedHaxelibs);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tvar processHelper = ProcessHelper.get();\n\t\t\t\n\t\t\tvar data:Array<String> = [];\n\t\t\n\t\t\tprocessHelper.runProcess(getPathToHaxelib(), [\"list\"], null, function (stdout:String, stderr:String):Void \n\t\t\t{\n\t\t\t\tvar regex:EReg = ~/^[A-Z-]+:/gim;\n\t\t\t\tregex.map(stdout, function (ereg:EReg):String\n\t\t\t\t{\n\t\t\t\t\tvar str = ereg.matched(0);\n\t\t\t\t\tdata.push(str.substr(0, str.length - 1));\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tinstalledHaxelibs = data;\n\t\t\t\tonComplete(installedHaxelibs);\n\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\t\n\tpublic static function getHaxelibList(onComplete:Array<String>->Void):Void \n\t{\n\t\tif (haxelibHaxelibs != null) \n\t\t{\n\t\t\tonComplete(haxelibHaxelibs);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tvar processHelper = ProcessHelper.get();\n\t\t\t\n\t\t\tvar data:Array<String> = [];\n\t\t\n\t\t\tprocessHelper.runProcess(getPathToHaxelib(), [\"search\", '\"\"'], null, function (stdout:String, stderr:String):Void \n\t\t\t{\t\t\t\t\n\t\t\t\tvar lines:Array<String> = stdout.split(\"\\n\");\n\t\t\t\t\n\t\t\t\tfor (line in lines) \n\t\t\t\t{\n\t\t\t\t\tline = StringTools.trim(line);\n\t\t\t\t\t\n\t\t\t\t\tif (line.length > 0 && line.indexOf(\" \") == -1) \n\t\t\t\t\t{\n\t\t\t\t\t\tdata.push(line);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\thaxelibHaxelibs = data;\n\t\t\t\tonComplete(haxelibHaxelibs);\n\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic static function getVersion(onComplete:String->Void):Void\n\t{\n\t\tvar processHelper = ProcessHelper.get();\n\t\t\n\t\tprocessHelper.runProcess(getPathToHaxe(), [\"-version\"], null, function (stdout:String, stderr:String):Void \n\t\t{\n\t\t\tonComplete(stdout);\n\t\t}\n\t\t);\n\t}\n\n\tpublic static function getPathToHaxe()\n\t{\n\t\treturn pathToHaxe;\n\t}\n\n\tpublic static function getPathToHaxelib()\n\t{\n\t\treturn pathToHaxelib;\n\t}\n\n\tpublic static function updatePathToHaxe()\n\t{\n\t\tpathToHaxe = \"haxe\";\n\t\tpathToHaxelib = \"haxelib\";\n\t\t\n\t\tvar classpathWalker = ClasspathWalker.get();\n\t\t\n\t\tvar pathToHaxeDirectory = classpathWalker.pathToHaxe;\n\t\t\n\t\tif (pathToHaxeDirectory != null)\n\t\t{\n\t\t\tpathToHaxe = Path.join(pathToHaxeDirectory, pathToHaxe);\n\t\t\tpathToHaxelib = Path.join(pathToHaxeDirectory, pathToHaxelib);\n\t\t}\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class StringMap<T> implements Map.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic function set( key : String, value : T ) : Void {\n\t\tuntyped h[\"$\"+key] = value;\n\t}\n\n\tpublic function get( key : String ) : Null<T> {\n\t\treturn untyped h[\"$\"+key];\n\t}\n\n\tpublic function exists( key : String ) : Bool {\n\t\treturn untyped h.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tkey = \"$\"+key;\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[\"$\"+i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","package core;\nimport parser.OutlineHelper;\nimport cm.Xml;\nimport cm.Editor;\nimport haxe.ds.StringMap.StringMap;\nimport tabmanager.TabManager;\n\ntypedef Info = {\n\tvar from:CodeMirror.Pos;\n\tvar to:CodeMirror.Pos;\n\tvar message:String;\n\tvar severity:String;\n}\n\n/**\n * ...\n * @author \n */\nclass HaxeLint\n{\n\tpublic static var fileData:StringMap<Array<Info>> = new StringMap();\n\tpublic static var parserData:StringMap<Array<Info>> = new StringMap();\n\n\tpublic static function load():Void\n\t{\n\t\tCodeMirror.registerHelper(\"lint\", \"haxe\", function (text:String) \n\t\t{\n\t\t\tvar found = [];\n\t\t\t\n\t\t\tvar tabManagerInstance = TabManager.get();\n\t\t\tvar path:String = tabManagerInstance.getCurrentDocumentPath();\n\t\t\t\n\t\t\tif (fileData.exists(path)) \n\t\t\t{\n\t\t\t\tvar data:Array<Info> = fileData.get(path);\n\t\t\t\t\n\t\t\t\tfound = found.concat(data);\n\t\t\t}\n\t\t\t\n\t\t\tif (parserData.exists(path)) \n\t\t\t{\n\t\t\t\tvar data:Array<Info> = parserData.get(path);\n\t\t\t\t\n\t\t\t\tfound = found.concat(data);\n\t\t\t}\n\t\t\t\n\t\t\treturn found;\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic static function updateLinting():Void\n\t{\n\t\tvar annotationRuler = AnnotationRuler.get();\n\t\tannotationRuler.clearErrorMarkers();\n\t\t\n\t\tvar tabManagerInstance = TabManager.get();\n\t\tvar outlinePanel = OutlinePanel.get();\n\t\tvar outlineHelper = OutlineHelper.get();\n\t\tvar xmlInstance = Xml.get();\n        var doc = tabManagerInstance.getCurrentDocument();\n        \n\t\tif (doc != null)\n\t\t{\n            if (doc.getMode().name == \"haxe\")\n            {\n               \ttry\n                {\n                    HaxeParserProvider.getClassName();\n                }\n                catch (e:Dynamic)\n                {\n                    trace(e);\n                }\n\n\t\t\t\tvar path:String = tabManagerInstance.getCurrentDocumentPath();\n\t\t\t\t\t\n                outlineHelper.getList(doc.getValue(), path);\n\n                if (fileData.exists(path)) \n                {\n                    var data:Array<Info> = fileData.get(path);\n\n                    for (item in data) \n                    {\n                        annotationRuler.addErrorMarker(path, item.from.line, item.from.ch, item.message);\n                    }\n                }\n\n                Editor.editor.setOption(\"lint\", false);\n                Editor.editor.setOption(\"lint\", true); \n            }       \n            else if (doc.getMode().name == \"xml\")\n            {\n                xmlInstance.generateXmlCompletion();\n            }\n        \telse\n           \t{\n                outlinePanel.clearFields();\n            \toutlinePanel.update();\n            }\n\t\t\t\n\t\t}\n    \telse\n        {\n            outlinePanel.clearFields();\n            outlinePanel.update();\n        }\n\t}\n\t\n}","package core;\nimport byte.ByteData;\nimport cm.CMDoc;\nimport cm.Editor;\nimport core.HaxeLint.Info;\nimport haxe.macro.Expr;\nimport haxe.macro.Expr.Field;\nimport haxe.macro.Expr.Position;\nimport haxeparser.Data.ClassFlag;\nimport haxeparser.Data.Definition;\nimport haxeparser.Data.ImportMode;\nimport haxeparser.Data.TypeDef;\nimport haxeparser.HaxeParser;\nimport haxeparser.HaxeParser.ParserErrorMsg;\nimport hxparse.NoMatch;\nimport hxparse.Unexpected;\nimport jQuery.JQuery;\nimport js.Node;\nimport tabmanager.TabManager;\n\n/**\n * ...\n * @author\n */\n\nenum FunctionScopeType\n{\n\tSClass;\n\tSStatic;\n\tSRegular;\n}\n\nclass HaxeParserProvider\n{\n\tstatic var currentClass:String;\n\tstatic var currentFunctionScopeType:FunctionScopeType;\n\t\n\tpublic static function test():Void\n\t{\n\t\t//var path = \"../src/Main.hx\";\n\t\t//\n\t\t//var options:NodeFsFileOptions = { };\n\t\t//options.encoding = \"utf8\";\n\t\t//\n\t\t//var data:String = Fs.readFileSync(path, options);\n\t\t//\n\t\t//getClassName(data, path);\n\t}\n\t\n\tprivate static function processClass(type:Definition<ClassFlag, Array<Field>>, pos:Int):Bool\n\t{\n\t\tvar found:Bool = false;\n\t\t\n\t\tcurrentClass = type.name;\n\t\tcurrentFunctionScopeType = SClass;\n\t\t\n\t\tfor (i in 0...type.data.length) \n\t\t{\t\t\t\n\t\t\tif (pos > type.data[i].pos.min && pos < type.data[i].pos.max) \n\t\t\t{\n\t\t\t\tswitch (type.data[i].kind) \n\t\t\t\t{\n\t\t\t\t\tcase FFun(f):\n\t\t\t\t\t\tcurrentFunctionScopeType = getFunctionScope(type.data[i], f);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (pos > f.expr.pos.min && pos < f.expr.pos.max) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (processExpression(f.expr.expr, pos)) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tcase FVar(t, e):\n\t\t\t\t\t\t//trace(e);\n\t\t\t\t\t\tcurrentFunctionScopeType = SClass;\n\t\t\t\t\tcase FProp(get, set, t, e):\n\t\t\t\t\t\tcurrentFunctionScopeType = SClass;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//trace(type.data[i].name);\n\t\t\t\t//trace(currentFunctionScopeType);\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn found;\n\t}\n\t\n\tstatic function processExpression(expr:haxe.macro.ExprDef, pos:Int):Bool \n\t{\n\t\t//trace(expr);\n\t\t\n\t\tvar found:Bool = false;\n\t\t\n\t\tswitch (expr)\n\t\t{\n\t\t\tcase EWhile(econd, e, b):\n\t\t\tcase EVars(vars):\n\t\t\tcase EUntyped(e):\n\t\t\tcase EUnop(op, postFix, e):\n\t\t\tcase ETry(e, catches):\n\t\t\tcase EThrow(e):\n\t\t\tcase ETernary(econd, eif, eelse):\n\t\t\tcase ESwitch(e, cases, edef):\n\t\t\tcase EReturn(e):\n\t\t\tcase EParenthesis(e):\n\t\t\tcase EObjectDecl(fields):\n\t\t\tcase ENew(t, params):\n\t\t\tcase EMeta(s, e):\n\t\t\tcase EIn(e1, e2):\n\t\t\tcase EIf(econd, eif, eelse):\n\t\t\tcase EFunction(name, f):\n\t\t\tcase EFor(it, expr):\n\t\t\tcase EField(e, field):\n\t\t\t\tprocessExpression(e.expr, pos);\n\t\t\t\t//trace(field);\n\t\t\tcase EDisplayNew(t):\n\t\t\tcase EDisplay(e, isCall):\n\t\t\tcase EContinue:\n\t\t\tcase EConst(c):\n\t\t\t\tswitch (c) \n\t\t\t\t{\n\t\t\t\t\tcase CIdent(s):\n\t\t\t\t\t\t//trace(s);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\tcase ECheckType(e, t):\n\t\t\tcase ECast(e, t):\n\t\t\tcase ECall(e, params):\n\t\t\t\t//trace(e);\n\t\t\t\tprocessExpression(e.expr, pos);\n\t\t\t\t\n\t\t\t\tfor (param in params) \n\t\t\t\t{\n\t\t\t\t\tprocessExpression(param.expr, pos);\n\t\t\t\t}\n\t\t\tcase EBreak:\n\t\t\tcase EBlock(exprs):\n\t\t\t\tfor (e in exprs) \n\t\t\t\t{\n\t\t\t\t\tif (pos > e.pos.max) \n\t\t\t\t\t{\n\t\t\t\t\t\t//trace(e.expr);\n\t\t\t\t\t}\n\t\t\t\t\tif (pos > e.pos.min && pos <= e.pos.max) \n\t\t\t\t\t{\n\t\t\t\t\t\tif (processExpression(e.expr, pos))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase EBinop(op, e1, e2):\n\t\t\t\t//trace(op);\n\t\t\t\t//trace(e1);\n\t\t\t\t//trace(e2);\n\t\t\tcase EArrayDecl(values):\n\t\t\tcase EArray(e1, e2):\n\t\t}\n\t\t\n\t\treturn found;\n\t}\n\t\n\tstatic function getFunctionScope(field:Field, f:Function) \n\t{\n\t\tvar\tfunctionScopeType:FunctionScopeType = SRegular;\n\t\t\n\t\tvar access:Array<Access> = field.access;\n\t\t\n\t\tfor (accessType in access)\n\t\t{\n\t\t\tswitch (accessType) \n\t\t\t{\n\t\t\t\tcase APublic:\n\t\t\t\tcase AStatic:\n\t\t\t\t\tfunctionScopeType = SStatic;\n\t\t\t\tcase AMacro:\n\t\t\t\tcase AInline:\n\t\t\t\tcase ADynamic:\n\t\t\t\tcase AOverride:\n\t\t\t\tcase APrivate:\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn functionScopeType;\n\t}\n\t\n\tpublic static function getClassName():Void \n\t{\n\t\tvar cm = Editor.editor;\n\t\tvar pos = cm.indexFromPos(cm.getCursor());\n\t\t//trace(pos);\n\t\t\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n\t\tvar doc:CodeMirror.Doc = tabManagerInstance.getCurrentDocument();\n\t\t\n\t\tvar data:String = doc.getValue();\n\t\tvar path:String = tabManagerInstance.getCurrentDocumentPath();\n\t\t\n\t\tvar ast = parse(data, path);\n\t\t\n\t\tif (ast != null) \n\t\t{\n\t\t\tvar classPackage:Array<String> = ast.pack;\n\t\t\t\n\t\t\tfor (decl in ast.decls) switch (decl.decl) \n\t\t\t{\n\t\t\t\tcase EImport(sl, mode): \n\t\t\t\t\tcurrentClass = null;\n\t\t\t\t\tif (processImport(sl, mode, pos)) \n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase EUsing(path): \n\t\t\t\t\tcurrentClass = null;\n\t\t\t\tcase EAbstract(data): \n\t\t\t\t\tcurrentClass = null;\n\t\t\t\tcase EClass(data): \n\t\t\t\t\tif (processClass(data, pos)) \n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase EEnum(data): \n\t\t\t\t\tcurrentClass = null;\n\t\t\t\tcase ETypedef(data): \n\t\t\t\t\tcurrentClass = null;\n\t\t\t}\n\t\t\t\n\t\t\t//trace(classPackage);\n\t\t\t//trace(currentClass);\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttrace(\"ast is null\");\n\t\t}\n\t}\n\t\n\tprivate static function parse(data:String, path:String) \n\t{\n\t\tvar input = ByteData.ofString(data);\n\t\t\n\t\tvar parser = new haxeparser.HaxeParser(input, path);\n\n\t\tvar data:Array<Info> = [];\n\t\tHaxeLint.parserData.set(path, data);\n\t\t\n\t\tvar ast = null;\n\t\t\n\t\ttry \n\t\t{\n\t\t\tast = parser.parse();\n\t\t}\n\t\tcatch (e:NoMatch<Dynamic>) \n\t\t{\n\t\t\t//trace(e);\n\t\t\tvar pos =  e.pos.getLinePosition(input);\n\t\t\t\n\t\t\tvar info:Info = { from: {line:pos.lineMin - 1, ch:pos.posMin}, to: {line:pos.lineMax - 1, ch:pos.posMax}, message: \"Parser error:\\nUnexpected \" + e.token.tok, severity: \"warning\"};\n\t\t\tdata.push(info);\n\t\t\t\n\t\t\t//throw e.pos.format(input) + \": Unexpected \" +e.token.tok;\n\t\t}\n\t\tcatch (e:Unexpected<Dynamic>) \n\t\t{\n\t\t\t//trace(e);\n\t\t\tvar pos =  e.pos.getLinePosition(input);\n\t\t\t\n\t\t\tvar info:Info = { from: {line: pos.lineMin - 1, ch: pos.posMin}, to: {line:pos.lineMax - 1, ch:pos.posMax}, message: \"Parser error:\\nUnexpected \" + e.token.tok, severity: \"warning\"};\n\t\t\tdata.push(info);\n\t\t\t//trace(e.pos.format(input) + \": Unexpected \" + e.token.tok);\n\t\t\t//throw e.pos.format(input) + \": Unexpected \" + e.token.tok;\n\t\t} \n\t\tcatch (e:Dynamic)\n\t\t{\t\t\t\n\t\t\tif (e != null && e.pos) \n\t\t\t{\t\t\n\t\t\t\tvar cm = Editor.editor;\n\t\t\t\t\n\t\t\t\tvar message:String = \"Parser error:\\n\";\n\t\t\t\t\n\t\t\t\tswitch (e.msg) \n\t\t\t\t{\n\t\t\t\t\tcase MissingSemicolon:\n\t\t\t\t\t\tmessage += \"Missing Semicolon\";\n\t\t\t\t\tcase MissingType:\n\t\t\t\t\t\tmessage += \"Missing Type\";\n\t\t\t\t\tcase DuplicateDefault:\n\t\t\t\t\t\tmessage += \"Duplicate Default\";\n\t\t\t\t\tcase Custom(s):\n\t\t\t\t\t\tmessage += s;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar info:Info = { from: cm.posFromIndex(e.pos.min), to: cm.posFromIndex(e.pos.max), message: message, severity: \"warning\"};\n\t\t\t\tdata.push(info);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn ast;\n\t}\n\t\n\tprivate static function processImport(path:Array<{pack:String, pos:Position}>, mode:ImportMode, currentPosition:Int):Bool \n\t{\n\t\tvar found:Bool = false;\n\t\t\n\t\tfor (i in 0...path.length) \n\t\t{\t\t\t\n\t\t\tif (currentPosition > path[i].pos.min && currentPosition < path[i].pos.max) \n\t\t\t{\n\t\t\t\t//trace(path[i].pack);\n\t\t\t\t\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn found;\n\t}\n\t\n\tprivate static function printImport(path:Array<{pack:String, pos:Position}>, mode:ImportMode):Void\n\t{\n\t\tvar fullPackage:String = \"\";\n\t\t\n\t\tfor (i in 0...path.length) \n\t\t{\n\t\t\tfullPackage += path[i].pack;\n\t\t\t\n\t\t\tif (i != path.length - 1) \n\t\t\t{\n\t\t\t\tfullPackage += \".\";\n\t\t\t}\n\t\t\t\n\t\t\t//trace(path[i].pos);\n\t\t}\n\t\t\n\t\ttrace(fullPackage);\n\t}\n\t\n\tprivate static function printClass(type:Definition<ClassFlag, Array<Field>>):Void \n\t{\n\t\ttrace(type.name);\n\t\t\n\t\tvar publicFunctions:Array<Field> = [];\n\t\tvar publicStaticFunctions:Array<Field> = [];\n\t\t\n\t\t\t//if (isPublic) \n\t\t\t//{\n\t\t\t\t//if (isStatic) \n\t\t\t\t//{\n\t\t\t\t\t//publicStaticFunctions.push(type.data[i]);\n\t\t\t\t//}\n\t\t\t\t//else \n\t\t\t\t//{\n\t\t\t\t\t//publicFunctions.push(type.data[i]);\n\t\t\t\t//}\n\t\t\t//}\n\t\t\n\t\t//for (publicFunction in publicFunctions) \n\t\t//{\n\t\t\t//trace(\"public \" + publicFunction.name);\n\t\t//}\n\t\t//\n\t\tfor (publicStaticFunction in publicStaticFunctions) \n\t\t{\n\t\t\t//trace(\"public static \" + publicStaticFunction.name);\n\t\t\t\n\t\t\tvar info:String = publicStaticFunction.name;\n\t\t\t\n\t\t\tswitch (publicStaticFunction.kind) \n\t\t\t{\n\t\t\t\tcase FFun(f):\n\t\t\t\t\t//trace(f);\n\t\t\t\t\t//trace(f.expr);\n\t\t\t\t\t//trace(f.params);\n\t\t\t\t\tinfo += \"(\";\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...f.args.length) \n\t\t\t\t\t{\n\t\t\t\t\t\tinfo += f.args[i].name;\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch (f.args[i].type) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase TPath(p):\n\t\t\t\t\t\t\t\t//p.pack.join(\".\") + \".\"\n\t\t\t\t\t\t\t\tinfo += \":\" + p.name;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (i != f.args.length - 1) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tinfo += \", \";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase TParent(t):\n// \t\t\t\t\t\t\t\ttrace(t);\n\t\t\t\t\t\t\tcase TOptional(t):\n\t\t\t\t\t\t\t\t//trace(t);\n\t\t\t\t\t\t\tcase TFunction(args, ret):\n\t\t\t\t\t\t\t\t//trace(args);\n\t\t\t\t\t\t\t\t//trace(ret);\n\t\t\t\t\t\t\tcase TExtend(p, fields):\n\t\t\t\t\t\t\t\t//trace(p, fields);\n\t\t\t\t\t\t\tcase TAnonymous(fields):\n\t\t\t\t\t\t\t\t//trace(fields);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tinfo += \")\";\n\t\t\t\tcase FVar(t, e):\n\t\t\t\t\t\n\t\t\t\tcase FProp(get, set, t, e):\n\t\t\t\t\t\n\t\t\t}\n\t\t\t\n// \t\t\ttrace(info);\n\t\t}\n\t}\n}","package core;\nimport js.node.Net;\nimport js.node.ChildProcess;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass HaxeServer\n{\n\tstatic var haxeServer:ChildProcess;\n\n\tpublic static function check():Void\n\t{\n\t\tvar socket = Net.connect(5000, \"localhost\");\n\t\t//socket.on(\"data\", function (e)\n\t\t//{\n\t\t\t//trace(e.toString(\"utf8\"));\n\t\t\t//socket.destroy();\n\t\t//}\n\t\t//);\n\t\tsocket.on(\"error\", function (e)\n\t\t{\n\t\t\ttrace(\"Haxe server is not found at localhost:5000\");\n\t\t}\n\t\t);\n\t\tsocket.on(\"close\", function (e)\n\t\t{\n\t\t\tif (e) \n\t\t\t{\n\t\t\t\tstart();\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic static function start():Void\n\t{\n\t\ttrace(\"Starting new Haxe server at localhost:5000\");\n\t\t\n\t\tvar processHelper = ProcessHelper.get();\n\t\t\n\t\thaxeServer = processHelper.runPersistentProcess(HaxeHelper.getPathToHaxe(), [\"--wait\", \"5000\"], null, function (code:Int, stdout:String, stderr:String):Void \n\t\t{\n\t\t\ttrace(stdout);\n\t\t\ttrace(stderr);\n\t\t}\n\t\t);\n\n// \t\tvar window:BrowserWindow = BrowserWindow.getAllWindows()[0];\n\t\t\n// \t\twindow.on(\"close\", function (e)\n// \t\t{\n// \t\t\tterminate();\n// \t\t\twindow.close();\n// \t\t}\n// \t\t);\n\t}\n\t\n\tpublic static function terminate():Void\n\t{\n\t\tif (haxeServer != null) \n\t\t{\n\t\t\thaxeServer.kill();\n\t\t}\n\t}\n}","package core;\nimport haxe.ds.StringMap.StringMap;\nimport haxe.Timer;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass Helper\n{\n\tstatic var timers:StringMap<Timer> = new StringMap();\n\t\n\tpublic static function debounce(type:String, onComplete:Dynamic, time_ms:Int)\n\t{\n\t\tvar timer = timers.get(type); \n\t\t\n\t\tif (timer != null) \n\t\t{\n\t\t\ttimer.stop();\n\t\t}\n\t\t\n\t\ttimer = new Timer(time_ms);\n\t\ttimer.run = function ():Void \n\t\t{\n\t\t\ttimer.stop();\n\t\t\tonComplete();\n\t\t};\n\t\t\n\t\ttimers.set(type, timer);\n\t}\n}","package core;\nimport js.node.Fs;\nimport js.node.Path;\nimport watchers.Watcher;\nimport watchers.SettingsWatcher;\nimport cm.Editor;\nimport haxe.ds.StringMap.StringMap;\nimport js.Browser;\nimport js.html.KeyboardEvent;\nimport js.html.SpanElement;\nimport js.Node;\nimport tjson.TJSON;\n\n/**\n * ...\n * @author AS3Boyan\n */\ntypedef Hotkey = \n{\n\tvar keyCode:Int;\n\tvar ctrl:Bool;\n\tvar shift:Bool;\n\tvar alt:Bool;\n\tvar onKeyDown:Dynamic;\n}\n \nclass Hotkeys\n{\n\tstatic var hotkeys:Array<Hotkey> = new Array();\n\tstatic var commandMap:StringMap<String> = new StringMap();\n\tstatic var spanMap:StringMap<SpanElement> = new StringMap();\n\tpublic static var data:Dynamic;\n\tstatic var pathToData:String;\n\tstatic var commandKey:Bool;\n\t\n\tpublic static function prepare():Void\n\t{\n\t\tcommandKey = Utils.os == Utils.MAC;\n\t\t\n\t\ttrace(\"Hotkeys adjusted for Mac OS X \" + Std.string(commandKey));\n\t\t\n\t\tpathToData = Path.join(SettingsWatcher.pathToFolder,\"hotkeys.json\");\n\t\tparseData();\n\t\t\n\t\tWatcher.watchFileForUpdates(pathToData, function ()\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tparseData();\n\t\t\t\t\t\t\t\t\t\thotkeys = new Array();\n\n\t\t\t\t\t\t\t\t\t\tfor (key in commandMap.keys()) \n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\taddHotkey(key);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t   , 1500);\n\t\t\n\t\tBrowser.window.addEventListener(\"keydown\", function (e:KeyboardEvent)\n\t\t{\n\t\t\tfor (hotkey in hotkeys)\n\t\t\t{\n\t\t\t\tif (isHotkeyEvent(hotkey, e))\n\t\t\t\t{\n\t\t\t\t\thotkey.onKeyDown();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic static function add(menuItem:String, hotkeyText:String, span:SpanElement, onKeyDown:Dynamic):Void\n\t{\n\t\tcommandMap.set(menuItem, onKeyDown);\n\t\t\n\t\tif (span != null)\n\t\t{\n\t\t\tspanMap.set(menuItem, span);\n\t\t}\n\t\t\n\t\taddHotkey(menuItem, hotkeyText);\n\t\t\n\t\tif (menuItem == \"Source->Show Code Completion\") \n\t\t{\t\t\t\t\t\t\n\t\t\tvar hotkey = parseHotkey(hotkeyText);\n\t\t\t\n\t\t\tEditor.editor.on(\"keypress\", function (cm, e:KeyboardEvent):Void \n\t\t\t{\n\t\t\t\tif (isHotkeyEvent(hotkey, e)) \n\t\t\t\t{\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\t\n\tpublic static function getHotkeyCommandCallback(menuItem:String)\n\t{\n\t\treturn commandMap.get(menuItem);\n\t}\n\t\n\tstatic function addHotkey(menuItem:String, ?hotkeyText:String = \"\")\n\t{\n\t\tif (Reflect.hasField(data, menuItem))\n\t\t{\n\t\t\thotkeyText = Reflect.field(data, menuItem);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tReflect.setField(data, menuItem, hotkeyText);\n\t\t\tvar data:String = TJSON.encode(data, 'fancy');\n\t\t\tFs.writeFileSync(pathToData, data, \"utf8\");\n\t\t}\n\t\t\n\t\tvar keyCode:Int = null;\n\t\tvar ctrl:Bool = null;\n\t\tvar shift:Bool = null;\n\t\tvar alt:Bool = null;\n\t\t\n\t\tif (hotkeyText != \"\")\n\t\t{\n\t\t\tvar hotkey:Dynamic = parseHotkey(hotkeyText);\n\t\t\t\n\t\t\tif (hotkey.keyCode != 0) \n\t\t\t{\n\t\t\t\tkeyCode = hotkey.keyCode;\n\t\t\t\tctrl = hotkey.ctrl;\n\t\t\t\tshift = hotkey.shift;\n\t\t\t\talt = hotkey.alt;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tBrowser.window.console.warn(\"can't assign hotkey \" + hotkeyText + \" for \" + menuItem);\n\t\t\t}\n\t\t\t\n\t\t\tif (spanMap.exists(menuItem)) \n\t\t\t{\n\t\t\t\tif (commandKey) \n\t\t\t\t{\n\t\t\t\t\thotkeyText = StringTools.replace(hotkeyText, \"Ctrl\", \"Cmd\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tspanMap.get(menuItem).innerText = hotkeyText;\n\t\t\t}\n\t\t\t\n\t\t\tif (keyCode != null) \n\t\t\t{\n\t\t\t\thotkey.onKeyDown = commandMap.get(menuItem);\n\t\t\t\thotkeys.push(hotkey);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tinline static function isHotkeyEvent(hotkey:Dynamic, e:KeyboardEvent):Bool\n\t{\n\t\tvar isHotkey:Bool = hotkey.keyCode == e.keyCode && hotkey.ctrl == (e.ctrlKey || (commandKey && e.metaKey)) && hotkey.shift == e.shiftKey && hotkey.alt == e.altKey;\n\t\treturn isHotkey;\n\t}\n\t\n\tstatic function parseData():Void\n\t{\n// \t\tvar options:NodeFsFileOptions = { };\n// \t\toptions.encoding = \"utf8\";\n\t\t\n\t\tdata = TJSON.parse(Fs.readFileSync(pathToData, \"utf8\"));\n\t}\n\t\n\tprivate static function parseHotkey(hotkey:String):Dynamic\n\t{\n\t\tvar keys:Array<String> = hotkey.split(\"-\");\n\t\t\n\t\tvar ctrl:Bool = false;\n\t\tvar shift:Bool = false;\n\t\tvar alt:Bool = false;\n\t\tvar keyCode:Int = 0;\n\t\t\n\t\tfor (key in keys) \n\t\t{\n\t\t\tswitch (key.toLowerCase()) \n\t\t\t{\t\t\t\t\n\t\t\t\tcase \"ctrl\":\n\t\t\t\t\tctrl = true;\n\t\t\t\tcase \"shift\":\n\t\t\t\t\tshift = true;\n\t\t\t\tcase \"alt\":\n\t\t\t\t\talt = true;\n\t\t\t\tcase \"f1\":\n\t\t\t\t\tkeyCode = 112;\n\t\t\t\tcase \"f2\":\n\t\t\t\t\tkeyCode = 113;\n\t\t\t\tcase \"f3\":\n\t\t\t\t\tkeyCode = 114;\n\t\t\t\tcase \"f4\":\n\t\t\t\t\tkeyCode = 115;\n\t\t\t\tcase \"f5\":\n\t\t\t\t\tkeyCode = 116;\n\t\t\t\tcase \"f6\":\n\t\t\t\t\tkeyCode = 117;\n\t\t\t\tcase \"f7\":\n\t\t\t\t\tkeyCode = 118;\n\t\t\t\tcase \"f8\":\n\t\t\t\t\tkeyCode = 119;\n\t\t\t\tcase \"f9\":\n\t\t\t\t\tkeyCode = 120;\n\t\t\t\tcase \"f10\":\n\t\t\t\t\tkeyCode = 121;\n\t\t\t\tcase \"f11\":\n\t\t\t\t\tkeyCode = 122;\n\t\t\t\tcase \"f12\":\n\t\t\t\t\tkeyCode = 123;\n\t\t\t\tcase \"tab\":\n\t\t\t\t\tkeyCode = 9;\n\t\t\t\tcase \"enter\":\n\t\t\t\t\tkeyCode = 13;\n\t\t\t\tcase \"esc\":\n\t\t\t\t\tkeyCode = 27;\n\t\t\t\tcase \"space\":\n\t\t\t\t\tkeyCode = 32;\n\t\t\t\tcase \"+\":\n\t\t\t\t\tkeyCode = 187;\n\t\t\t\tcase \"pageup\":\n\t\t\t\t\tkeyCode = 33;\n\t\t\t\tcase \"pagedown\":\n\t\t\t\t\tkeyCode = 34;\n\t\t\t\tcase \"\": \n\t\t\t\t\tkeyCode = 189;\n\t\t\t\tdefault:\n\t\t\t\t\tif (key.length == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tkeyCode = key.charCodeAt(0);\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn { keyCode:keyCode, ctrl: ctrl, shift: shift, alt:alt };\n\t}\n}","package core;\nimport tabmanager.TabManager;\nimport cm.Editor;\nimport core.Completion.TopLevelImport;\nimport parser.RegexParser;\nimport CodeMirror.TokenData;\nimport parser.ClassParser;\nimport parser.OutlineHelper;\nimport completion.Hxml.CompletionData;\n\n/**\n* @author AS3Boyan\n */\nclass ImportDefinition \n{\n    public static function searchImport(data:String, path:String)\n    {\n        var ast = ClassParser.parse(data, path);\n        \n        var cm = cm.Editor.editor;\n        var token = cm.getTokenAt(cm.getCursor());\n\t\t\n//         var fileImports:Array<String> = [];\n        var topLevelClassList:Array<TopLevelImport> = [];\n        \n        var mode:String = null;\n        \n        var selectedText:String = null;\n        \n        var from:CodeMirror.Pos = null;\n        var to:CodeMirror.Pos = null;\n        \n        if (cm.somethingSelected())\n        {\n            selectedText = cm.getSelection();\n            \n            if (selectedText.indexOf(\".\") != -1)\n            {\n                mode = \"selection\";\n                \n                var selection = cm.listSelections()[0];\n                \n                from = selection.anchor;\n                to = selection.head;\n                \n                cm.setSelection(to);\n            }\n        }\n        else if (token.type != null && token.string != \"\")\n        {\n\t\t\tmode = \"token\";\n        }\n            \n        if (mode != null)\n        {\n//             if (ast != null) \n//             {\n//                 fileImports = OutlineHelper.parseDeclarations(ast).fileImports;\t            \n//             }\n//             else\n//             {\n//                 trace(\"haxeparser is unable to parse this file. Falling back to regex parsing.\");\n                \n//                 var value = tabmanager.TabManager.getCurrentDocument().getValue();\n                \n//                 fileImports = RegexParser.getFileImportsList(value);\n//             }\n            \n\t\t\tvar completionInstance = Completion.get();\n\t\t\t\n            topLevelClassList = completionInstance.getClassList().topLevelClassList;\n            \n            switch (mode)\n            {\n                case \"token\":\n                    checkImport(cm, topLevelClassList, token);\n                case \"selection\":\n                    searchImportByText(topLevelClassList, selectedText, from, to);\n                default:\n\n            }\n        }\n        else\n        {\n            Alertify.log(\"Place cursor on class name or select full class name to import it (for instance, you can select 'flash.display.Sprite' and it can be imported and selected text will be replaced to 'Sprite'\");\n        }\n    }\n    \n    public static function searchImportByText(topLevelClassList:Array<TopLevelImport>, text:String, from:CodeMirror.Pos, to:CodeMirror.Pos, ?suggestImport:Bool = true)\n    {\n        var cm = Editor.editor;\n        \n        var found:Bool = false;\n        var alreadyAdded:Bool = false;\n\n        for (list in [ClassParser.importsList, ClassParser.haxeStdImports])\n        {\n            if (list.indexOf(text) != -1)\n            {\n                found = true;\n                break;\n            }\n        }\n\n        for (topLevelClass in topLevelClassList)\n        {\n            if (topLevelClass.fullName == text)\n            {\n                alreadyAdded = true;\n                break;\n            }\n        }\n\n        if (!alreadyAdded)\n        {\n            if (found)\n            {\n                importClass(cm, text, from, to);\n            }\n            else if (suggestImport)\n            {\n\t\t\t\tvar completionInstance = Completion.get();\n                completionInstance.showImportDefinition([text], from, to);\n            }\n        }\n        else\n        {\n            updateImport(cm, text.split(\".\").pop(), from, to);\n        }\n    }\n\n    \n    static function checkImport(cm:CodeMirror, topLevelClassList:Array<TopLevelImport>, token:TokenData)\n    {\n        var searchPattern = \".\" + token.string;\n\n        var foundImports:Array<String> = [];\n        var foundAtTopLevel:Bool = false;\n        var alreadyImported:Array<String> = [];\n        \n        for (topLevelClass in topLevelClassList)\n        {\n            if (topLevelClass.name == token.string)     \n            {\n                foundAtTopLevel = true;\n                alreadyImported.push(topLevelClass.fullName);\n                break;\n            }\n        }\n        \n\t\tif (!foundAtTopLevel)\n        {\n\t\t\tvar found:Bool = false;\n        \n            for (list in [ClassParser.importsList,  ClassParser.haxeStdImports])\n            {\n                for (item in list)\n                {\n                    if (StringTools.endsWith(item, searchPattern))\n                    {\n                        trace(item);\n\n                        for (topLevelClass in topLevelClassList)\n                        {\n                            if (topLevelClass.fullName == item)     \n                            {\n                                found = true;\n                                break;\n                            }\n                        }\n\n                        if (!found)\n                        {\n                            foundImports.push(item);\n                        }\n                        else\n                        {\n                            alreadyImported.push(item);\n                        }\n                    }\n                }\n            }            \n        }\n\n        if (foundAtTopLevel)\n        {\n            Alertify.log(\"'\" + token.string + \"' doesn't needs to be imported, since it's already found at top level\");\n        }\n        else if (foundImports.length > 0)\n        {\n\t\t\tvar completionInstance = Completion.get();\n            completionInstance.showImportDefinition(foundImports);\n        }\n        else\n        {\n\t\t\tvar cursor = cm.getCursor();\n\t\t\t\n\t\t\tvar lineData:String = cm.getLine(cursor.line);\n\t\t\t\n\t\t\tvar ereg = ~/var[\\t ]*([^ =]+):([^ =;\\n]+)/gim;\n\t\t\tvar ereg2 = ~/var[\\t ]*([^ =:;\\n]+)/gim;\n\t\t\t\n\t\t\tvar pos = null;\n\t\t\tvar len = null;\n\t\t\tvar variableName:String = null;\n\t\t\tvar variableDeclarationString:String = null;\n\t\t\t\n\t\t\tvar matchedEreg = null;\n\t\t\t\n\t\t\tif (ereg.match(lineData))\n\t\t\t{\n\t\t\t\tmatchedEreg = ereg;\n\t\t\t}\n\t\t\telse if (ereg2.match(lineData))\n\t\t\t{\n\t\t\t\tmatchedEreg = ereg2;\n\t\t\t}\n\t\t\t\t\n\t\t\tif (matchedEreg != null)\n\t\t\t{\n\t\t\t\tpos = matchedEreg.matchedPos();\n\t\t\t\tvariableName = matchedEreg.matched(1);\n\t\t\t\tvariableDeclarationString = matchedEreg.matched(0);\n\t\t\t\t\n\t\t\t\tlen = variableDeclarationString.length;\n\t\t\t\t\n\t\t\t\tvariableDeclarationString = StringTools.trim(variableDeclarationString);\n\t\t\t\tif (!StringTools.endsWith(variableDeclarationString, \";\"))\n\t\t\t\t{\n\t\t\t\t\tvariableDeclarationString += \";\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tvar tabManagerInstance = TabManager.get();\n\t\t\t\t\n\t\t\tvar classDeclarations = RegexParser.getClassDeclarations(tabManagerInstance.getCurrentDocument().getValue());\n\t\t\t\n\t\t\tvar currentClassDeclaration = null;\n\t\t\t\n\t\t\tfor (item in classDeclarations)\n\t\t\t{\n\t\t\t\t var classDeclarationPos = cm.posFromIndex(item.pos.pos + item.pos.len);\n\t\t\t\t \n\t\t\t\t if (cursor.line < classDeclarationPos.line || (cursor.line == classDeclarationPos.line && cursor.ch < classDeclarationPos.ch))\n\t\t\t\t {\n\t\t\t\t\t break;\n\t\t\t\t }\n\t\t\t\t \n\t\t\t\t currentClassDeclaration = item;\n\t\t\t}\n\t\t\t\n\t\t\tif (currentClassDeclaration != null && matchedEreg != null)\n\t\t\t{\n\t\t\t\tvar completionItem:CompletionData = {};\n\t\t\t\tcompletionItem.displayText = \"Move to the class scope\";\n\t\t\t\tcompletionItem.hint = function (cm:CodeMirror, data, completion)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar classDeclarationPos = cm.posFromIndex(currentClassDeclaration.pos.pos + currentClassDeclaration.pos.len);\n\t\t\t\t\t\tvar index = cm.indexFromPos({line: cursor.line, ch: 0});\n\t\t\t\t\t\t\n\t\t\t\t\t\tclassDeclarationPos.line += 1;\n\t\t\t\t\t\tclassDeclarationPos.ch = 0;\n\t\t\t\t\t\tvariableDeclarationString += \"\\n\";\n\t\t\t\t\t\tcm.replaceRange(variableDeclarationString, classDeclarationPos, classDeclarationPos);\n\t\t\t\t\t\tcm.indentLine(classDeclarationPos.line);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar from = cm.posFromIndex(index + pos.pos + variableDeclarationString.length + 1);\n\t\t\t\t\t\tvar to = cm.posFromIndex(index + pos.pos + pos.len + variableDeclarationString.length + 1);\n\t\t\t\t\t\tcm.replaceRange(variableName, from, to);\n\t\t\t\t\t};\n\t\t\t\t\n\t\t\t\tvar completionInstance = Completion.get();\n\t\t\t\tcompletionInstance.showActions([completionItem]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar info = \"Unable to find additional imports for '\" + token.string + \"'.\";\n\n\t\t\t\tif (alreadyImported.length > 0)\n\t\t\t\t{\n\t\t\t\t\tinfo += \" Already imported:\\n\" + Std.string(alreadyImported);\n\t\t\t\t}\n\n\t\t\t\tAlertify.log(info);\n\t\t\t}\n        }\n    }\n        \n    public static function importClassHint(from:CodeMirror.Pos, to:CodeMirror.Pos, cm:CodeMirror, data:Dynamic, completion:CompletionData)\n\t{\n        importClass(cm, completion.text, from, to);\n    }\n        \n    static function importClass(cm:CodeMirror, text:String, from:CodeMirror.Pos, to:CodeMirror.Pos)\n\t{\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n        var value = tabManagerInstance.getCurrentDocument().getValue();\n        \n        var filePackage = RegexParser.getFilePackage(value);\n        \n        if (from != null && to != null)\n       \t{\n            updateImport(cm, text, from, to);\n        }\n        \n        var pos:CodeMirror.Pos;\n\n        if (filePackage.filePackage != null)\n        {\n            pos = cm.posFromIndex(filePackage.pos);\n            pos.ch = 0;\n            pos.line++;\n        }\n        else\n        {\n            pos = cm.posFromIndex(0);\n        }\n\n        cm.replaceRange(\"import \" + text + \";\\n\", pos, pos);\n        \n        Alertify.success(text + \" definition successfully imported\");\n    }\n\n\tstatic function updateImport(cm:CodeMirror, text:String, from:CodeMirror.Pos, to:CodeMirror.Pos)\n\t{\n        cm.replaceRange(text.split(\".\").pop(), from, to);\n    }\n\n}","package core;\nimport cm.Editor;\nimport jQuery.JQuery;\nimport js.Browser;\nimport js.html.DivElement;\nimport js.html.SpanElement;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass LineWidget\n{\n\tvar element:DivElement;\n\tvar parametersSpanElements:Array<SpanElement>;\n\tvar widget:Dynamic;\n\t\n\tpublic function new(type:String, name:String, parameters:Array<String>, retType:String, description:String, currentParameter:Int, pos:CodeMirror.Pos) \n\t{\t\t\n\t\telement = Browser.document.createDivElement();\n\t\t//var icon:SpanElement = Browser.document.createSpanElement();\n\t\t//msg.appendChild(icon);\n\t\t//icon.className = \"lint-error-icon\";\n\t\telement.className = \"lint-error\";\n\t\t\n\t\tvar spanText:SpanElement = Browser.document.createSpanElement();\n\t\tspanText.textContent = type + \" \" + name + \"(\";\n\t\telement.appendChild(spanText);\n\t\t\n\t\tvar parametersSpan:SpanElement = Browser.document.createSpanElement();\n\t\tspanText.appendChild(parametersSpan);\n\t\t\n\t\tparametersSpanElements = [];\n\t\t\n\t\tfor (i in 0...parameters.length)\n\t\t{\n\t\t\tvar spanText2 = Browser.document.createSpanElement();\n\t\t\tspanText2.textContent = parameters[i];\n\t\t\t\n\t\t\tif (i == currentParameter) \n\t\t\t{\n\t\t\t\tspanText2.className = \"selectedParameter\";\n\t\t\t}\n\t\t\t\n\t\t\tparametersSpan.appendChild(spanText2);\n\t\t\tparametersSpanElements.push(spanText2);\n\t\t\t\n\t\t\tif (i != parameters.length - 1) \n\t\t\t{\n\t\t\t\tvar spanCommaText:SpanElement = Browser.document.createSpanElement();\n\t\t\t\tspanCommaText.textContent = \", \";\n\t\t\t\tparametersSpan.appendChild(spanCommaText);\n\t\t\t}\n\t\t}\n\t\t\n\t\tupdateParameters(currentParameter);\n\t\t\n\t\tvar spanText3:SpanElement = Browser.document.createSpanElement();\n\t\tspanText3.textContent = \"):\" + retType;\n\t\telement.appendChild(spanText3);\n\t\t\n\t\tif (description != null) \n\t\t{\n\t\t\telement.appendChild(Browser.document.createBRElement());\n\t\t\tvar spanDescription:SpanElement = Browser.document.createSpanElement();\n\t\t\tspanDescription.textContent = description;\n\t\t\telement.appendChild(spanDescription);\n\t\t}\n\t\t\n\t\twidget = Editor.editor.addLineWidget(pos.line, element, { coverGutter: false, noHScroll: true } );\n\t}\n\t\n\tpublic function updateParameters(currentParameter:Int) \n\t{\n\t\tfor (i in 0...parametersSpanElements.length) \n\t\t{\n\t\t\tif (i == currentParameter) \n\t\t\t{\n\t\t\t\tparametersSpanElements[i].className = \"selectedParameter\";\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tparametersSpanElements[i].className = \"\";\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic function getWidget():Dynamic\n\t{\n\t\treturn widget;\n\t}\n\t\n\tpublic function getElement():DivElement \n\t{\n\t\treturn element;\n\t}\n\t\n}\n","package core;\nimport js.atomshell.browser.App;\nimport js.atomshell.browserandwebpage.Clipboard;\nimport js.atomshell.browserandwebpage.Shell;\nimport js.node.Path;\nimport js.atomshell.browser.BrowserWindow;\nimport haxe.Timer;\nimport cm.Editor;\nimport dialogs.DialogManager;\nimport dialogs.ProjectOptionsDialog;\nimport filetree.FileTree;\nimport js.Node;\nimport menu.BootstrapMenu;\nimport newprojectdialog.NewProjectDialog;\nimport openproject.OpenProject;\nimport parser.ClasspathWalker;\nimport projectaccess.ProjectAccess;\nimport tabmanager.TabManager;\nimport watchers.SettingsWatcher;\nimport completion.GoToDeclaration;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass MenuCommands\n{\n\tpublic static function add():Void \n\t{\n\t\tvar window = BrowserWindow.getAllWindows()[0];\n\n\t\tBootstrapMenu.getMenu(\"View\").addMenuItem(\"Zoom In\", 2, function ():Void\n\t\t{\n// \t\t\twindow.zoomLevel += 1;\n\t\t}\n\t\t, \"Ctrl-Shift-+\");\n\n\t\tBootstrapMenu.getMenu(\"View\").addMenuItem(\"Zoom Out\", 3, function ():Void\n\t\t{\n// \t\t\twindow.zoomLevel -= 1;\n\t\t}\n\t\t, \"Ctrl-Shift--\");\n\n\t\tBootstrapMenu.getMenu(\"View\").addMenuItem(\"Reset\", 4, function ():Void\n\t\t{\n// \t\t\twindow.zoomLevel = 0;\n\t\t}\n\t\t, \"Ctrl-Shift-0\");\n\t\t\n\t\tBootstrapMenu.getMenu(\"View\", 3).addMenuItem(\"Toggle Fullscreen\", 1, function ():Void\n\t\t{\n// \t\t\twindow.toggleFullscreen();\n\t\t\twindow.setFullScreen(!window.isFullScreen());\n\t\t}\n\t\t, \"F11\");\n\t\t\n\t\tvar tabManagerInstance = TabManager.get();\n\t\tvar completionInstance = Completion.get();\n\t\tvar fileTreeInstance = FileTree.get();\n\t\t\n\t\tBootstrapMenu.getMenu(\"Help\").addMenuItem(\"changelog\", 1, tabManagerInstance.openFileInNewTab.bind(Path.join(\"core\", \"changes.md\")));\n\t\t\n\t\tBootstrapMenu.getMenu(\"Developer Tools\", 100).addMenuItem(\"Reload IDE\", 1, window.webContents, \"Ctrl-Shift-R\");\n\n\t\tBootstrapMenu.getMenu(\"Developer Tools\").addMenuItem(\"Compile plugins and reload IDE\", 2, function ():Void\n\t\t{\t\t\t\n\t\t\tHIDE.compilePlugins(function ():Void\n\t\t\t{\n\t\t\t\t//Only when all plugins successfully loaded\n\t\t\t\twindow.webContents.reloadIgnoringCache();\n\t\t\t}\n\t\t\t//On plugin compilation failed\n\t\t\t, function (data:String):Void\n\t\t\t{\n\t\t\t\t\n\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t}\n\t\t, \"Shift-F5\");\n\t\t\n\t\tBootstrapMenu.getMenu(\"Developer Tools\").addMenuItem(\"Console\", 3, window.openDevTools);\n\t\t\n\t\tBootstrapMenu.getMenu(\"Help\").addMenuItem(\"Show code editor key bindings\", 1, tabManagerInstance.openFileInNewTab.bind(Path.join(\"core\", \"bindings.txt\")));\n\t\tBootstrapMenu.getMenu(\"Help\").addMenuItem(\"View HIDE repository on GitHub\", 2, Shell.openExternal.bind(\"https://github.com/as3boyan/HIDE\"));\n\t\tBootstrapMenu.getMenu(\"Help\").addMenuItem(\"Report issue/request feature at GitHub issue tracker\", 3, Shell.openExternal.bind(\"https://github.com/as3boyan/HIDE/issues/new\"));\n\t\tBootstrapMenu.getMenu(\"Help\").addMenuItem(\"Open Haxe nightly build download URL\", 4, function ():Void \n\t\t{\n\t\t\tvar serverUrl = \"http://hxbuilds.s3-website-us-east-1.amazonaws.com/builds/haxe/\";\n\t\t\t\n\t\t\tvar target;\n\t\t\t\n\t\t\tswitch (Utils.os) \n\t\t\t{\n\t\t\t\tcase Utils.WINDOWS:\n\t\t\t\t\ttarget = \"windows\";\n\t\t\t\tcase Utils.LINUX:\n\t\t\t\t\ttarget = \"linux64\";\n\t\t\t\tcase Utils.MAC:\n\t\t\t\t\ttarget = \"mac\";\n\t\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Utils class was not able to detect OS\";\n\t\t\t}\n\t\t\t\n\t\t\tShell.openExternal(serverUrl + target + \"/haxe_latest.tar.gz\");\n\t\t});\n\t\tBootstrapMenu.getMenu(\"Help\").addMenuItem(\"About HIDE...\", 5, HIDE.openPageInNewBrowserWindow.bind(null, \"about.html\", {toolbar:false}));\n\t\t\n\t\t//Ctrl-Tab\n\t\tHotkeys.add(\"Tab Manager->Show Next Tab\", \"Ctrl-Tab\", null, tabManagerInstance.showNextTab);\n\t\t\n\t\t//Ctrl-Shift-Tab\n\t\tHotkeys.add(\"Tab Manager->Show Previous Tab\", \"Ctrl-Shift-Tab\", null, tabManagerInstance.showPreviousTab);\n\t\t\n\t\t//Ctrl-W\n\t\tHotkeys.add(\"Tab Manager->Close File\", \"Ctrl-W\", null, tabManagerInstance.closeActiveTab);\n\t\t\n\t\t//Ctrl-Shift-W\n\t\tHotkeys.add(\"Tab Manager->Close All\", \"Ctrl-Shift-W\", null, tabManagerInstance.closeAll);\n\t\t\n\t\tBootstrapMenu.getMenu(\"File\", 1).addMenuItem(\"New Project...\", 1, NewProjectDialog.show, \"Ctrl-Shift-N\");\n\t\t\n\t\t//Ctrl-N\n\t\tBootstrapMenu.getMenu(\"File\").addMenuItem(\"New File...\", 2, tabManagerInstance.createFileInNewTab, \"Ctrl-N\");\n\t\tBootstrapMenu.getMenu(\"File\").addSeparator();\n\t\tBootstrapMenu.getMenu(\"File\").addMenuItem(\"Open Project...\", 3, OpenProject.openProject.bind(null, true));\n\t\tBootstrapMenu.getMenu(\"File\").addSubmenu(\"Open Recent Project\");\n\t\tBootstrapMenu.getMenu(\"File\").addMenuItem(\"Close Project\", 4, OpenProject.closeProject);\n\t\tBootstrapMenu.getMenu(\"File\").addMenuItem(\"Open File...\", 5, OpenProject.openProject, \"Ctrl-O\");\n\t\tBootstrapMenu.getMenu(\"File\").addSubmenu(\"Open Recent File\");\n\t\tBootstrapMenu.getMenu(\"File\").addSeparator();\n\t\t\n\t\t//Ctrl-S\n\t\tBootstrapMenu.getMenu(\"File\").addMenuItem(\"Save\", 6, tabManagerInstance.saveActiveFile, \"Ctrl-S\");\n\t\t//Ctrl-Shift-S\n\t\tBootstrapMenu.getMenu(\"File\").addMenuItem(\"Save As...\", 7, tabManagerInstance.saveActiveFileAs, \"Ctrl-Shift-S\");\n\t\tBootstrapMenu.getMenu(\"File\").addMenuItem(\"Save All\", 8, tabManagerInstance.saveAll);\n\t\tBootstrapMenu.getMenu(\"File\").addSeparator();\n\t\t\n\t\t//App.closeAllBrowserWindows\n\t\tBootstrapMenu.getMenu(\"File\").addMenuItem(\"Exit\", 9, App.quit);\n\t\t\n\t\tBrowserWindow.getAllWindows()[0].on('close', tabManagerInstance.saveAll);\n\t\t\n// \t\tBootstrapMenu.getMenu(\"Options\").addMenuItem(\"Open haxelib manager\", 1, DialogManager.showHaxelibManagerDialog);\n\t\tBootstrapMenu.getMenu(\"Options\").addMenuItem(\"Open settings\", 1, tabManagerInstance.openFileInNewTab.bind(Path.join(SettingsWatcher.pathToFolder,\"settings.json\")));\n\t\tBootstrapMenu.getMenu(\"Options\").addMenuItem(\"Open stylesheet\", 1, function ()\n\t\t\t\t\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t tabManagerInstance.openFileInNewTab(Path.join(\"core\", SettingsWatcher.settings.theme));\n\t\t\t\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\n\t\tvar classpathWalker = ClasspathWalker.get();\n\t\t\n\t\tBootstrapMenu.getMenu(\"Options\").addMenuItem(\"Open editor configuration file\", 1, tabManagerInstance.openFileInNewTab.bind(Path.join(SettingsWatcher.pathToFolder,\"editor.json\")));\n\t\tBootstrapMenu.getMenu(\"Options\").addMenuItem(\"Open templates folder\", 1, fileTreeInstance.load.bind(\"templates\", Path.join(\"core\",\"templates\")));\n\t\tBootstrapMenu.getMenu(\"Options\").addMenuItem(\"Open localization file\", 1, tabManagerInstance.openFileInNewTab.bind(Path.join(\"core\", \"locale\",SettingsWatcher.settings.locale)));\n\t\tBootstrapMenu.getMenu(\"Options\").addMenuItem(\"Open hotkey configuration file\", 1, tabManagerInstance.openFileInNewTab.bind(Path.join(SettingsWatcher.pathToFolder, \"hotkeys.json\")));\n\t\tBootstrapMenu.getMenu(\"Options\", 90).addMenuItem(\"Open snippets configuration file\", 1, tabManagerInstance.openFileInNewTab.bind(Path.join(SettingsWatcher.pathToFolder, \"snippets.json\")));\n\t\tBootstrapMenu.getMenu(\"Options\").addMenuItem(\"Configure Haxe toolkit\", 100, classpathWalker.showHaxeDirectoryDialog);\n\t\t\n\t\tBootstrapMenu.getMenu(\"Edit\", 2).addMenuItem(\"Undo\", 1, Editor.editor.execCommand.bind(\"undo\"));\n\t\tBootstrapMenu.getMenu(\"Edit\").addMenuItem(\"Redo\", 1, Editor.editor.execCommand.bind(\"redo\"));\n\t\tBootstrapMenu.getMenu(\"Edit\").addSeparator();\n\t\tBootstrapMenu.getMenu(\"Edit\").addMenuItem(\"Cut\", 1, function ():Void \n\t\t{\n\t\t\tClipboard.writeText(Editor.editor.getSelection());\n\t\t\tEditor.editor.replaceSelection(\"\");\n\t\t});\n\t\t\n\t\tBootstrapMenu.getMenu(\"Edit\").addMenuItem(\"Copy\", 1, function ():Void \n\t\t{\n\t\t\tClipboard.writeText(Editor.editor.getSelection());\n\t\t});\n\t\t\n\t\tBootstrapMenu.getMenu(\"Edit\").addMenuItem(\"Paste\", 1, function ():Void \n\t\t{\n\t\t\tEditor.editor.replaceSelection(Clipboard.readText());\n\t\t});\n\t\t\n\t\tBootstrapMenu.getMenu(\"Edit\").addSeparator();\n\t\tBootstrapMenu.getMenu(\"Edit\").addMenuItem(\"Find...\", 1, Editor.editor.execCommand.bind(\"find\"));\n\t\tBootstrapMenu.getMenu(\"Edit\").addMenuItem(\"Replace...\", 1, Editor.editor.execCommand.bind(\"replace\"));\n\t\t\n\t\tvar goToLine = GoToLine.get();\n\t\t\n\t\tBootstrapMenu.getMenu(\"Navigate\", 4).addMenuItem(\"Go to Line\", 2, goToLine.show, \"Ctrl-G\");\n\t\tBootstrapMenu.getMenu(\"Navigate\").addMenuItem(\"Open File\", 3, function ()\n                                                      {\n                                                          Timer.delay(function ()\n                                                                          {\n                                                                              completionInstance.showFileList();\n                                                                          }, 10);\n                                                      }, \"Ctrl-Shift-O\");\n\t\t\n\t\tBootstrapMenu.getMenu(\"Navigate\").addMenuItem(\"Go To Declaration\", 4, function ()\n\t\t\t\t\t\t\t\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  var goToDeclaration = GoToDeclaration.get();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  goToDeclaration.start();\n\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t  , \"Ctrl-B\");\n\t\t\n\t\tBootstrapMenu.getMenu(\"Source\").addMenuItem(\"Show Class List\", 4, completionInstance.showClassList, \"Ctrl-Shift-P\");\n\t\tBootstrapMenu.getMenu(\"Source\").addMenuItem(\"Show Code Completion\", 5, Editor.triggerCompletion.bind(Editor.editor), \"Ctrl-Space\");\n\t\tBootstrapMenu.getMenu(\"Source\").addMenuItem(\"Toggle Comment\", 5, Editor.editor.execCommand.bind(\"toggleComment\"), \"Ctrl-Q\");\n\t\tBootstrapMenu.getMenu(\"Source\").addMenuItem(\"Import Class Definition\", 6, function ():Void\n\t\t{\n            var selectedPath = tabManagerInstance.getCurrentDocumentPath();\n            \n            if (selectedPath != null)\n            {\n            \tImportDefinition.searchImport(tabManagerInstance.getCurrentDocument().getValue(), selectedPath);   \n            }\n\t\t}, \"Ctrl-Shift-1\");\n\t\t\t\t\n\t\tBootstrapMenu.getMenu(\"Project\", 80).addMenuItem(\"Run\", 1, RunProject.runProject, \"F5\");\n\t\tBootstrapMenu.getMenu(\"Project\").addMenuItem(\"Build\", 2, RunProject.buildProject, \"F8\");\n\t\tBootstrapMenu.getMenu(\"Project\").addMenuItem(\"Clean\", 3, RunProject.cleanProject, \"Shift-F8\");\n// \t\tBootstrapMenu.getMenu(\"Project\").addMenuItem(\"Set This Hxml As Project Build File\", 4, RunProject.setHxmlAsProjectBuildFile);\n// \t\tBootstrapMenu.getMenu(\"Project\").addSubmenu(\"Build Recent Project\");\n\t\tBootstrapMenu.getMenu(\"Project\").addMenuItem(\"Project Options...\", 5, function ():Void \n\t\t{\n\t\t\tif (ProjectAccess.path != null) \n\t\t\t{\n\t\t\t\tDialogManager.showProjectOptions();\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tAlertify.error(\"Open or create project first\");\n\t\t\t}\n\t\t});\n\t}\n}\n","package core;\nimport cm.HighlightRange;\nimport haxe.Timer;\nimport parser.OutlineHelper;\nimport cm.Editor;\nimport jQuery.JQuery;\n\n/**\n * ...\n * @author AS3Boyan\n */\n\ntypedef TreeItem = {\n\tvar label:String;\n    @:optional var icon:String;\n\t@:optional var items:Array<TreeItem>;\n\t@:optional var expanded:Bool;\n\t@:optional var value:Dynamic;\n}\n \nclass OutlinePanel\n{\n\tstatic var instance:OutlinePanel;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new OutlinePanel();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tvar source:Array<TreeItem> = [];\n\t\n\tpublic function update():Void\n\t{\n\t\tuntyped new JQuery(\"#outline\").jqxTree( { source: source } );\n\t\t\n\t\tnew JQuery('#outline').dblclick(function (event):Void \n\t\t{\n\t\t\tvar item = untyped new JQuery('#outline').jqxTree('getSelectedItem');\n\t\t\t\n\t\t\tvar value:DeclarationPos = item.value;\n\t\t\t\n\t\t\tvar cm2 = Editor.editor;\n\t\t\t\n\t\t\tif (value != null) \n\t\t\t{\n\t\t\t\tvar pos = cm2.posFromIndex(value.min);\n\t\t\t\tvar pos2 = cm2.posFromIndex(value.max);\n\t\t\t\tvar line = pos.line;\n\t\t\t\t\n\t\t\t\tcm2.centerOnLine(line);\n\t\t\t\tcm2.focus();\n\t\t\t\tcm2.setCursor(pos2);\n\t\t\t\t\n\t\t\t\tvar highlightRange = HighlightRange.get();\n\t\t\t\thighlightRange.highlight(cm2, pos, pos2);\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic function addField(item:TreeItem):Void\n\t{\n\t\tsource.push(item);\n\t}\n\t\n\tpublic function clearFields():Void \n\t{\n\t\tsource = [];\n\t}\n}","package core;\nimport js.node.Path;\nimport js.node.ChildProcess;\nimport js.html.DivElement;\nimport cm.Editor;\nimport dialogs.DialogManager;\nimport haxe.ds.StringMap;\nimport jQuery.JQuery;\nimport js.Browser;\nimport js.html.AnchorElement;\nimport js.html.TextAreaElement;\nimport js.Node;\nimport projectaccess.Project;\nimport projectaccess.Project.TargetData;\nimport projectaccess.ProjectAccess;\nimport tabmanager.TabManager;\n\n/**\n * ...\n * @author \n */\nclass ProcessHelper\n{\n\tvar processStdout:String;\n\tvar processStderr:String;\n\t\n\tstatic var instance:ProcessHelper;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new ProcessHelper();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function runProcess(process:String, params:Array<String>, path:String, onComplete:String->String->Void, ?onFailed:Int->String->String->Void):ChildProcess\n\t{\t\t\n\t\tvar command:String = processParamsToCommand(process, params);\n\t\t\n\t\tvar options = { cwd: null };\n\t\t\n\t\tif (path != null) \n\t\t{\n\t\t\toptions.cwd = path;\n\t\t}\n\t\t\n\t\tvar process:ChildProcess = ChildProcess.exec(command, options, function (error, stdout:String, stderr:String):Void\n\t\t{\t\t\t\n\t\t\t//if (stdout != \"\")\n\t\t\t//{\n\t\t\t\t//trace(\"stdout:\\n\" + stdout);\n\t\t\t//}\n\t\t\t//\n\t\t\t//if (stderr != \"\")\n\t\t\t//{\n\t\t\t\t//trace(\"stderr:\\n\" + stderr);\n\t\t\t//}\n\t\t\t\n\t\t\tif (error == null)\n\t\t\t{\t\t\t\t\n\t\t\t\tonComplete(stdout, stderr);\n\t\t\t}\n\t\t\telse if (onFailed != null)\n\t\t\t{\n\t\t\t\tonFailed(error.code, stdout, stderr);\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\treturn process;\n\t}\n\t\n\tpublic function runProcessAndPrintOutputToConsole(process:String, params:Array<String>, cwd:String, ?onComplete:Void->Void):ChildProcess\n\t{\n\t\tvar command:String = processParamsToCommand(process, params);\n\t\t\n\t\tnew JQuery(\"#outputTab\").click();\n\t\t\n\t\tvar textarea = cast(Browser.document.getElementById(\"outputTextArea\"), TextAreaElement);\n\t\ttextarea.value = \"Build started\\n\";\n\t\ttextarea.value += command + \"\\n\";\n\t\t\n\t\tclearErrors();\n\t\t\n\t\tvar process:ChildProcess = runPersistentProcess(process, params, cwd, function (code:Int, stdout:String, stderr:String):Void \n\t\t{\n\t\t\tprocessOutput(code, processStdout, processStderr, onComplete);\n\t\t}\n\t\t);\n\t\t\n\t\treturn process;\n\t}\n\t\n\tpublic function clearErrors()\n\t{\n\t\t//http://jsperf.com/removechildren/9\n\t\t\n\t\tvar div = cast (Browser.document.getElementById(\"errors\"), DivElement);\n\t\t\n\t\twhile (div.lastChild != null)\n\t\t{\n\t\t\tdiv.removeChild(div.lastChild);\n\t\t}\n\t}\n\n\t\n\tfunction processOutput(code:Int, stdout:String, stderr:String, ?onComplete:Dynamic):Void\n\t{\n\t\tvar textarea = cast(Browser.document.getElementById(\"outputTextArea\"), TextAreaElement);\n\t\t\n\t\tif (StringTools.trim(stdout) != \"\")\n\t\t{\n\t\t\ttextarea.value += \"stdout:\\n\" + stdout;\n\t\t\ttrace(\"stdout:\\n\" + stdout);\n\t\t}\n\t\t\n\t\tHaxeLint.fileData = new StringMap();\n\t\t\n\t\tvar switchToResultsTab:Bool = false;\n\t\t\n\t\tif (stderr != \"\")\n\t\t{\t\t\n\t\t\tvar lines = stderr.split(\"\\n\");\n\t\t\t\n\t\t\tfor (line in lines) \n\t\t\t{\n\t\t\t\tline = StringTools.trim(line);\n\t\t\t\t\n\t\t\t\tif (line.indexOf(\"Error:\") == 0) \n\t\t\t\t{\n\t\t\t\t\tAlertify.error(line);\n\t\t\t\t\t\n\t\t\t\t\tif (line.indexOf(\"unknown option `-python'\") != -1) \n\t\t\t\t\t{\n\t\t\t\t\t\tAlertify.log(\"You may need to install latest version of Haxe to compile to Python target\", \"\", 10000);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (line.indexOf(\":\") != 0) \n\t\t\t\t{\n\t\t\t\t\tvar args:Array<String> = line.split(\":\");\n\t\t\t\t\t\n\t\t\t\t\tif (args.length > 3) \n\t\t\t\t\t{\n\t\t\t\t\t\tvar relativePath:String = args[0];\n\t\t\t\t\t\tvar fullPath:String = Path.join(ProjectAccess.path, relativePath);\n\t\t\t\t\t\t\n                        if (!HaxeLint.fileData.exists(fullPath))\n                        {\n                        \tHaxeLint.fileData.set(fullPath, []);    \n                        }\n                        \n                        var data:Array<HaxeLint.Info> = HaxeLint.fileData.get(fullPath);\n                        \n\t\t\t\t\t\tHaxeLint.fileData.set(fullPath, data);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar lineNumber:Int = Std.parseInt(args[1]) - 1;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar charsData:Array<String> = null;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (args[2].indexOf(\" \") != -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar data = StringTools.trim(args[2]).split(\" \");\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (data.length > 1 && data[1].indexOf(\"-\") != -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcharsData = data[1].split(\"-\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (charsData != null) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar start:Int = Std.parseInt(charsData[0]);\n\t\t\t\t\t\t\tvar end:Int = Std.parseInt(charsData[1]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar message:String = \"\";\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (i in 3...args.length) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmessage += args[i];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (i != args.length - 1) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmessage += \":\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar tabManagerInstance = TabManager.get();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar a:AnchorElement = Browser.document.createAnchorElement();\n\t\t\t\t\t\t\ta.href = \"#\";\n\t\t\t\t\t\t\ta.className = \"list-group-item\";\n\t\t\t\t\t\t\ta.innerText = line;\n\t\t\t\t\t\t\ta.onclick = function (e)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttabManagerInstance.openFileInNewTab(fullPath, true, function ():Void \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar cm = Editor.editor;\n\t\t\t\t\t\t\t\t\tcm.centerOnLine(lineNumber);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tnew JQuery(\"#errors\").append(a);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar info:HaxeLint.Info = { from: {line:lineNumber, ch:start}, to: {line:lineNumber, ch:end}, message: message, severity: \"error\" };\n\t\t\t\t\t\t\tdata.push(info);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tswitchToResultsTab = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//Check if it's open\n\t\t\t\t\t\t\t//Show hints when swithing document\n\t\t\t\t\t\t\ttabManagerInstance.openFileInNewTab(fullPath, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar lib:String = null;\n\t\t\t\t\n\t\t\t\tvar ereg = ~/haxelib install ([^']+)/gim;\n\t\t\t\tif (ereg.match(line)) \n\t\t\t\t{\n\t\t\t\t\tlib = ereg.matched(1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar ereg2 = ~/library ([^ ]+) is not installed/gim;\n\t\t\t\tif (ereg2.match(line)) \n\t\t\t\t{\n\t\t\t\t\tlib = ereg2.matched(1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (lib != null) \n\t\t\t\t{\n\t\t\t\t\tvar pathToHxml = ProjectAccess.getPathToHxml();\n\t\t\t\t\tDialogManager.showInstallHaxelibDialog(lib, pathToHxml);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\ttextarea.value += \"stderr:\\n\" + stderr;\n\t\t\ttrace(\"stderr:\\n\" + stderr);\n\t\t}\n\t\t\n\t\tif (code == 0) \n\t\t{\n\t\t\tAlertify.success(\"Build complete!\");\n\t\t\t\n\t\t\ttextarea.value += \"Build complete\\n\";\n\t\t\t\n\t\t\tif (onComplete != null)\n\t\t\t{\n\t\t\t\tonComplete();\n\t\t\t}\n\t\t\t\n\t\t\tnew JQuery(\"#buildStatus\").fadeIn(250);\n\t\t}\n\t\telse \n\t\t{\n\t\t\t//trace(code);\n\t\t\t//trace(stdout);\n\t\t\t//trace(stderr);\n\t\t\t\n\t\t\tif (switchToResultsTab) \n\t\t\t{\n\t\t\t\tnew JQuery(\"#resultsTab\").click();\n\t\t\t}\n\t\t\t\n\t\t\tAlertify.error(\"Build failed\");\n\t\t\t\n\t\t\t//trace(command);\n\t\t\ttextarea.value += \"Build failed (exit code: \" + Std.string(code) +  \")\\n\" ;\n\t\t\t\n\t\t\tnew JQuery(\"#buildStatus\").fadeOut(250);\n\t\t}\n\t\t\n\t\tHaxeLint.updateLinting();\n\t}\n\t\n\tpublic function runPersistentProcess(process:String, params:Array<String>, cwd:String, ?onClose:Int->String->String->Void, ?redirectToOutput:Bool = false):ChildProcess\n\t{\n\t\tvar textarea = cast(Browser.document.getElementById(\"outputTextArea\"), TextAreaElement);\n\t\t\n\t\tprocessStdout = \"\";\n\t\tprocessStderr = \"\";\n\t\t\n\t\tvar process:ChildProcess = ChildProcess.spawn(process, params, { cwd: cwd } );\n\t\t\n\t\tprocess.stdout.setEncoding(\"utf8\");\n\t\tprocess.stdout.on(\"data\", function (data:String)\n\t\t{\n\t\t\tprocessStdout += data;\n\t\t\t\n\t\t\tif (redirectToOutput) \n\t\t\t{\n\t\t\t\ttextarea.value += data;\n\t\t\t\ttextarea.scrollTop = textarea.scrollHeight;\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\tprocess.stderr.setEncoding(\"utf8\");\n\t\tprocess.stderr.on(\"data\", function (data:String)\n\t\t{\n\t\t\tprocessStderr += data;\n\t\t\t\n\t\t\tif (redirectToOutput) \n\t\t\t{\n\t\t\t\ttextarea.value += data;\n\t\t\t\ttextarea.scrollTop = textarea.scrollHeight;\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\tprocess.on(\"error\", function (e):Void \n\t\t{\n\t\t\ttrace(e);\n\t\t}\n\t\t);\n\t\t\n\t\tprocess.on(\"close\", function (code:Int)\n\t\t{\n\t\t\ttrace(processStdout);\n\t\t\ttrace(processStderr);\n\t\t\t\n\t\t\tif (onClose != null) \n\t\t\t{\n\t\t\t\tonClose(code, processStdout, processStderr);\n\t\t\t}\n\t\t\t\n\t\t\tif (code != 0)\n\t\t\t{\n\t\t\t\tprocess = null;\n\t\t\t}\n\t\t\t\n\t\t\ttrace('started process quit with exit code ' + code);\n\t\t}\n\t\t);\t\n\t\t\n\t\treturn process;\n\t}\n\t\n\tpublic function checkProcessInstalled(process:String, params:Array<String>, onComplete:Bool->Void):Void\n\t{\n\t\tvar installed:Bool;\n\t\t\n\t\tChildProcess.exec(processParamsToCommand(process, params), { }, function (error, stdout, stderr) \n\t\t{\t\t\t\n\t\t\tif (error == null)\n\t\t\t{\n\t\t\t\tinstalled = true;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\t//if (error.code = 1)\n\t\t\t\t//{\n\t\t\t\t\t//process not found\n\t\t\t\t//}\n\t\t\t\t\n\t\t\t\ttrace(error);\n\t\t\t\ttrace(stdout);\n\t\t\t\ttrace(stderr);\n\t\t\t\tinstalled = false;\n\t\t\t}\n\t\t\t\n\t\t\tonComplete(installed);\n\t\t}\n\t\t);\n\t}\n\t\n\tfunction processParamsToCommand(process:String, params:Array<String>):String\n\t{\n\t\treturn [process].concat(params).join(\" \");\n\t}\n}","package core;\nimport js.node.Path;\nimport parser.ClassParser.FileData;\n\nimport js.html.DivElement;\nimport jQuery.JQuery;\nimport bootstrap.ListGroup;\nimport bootstrap.InputGroup;\nimport js.html.InputElement;\nimport js.Node;\nimport projectaccess.ProjectAccess;\nimport tabmanager.TabManager;\n\n\n/**\n* @author \n */\nclass QuickOpen\n{\n    var div:DivElement;\n    var panel:DivElement;\n    var panelBody:DivElement;\n    var inputGroup:InputGroup;\n    var listGroup:ListGroup;\n    var input:InputElement;\n    \n    var activeItemIndex:Int;\n    \n    var fileList:Array<FileData>;\n    \n    var currentList:Array<FileData>;\n\t\n\tstatic var instance:QuickOpen;\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new QuickOpen();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n    \n    public function new()\n    {        \n        panel = js.Browser.document.createDivElement();\n        panel.className = \"panel panel-default\";\n        panel.id = \"quickOpen\";\n        \n        panelBody = js.Browser.document.createDivElement();\n        panelBody.className = \"panel-body\";\n        panel.appendChild(panelBody);\n        \n        div = js.Browser.document.createDivElement();\n        \n        inputGroup = new InputGroup();\n        inputGroup.getElement().id = \"quickOpenInputGroup\";\n        \n        input = inputGroup.getInput();\n        \n        listGroup = new ListGroup();\n        listGroup.getElement().id = \"quickOpenListGroup\";\n        \n        div.appendChild(inputGroup.getElement());\n        div.appendChild(listGroup.getElement());\n        panel.style.display = \"none\";\n        panelBody.appendChild(div);\n        \n        new JQuery(js.Browser.document.body).append(panel);\n    }\n    \n    public function show(list:Array<parser.ClassParser.FileData>)\n    {        \n        activeItemIndex = 0;\n        \n        fileList = completion.Filter.sortFileList(list);\n        \n\t\tcurrentList = fileList;\n    \n        input.value = \"\";\n        \n        update();\n        \n        panel.style.display = \"\";\n        input.focus();\n    \t\n    \tregisterListeners();\n    }\n\n\tfunction onKeyUp(e:js.html.KeyboardEvent)\n\t{\n        switch (e.keyCode)\n        {\n            case 27:\n                hide();\n            default:\n\n        }\n    }\n\n\tfunction onInput(e)\n\t{\n        activeItemIndex = 0;\n        \n        core.Helper.debounce(\"openfilecompletion\", function ()\n                          \t{\n\t\t\t\t\t\t\t\tvar value = StringTools.trim(input.value);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar values = value.split(\" \");\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcurrentList = fileList;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor (item in values)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcurrentList = completion.Filter.filterFiles(currentList, item);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n        \t\t\t\t\t\tupdate();    \n                            }, 100);\n    }\n    \n    function onKeyDown(e:js.html.KeyboardEvent)\n    {\n        switch (e.keyCode)\n        {\n\t\t\t//up\n\t\t\tcase 38:                \n                e.preventDefault();\n                \n                activeItemIndex--;\n                \n                if (activeItemIndex < 0)\n                {\n                \tactiveItemIndex = currentList.length - 1;\n        \t\t}\n                \n                makeSureActiveItemVisible();\n            //down\n\t\t\tcase 40:\n                e.preventDefault();\n                \n                activeItemIndex++;\n                \n                if (activeItemIndex >= currentList.length)\n                {\n                \tactiveItemIndex = 0;\n                }\n                    \n                makeSureActiveItemVisible();\n            //Page Up\n            case 33:\n                e.preventDefault();\n                \n                activeItemIndex += -5;\n                \n                if (activeItemIndex < 0)\n                {\n                \tactiveItemIndex = 0;\n        \t\t}\n                \n                makeSureActiveItemVisible();\n            //Page Down\n            case 34:\n                e.preventDefault();\n                \n                activeItemIndex += 5;\n                \n                if (activeItemIndex >= currentList.length)\n                {\n                \tactiveItemIndex = currentList.length - 1;\n                }\n                    \n                makeSureActiveItemVisible();\n                \n           \t//End\n            case 35:\n                if (!e.shiftKey)\n                {\n                \te.preventDefault();\n                \n                    activeItemIndex = currentList.length - 1;\n\n                    makeSureActiveItemVisible();\n        \t\t}\n            //Home\n            case 36:\n                if (!e.shiftKey)\n                {\n                    e.preventDefault();\n                    activeItemIndex = 0;\n\n                    makeSureActiveItemVisible();\n\t\t\t\t}\n            //Enter\n            case 13:\n                e.preventDefault();\n                listGroup.getItems()[activeItemIndex].click();\n        }\n    }\n    \n    function onClick(e)\n    {\n        hide();\n    }\n\n    function registerListeners()\n    {\n        js.Browser.document.addEventListener(\"keyup\", onKeyUp);\n        js.Browser.document.addEventListener(\"click\", onClick);\n    \tinput.addEventListener(\"input\", onInput);\n        input.addEventListener(\"keydown\", onKeyDown);\n\t}\n    \n\tfunction unregisterListeners()\n\t{\n        js.Browser.document.removeEventListener(\"keyup\", onKeyUp);\n        js.Browser.document.removeEventListener(\"click\", onClick);\n    \tinput.removeEventListener(\"input\", onInput);\n        input.removeEventListener(\"keydown\", onKeyDown);\n    }\n\n    function hide()\n    {\n        panel.style.display = \"none\";\n        unregisterListeners();\n\t\t\t\t\n\t\tvar tabManagerInstance = TabManager.get();\n                \n        if (tabManagerInstance.selectedPath != null)\n        {\n        \tcm.Editor.editor.focus();\n        }\n    }\n    \n    function update()\n    {\n        listGroup.clear();\n        \n        for (item in currentList)\n        {\n        \tlistGroup.addItem(item.filename, item.displayText, openFile.bind(item.path));\n\t\t}\n    \n    \tmakeSureActiveItemVisible();\n    }\n\t\n\tfunction makeSureActiveItemVisible()\n\t{        \n        var items = listGroup.getItems();\n        \n        for (i in 0...items.length)\n        {\n        \tif (i != activeItemIndex)\n            {\n                if (items[i].classList.contains(\"active\"))\n                {\n                    items[i].classList.remove(\"active\");\n                }\n            }\n            else\n            {\n                if (!items[i].classList.contains(\"active\"))\n                {\n                    items[i].classList.add(\"active\");\n                }\n            }\n        }\n\t\t\n\t\tvar container = listGroup.getElement();\n                \n        if (activeItemIndex > 0)\n        {\n        \tvar node = items[activeItemIndex];\n\n            if (node.offsetTop - node.offsetHeight < container.scrollTop)\n            {\n                container.scrollTop = node.offsetTop - 48;\n            }\n            else if (node.offsetTop > container.scrollTop + container.clientHeight)\n            {\n                container.scrollTop = node.offsetTop - container.clientHeight;  \n            }\t\n        }\n        else\n        {\n        \tcontainer.scrollTop = 0;\n        }\n    }\n\n\tfunction openFile(path:String)\n\t{\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n\t\tif (ProjectAccess.path != null) \n\t\t{\n\t\t\tpath = Path.resolve(ProjectAccess.path, path);\n\t\t}\n\t\t\n\t\ttabManagerInstance.openFileInNewTab(path);\n\t}\n\n}","package core;\nimport js.atomshell.browser.BrowserWindow;\nimport bootstrap.ButtonManager;\nimport js.Browser;\nimport js.html.AnchorElement;\nimport js.html.DivElement;\nimport js.html.MouseEvent;\nimport menu.BootstrapMenu;\nimport openproject.OpenProject;\nimport tabmanager.TabManager;\nimport tjson.TJSON;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass RecentProjectsList\n{\n\tvar projectList:Array<String> = [];\n\tvar fileList:Array<String> = [];\n\n\tstatic var instance:RecentProjectsList;\n\t\n\tpublic static function get():RecentProjectsList\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new RecentProjectsList();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function new()\n\t{\n\t\tvar localStorage2 = Browser.getLocalStorage();\n\t\t\n\t\tif (localStorage2 != null) \n\t\t{\n\t\t\tvar recentProjectsData:String = localStorage2.getItem(\"recentProjects\");\n\t\t\tvar recentFilesData:String = localStorage2.getItem(\"recentFiles\");\n\t\t\tvar recentFilesData:String = localStorage2.getItem(\"recentFiles\");\n\t\t\t\n\t\t\tif (recentProjectsData != null) \n\t\t\t{\n\t\t\t\ttry \n\t\t\t\t{\n\t\t\t\t\tprojectList = TJSON.parse(recentProjectsData);\n\t\t\t\t}\n\t\t\t\tcatch (unknown:Dynamic)\n\t\t\t\t{\n\t\t\t\t\ttrace(unknown);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (recentFilesData != null) \n\t\t\t{\n\t\t\t\ttry \n\t\t\t\t{\n\t\t\t\t\tfileList = TJSON.parse(recentFilesData);\n\t\t\t\t}\n\t\t\t\tcatch (unknown:Dynamic)\n\t\t\t\t{\n\t\t\t\t\ttrace(unknown);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tBrowserWindow.getAllWindows()[0].on(\"close\", function ():Void \n\t\t{\n\t\t\tlocalStorage2.setItem(\"recentProjects\", TJSON.encode(projectList));\n\t\t\tlocalStorage2.setItem(\"recentFiles\", TJSON.encode(fileList));\n\t\t}\n\t\t);\n\t\t\n\t\tupdateMenu();\n\t\tupdateWelcomeScreen();\n\t\tupdateRecentFileMenu();\n\t}\n\t\n\tpublic function add(path:String):Void\n\t{\n\t\taddItemToList(projectList, path);\n\t\t\n\t\tupdateMenu();\n\t\tupdateWelcomeScreen();\n\t}\n\t\n\tpublic function addFile(path:String):Void\n\t{\n\t\taddItemToList(fileList, path);\n\t\tupdateRecentFileMenu();\n\t}\n\t\n\tfunction addItemToList(list:Array<String>, item:String):Void \n\t{\n\t\tif (list.indexOf(item) == -1) \n\t\t{\n\t\t\tif (list.length >= 10) \n\t\t\t{\n\t\t\t\tlist.pop();\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlist.remove(item);\n\t\t}\n\t\t\n\t\tlist.insert(0, item);\n\t}\n\t\n\tfunction updateMenu():Void\n\t{\n\t\tvar submenu = BootstrapMenu.getMenu(\"File\").getSubmenu(\"Open Recent Project\");\n\t\tsubmenu.clear();\n\t\t\n\t\tfor (i in 0...projectList.length) \n\t\t{\n\t\t\tsubmenu.addMenuItem(projectList[i], i + 1, OpenProject.openProject.bind(projectList[i]));\n\t\t}\n\t\t\n// \t\tvar submenu = BootstrapMenu.getMenu(\"Project\").getSubmenu(\"Build Recent Project\");\n// \t\tsubmenu.clear();\n\t\t\n// \t\tfor (i in 0...projectList.length) \n// \t\t{\n// \t\t\tsubmenu.addMenuItem(projectList[i], i + 1, RunProject.buildProject.bind(projectList[i]));\n// \t\t}\n\t}\n\t\n\tfunction updateWelcomeScreen():Void\n\t{\n\t\tvar listGroup:DivElement = cast(Browser.document.getElementById(\"recentProjectsList\"), DivElement);\n\t\t\n\t\twhile (listGroup.firstChild != null) \n\t\t{\n\t\t\tlistGroup.removeChild(listGroup.firstChild);\n\t\t}\n\t\t\n\t\tfor (i in 0...projectList.length) \n\t\t{\n\t\t\tvar a:AnchorElement = Browser.document.createAnchorElement();\n\t\t\ta.href = \"#\";\n\t\t\ta.className = \"list-group-item recentProject\";\n\t\t\ta.textContent = projectList[i];\n\t\t\ta.onclick = function (e):Void \n\t\t\t{\n\t\t\t\tOpenProject.openProject(projectList[i]);\n\t\t\t};\n\t\t\t\n// \t\t\tvar buildButton = ButtonManager.createButton(\"Build\");\n// \t\t\tbuildButton.classList.add(\"buildButton\");\n\t\t\t\n// \t\t\tbuildButton.onclick\t= function (e:MouseEvent):Void \n// \t\t\t{\n// \t\t\t\te.stopPropagation();\n// \t\t\t\te.preventDefault();\n\t\t\t\t\n// \t\t\t\tRunProject.buildProject(projectList[i]);\n// \t\t\t};\n\t\t\t\n// \t\t\ta.appendChild(buildButton);\n\t\t\t\n\t\t\tlistGroup.appendChild(a);\n\t\t}\n\t}\n\t\n\tfunction updateRecentFileMenu():Void\n\t{\n\t\tvar submenu = BootstrapMenu.getMenu(\"File\").getSubmenu(\"Open Recent File\");\n\t\tsubmenu.clear();\n\t\t\n\t\tfor (i in 0...fileList.length) \n\t\t{\n\t\t\t var tabManagerInstance = TabManager.get();\n\t\t\t submenu.addMenuItem(fileList[i], i + 1, tabManagerInstance.openFileInNewTab.bind(fileList[i]));\n\t\t}\n\t}\n}","package core;\nimport js.node.Fs.FsReadFileOpt;\nimport js.node.Path;\nimport js.node.Fs;\nimport js.atomshell.browserandwebpage.Shell;\nimport js.atomshell.browser.BrowserWindow;\nimport js.node.ChildProcess;\nimport projectaccess.ProjectOptions;\nimport build.CommandPreprocessor;\nimport build.Hxml;\nimport cm.Editor;\nimport js.Browser;\nimport js.html.TextAreaElement;\nimport js.Node;\nimport menu.BootstrapMenu;\nimport openproject.OpenProject;\nimport projectaccess.Project;\nimport projectaccess.ProjectAccess;\nimport tabmanager.TabManager;\nimport tjson.TJSON;\nimport watchers.LocaleWatcher;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass RunProject\n{\t\n\tstatic var runProcess:ChildProcess;\n\t\n\tpublic static function cleanProject() \n\t{\n\t\tif (ProjectAccess.path != null) \n\t\t{\n\t\t\tvar project = ProjectAccess.currentProject;\n\t\t\t\n\t\t\tswitch (project.type) \n\t\t\t{\n\t\t\t\tcase Project.HAXE:\n\t\t\t\t\tvar pathToHxml:String = Path.join(ProjectAccess.path, project.targetData[project.target].pathToHxml);\n\t\t\t\tcase Project.OPENFL:\n\t\t\t\t\trunProcess = killRunningProcessAndRunNew(\"haxelib\", [\"run\", \"lime\", \"clean\", project.openFLTarget], ProjectAccess.path);\n\t\t\t\tcase Project.HXML:\n\t\t\t\t\tvar pathToHxml:String = Path.join(ProjectAccess.path, project.main);\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tAlertify.error(\"Open or create project first\");\n\t\t}\n\t}\n\t\n\t/*\n\t* Set current document as build file(if it's hxml)\n\t*/\n\tpublic static function setHxmlAsProjectBuildFile(?pathToHxml:String):Bool\n\t{\n\t\tvar success:Bool = false;\n\t\t\n\t\tvar path:String = pathToHxml;\n\t\t\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n\t\tif (path == null)\n\t\t{\n\t\t\tpath = tabManagerInstance.getCurrentDocumentPath();\n\t\t}\n\n\t\tvar extname:String = Path.extname(path);\n\t\tvar isHxml:Bool = (extname == \".hxml\");\n\t\t\n\t\tif (isHxml) \n\t\t{\n\t\t\tvar noproject:Bool = ProjectAccess.path == null;\n\t\t\t\n\t\t\tvar pathToProject = Path.basename(path);\n\t\t\t\n\t\t\tvar project:Project = ProjectAccess.currentProject;\n\t\t\tproject.type = Project.HXML;\n\t\t\t\n\t\t\tif (noproject)\n\t\t\t{\n\t\t\t\tproject.main = pathToProject;\n\t\t\t\tProjectAccess.path = Path.dirname(path);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tproject.main = Path.relative(ProjectAccess.path, path);\n\t\t\t}\n\t\t\t\n\t\t\tProjectAccess.save(function ():Void \n\t\t\t{\n\t\t\t\tif (noproject) \n\t\t\t\t{\n\t\t\t\t\tOpenProject.openProject(Path.join(ProjectAccess.path, \"project.hide\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\tAlertify.success(LocaleWatcher.getStringSync(\"Done\"));\n\t\t\tsuccess = true;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tAlertify.error(LocaleWatcher.getStringSync(\"Currently selected document is not a hxml file\"));\n\t\t}\n\t\t\t\n\t\treturn success;\n\t}\n\t\n\tpublic static function runProject():Void\n\t{\t\t\n\t\tbuildProject(null, function ()\n\t\t{\t\n\t\t\tvar project = ProjectAccess.currentProject;\n\t\t\t\n\t\t\tvar runActionType;\n\t\t\tvar runActionText;\n\t\t\t\n\t\t\tswitch (project.type) \n\t\t\t{\n\t\t\t\tcase Project.HAXE:\n\t\t\t\t\tvar targetData:TargetData = project.targetData[project.target];\n\t\t\t\t\t\n\t\t\t\t\trunActionType = targetData.runActionType;\n\t\t\t\t\trunActionText = targetData.runActionText;\n\t\t\t\tdefault:\n\t\t\t\t\trunActionType = project.runActionType;\n\t\t\t\t\trunActionText = project.runActionText;\n\t\t\t}\n\t\t\t\n\t\t\tswitch (runActionType) \n\t\t\t{\n\t\t\t\tcase Project.URL:\n\t\t\t\t\tvar url:String = runActionText;\n\t\t\t\t\t\n\t\t\t\t\tif (isValidCommand(url)) \n\t\t\t\t\t{\n\t\t\t\t\t\tShell.openExternal(url);\n\t\t\t\t\t}\n\t\t\t\tcase Project.FILE:\n\t\t\t\t\tvar path:String = runActionText;\n\t\t\t\t\t\n\t\t\t\t\tif (isValidCommand(path)) \n\t\t\t\t\t{\n\t\t\t\t\t\tFs.exists(path, function (exists:Bool)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!exists)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpath = Path.join(ProjectAccess.path, path);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tShell.openItem(path);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\tcase Project.COMMAND:\n\t\t\t\t\tvar command:String = runActionText;\n\t\t\t\t\t\n\t\t\t\t\tif (isValidCommand(command))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar params:Array<String> = CommandPreprocessor.preprocess(command, ProjectAccess.path).split(\" \");\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar process:String = params.shift();\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar cwd:String = ProjectAccess.path;\n\t\t\t\t\t\t\n\t\t\t\t\t\trunProcess = killRunningProcessAndRunNew(process, params, cwd);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar window:BrowserWindow = BrowserWindow.getAllWindows()[0];\n\t\t\n\t\t\t\t\t\twindow.on(\"close\", function (e)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkillRunProcess();\n\t\t\t\t\t\t\twindow.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tstatic function killRunningProcessAndRunNew(process:String, params:Array<String>, cwd:String):ChildProcess \n\t{\n\t\tkillRunProcess();\n\t\tvar processHelper = ProcessHelper.get();\n\t\treturn processHelper.runPersistentProcess(process, params, cwd, null, true);\n\t}\n\t\n\tstatic function killRunProcess():Void\n\t{\n\t\ttrace(runProcess);\n\t\t\n\t\tif (runProcess != null) \n\t\t{\n\t\t\ttrace(\"kill\");\n\t\t\trunProcess.kill();\n\t\t}\n\t}\n\t\n\tstatic function isValidCommand(command:String):Bool\n\t{\n\t\tvar valid = false;\n\t\t\n\t\tif (command != null && StringTools.trim(command) != \"\")  \n\t\t{\n\t\t\tvalid = true;\n\t\t}\n\t\t\n\t\treturn valid;\n\t}\n\t\n\tpublic static function buildProject(?pathToProject:String, ?onComplete:Dynamic):Void\n\t{\t\t\n\t\tvar project:Project;\n\t\t\n\t\tif (pathToProject != null) \n\t\t{\n// \t\t\tvar options:NodeFsFileOptions = { };\n// \t\t\toptions.encoding = \"utf8\";\n\t\t\t\n\t\t\tvar data:String = Fs.readFileSync(pathToProject, \"utf8\");\n\t\t\tproject = TJSON.parse(data);\n\t\t\t\n\t\t\tpathToProject = Path.dirname(pathToProject);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tproject = ProjectAccess.currentProject;\n\t\t\tpathToProject = ProjectAccess.path;\n\t\t}\n\t\t\n\t\tbuildSpecifiedProject(project, pathToProject, onComplete);\n\t}\n\t\n\tstatic function buildSpecifiedProject(project:Project, pathToProject:String,  onComplete:Dynamic)\n\t{\n\t\tvar tabManagerInstance = TabManager.get();\n\t\tvar projectOptions = ProjectOptions.get();\n\t\tvar processHelper = ProcessHelper.get();\n\t\t\n\t\tif (pathToProject == null)\n\t\t{\n\t\t\tAlertify.error(LocaleWatcher.getStringSync(\"Please open or create project first!\"));\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttabManagerInstance.saveAll(function ()\n\t\t\t{\n\t\t\t\tvar path:String = tabManagerInstance.getCurrentDocumentPath();\n\t\t\t\tvar extname:String = Path.extname(path);\n\t\t\t\tvar buildHxml:Bool = (extname == \".hxml\");\n\t\t\t\t\n\t\t\t\tvar dirname:String = Path.dirname(path);\n\t\t\t\tvar filename:String = Path.basename(path);\n\t\t\t\t\n\t\t\t\tif (buildHxml || project.type == Project.HXML || project.type == Project.HAXE)\n\t\t\t\t{\n\t\t\t\t\tvar hxmlData:String;\n\t\t\t\t\t\n\t\t\t\t\tif (!buildHxml) \n\t\t\t\t\t{\n\t\t\t\t\t\tdirname = pathToProject;\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch (project.type) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase Project.HXML:\n\t\t\t\t\t\t\t\tfilename = project.main;\n\t\t\t\t\t\t\tcase Project.HAXE:\n\t\t\t\t\t\t\t\tfilename = project.targetData[project.target].pathToHxml;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar options:FsReadFileOpt = { encoding: null };\n\t\t\t\t\t\toptions.encoding = \"utf8\";\n\t\t\t\t\t\t\n\t\t\t\t\t\tFs.readFile(Path.join(dirname, filename), options, function (err, data:String):Void\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (err == null) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\thxmlData = data;\n\t\t\t\t\t\t\t\tHxml.checkHxml(dirname, filename, hxmlData, onComplete);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttrace(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\thxmlData = Editor.editor.getValue();\t\n\t\t\t\t\t\tHxml.checkHxml(dirname, filename, hxmlData, onComplete);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprojectOptions.updateOpenFLBuildCommand();\n\t\t\t\t\t\n\t\t\t\t\tvar command:String = project.buildActionCommand;\n\t\t\t\t\tcommand = CommandPreprocessor.preprocess(command, pathToProject);\n\t\t\t\t\t\n\t\t\t\t\t//if (project.type == Project.HAXE)\n\t\t\t\t\t//{\n\t\t\t\t\t\t//command = [command].concat(project.args).join(\" \");\n\t\t\t\t\t//}\n\t\t\t\t\t\n\t\t\t\t\tvar params:Array<String> = CommandPreprocessor.preprocess(command, pathToProject).split(\" \");\n\t\t\t\t\tvar process:String = params.shift();\n\t\t\t\t\t\n\t\t\t\t\tvar cwd = ProjectAccess.path;\n\t\t\t\t\t\n\t\t\t\t\tprocessHelper.runProcessAndPrintOutputToConsole(process, params, cwd, onComplete);\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\t\n\t\n}\n","package core;\nimport jQuery.JQuery;\nimport tabmanager.TabManager;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass Splitter\n{\n\tvar visible:Bool;\n\t\n\tstatic var instance:Splitter;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new Splitter();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function load():Void\n\t{\n\t\thide();\n\t}\n\t\n\tpublic function show():Void\n\t{\n\t\tif (visible == false) \n\t\t{\n\t\t\tvisible = true;\n\t\t\n\t\t\t//untyped new JQuery('#mainSplitter').jqxSplitter('enable');\n\t\t\tuntyped new JQuery('#mainSplitter').jqxSplitter({ resizable: true });\n\t\t\tuntyped new JQuery('#mainSplitter').jqxSplitter('expand');\n\t\t\tuntyped new JQuery('#mainSplitter').jqxSplitter( { showSplitBar: true } );\n\t\t\t\n\t\t\t//untyped new JQuery('#thirdNested').jqxSplitter('enable');\n\t\t\tuntyped new JQuery('#thirdNested').jqxSplitter({ resizable: true });\n\t\t\t\n\t\t\tvar panels:Array<Dynamic> = [{size:\"85%\"}, {size:\"15%\"}];\n\t\t\tpanels[0].collapsible = false;\n\t\t\tpanels[1].collapsible = true;\n\t\t\tuntyped new JQuery('#thirdNested').jqxSplitter({ panels: panels });         \n\t\t\t\n\t\t\tuntyped new JQuery('#thirdNested').jqxSplitter('expand');\n\t\t\tuntyped new JQuery('#thirdNested').jqxSplitter( { showSplitBar: true } );\n\t\t\tnew JQuery(\"#annotationRuler\").fadeIn(250);\n\t\t\t\n\t\t\tvar welcomeScreen = WelcomeScreen.get();\n\t\t\twelcomeScreen.hide();\n\t\t}\n\t}\n\t\n\tpublic function hide():Void\n\t{\n\t\tvisible = false;\n\t\t\n\t\tvar panels:Array<Dynamic> = [{size:170}, {size:170}];\n\t\tpanels[0].collapsible = true;\n\t\tpanels[1].collapsible = false;\n\t\tuntyped new JQuery('#mainSplitter').jqxSplitter({ panels: panels });         \n\t\tuntyped new JQuery('#mainSplitter').jqxSplitter('collapse');\n\t\t//untyped new JQuery('#mainSplitter').jqxSplitter('disable');\n\t\tuntyped new JQuery('#mainSplitter').jqxSplitter( { resizable: false } );\n\t\tuntyped new JQuery('#mainSplitter').jqxSplitter( { showSplitBar: false } );\n\t\t\n\t\tvar panels:Array<Dynamic> = [{size:\"85%\"}, {size:\"15%\"}];\n\t\tpanels[0].collapsible = false;\n\t\tpanels[1].collapsible = true;\n\t\tuntyped new JQuery('#thirdNested').jqxSplitter({ panels: panels });         \n\t\tuntyped new JQuery('#thirdNested').jqxSplitter('collapse');\n\t\t//untyped new JQuery('#thirdNested').jqxSplitter('disable');\n\t\tuntyped new JQuery('#thirdNested').jqxSplitter( { resizable: false } );\n\t\tuntyped new JQuery('#thirdNested').jqxSplitter( { showSplitBar: false } );\n\t\tnew JQuery(\"#annotationRuler\").fadeOut(250);\n\t\t\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n\t\tif (tabManagerInstance.tabMap != null && tabManagerInstance.tabMap.getTabs().length == 0) \n\t\t{\n\t\t\tvar welcomeScreen = WelcomeScreen.get();\n\t\t\twelcomeScreen.show();\n\t\t}\n\t}\n\t\n\tpublic function isVisible():Bool\n\t{\n\t\treturn visible;\n\t}\n}","package core;\nimport js.node.Os;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass Utils\n{\n\tinline public static var WINDOWS:Int = 0;\n\tinline public static var LINUX:Int = 1;\n\tinline public static var MAC:Int = 2;\n\tinline public static var OTHER:Int = 3;\n\t\n\tpublic static var os:Int;\n\t\n\tpublic static function prepare():Void\n\t{\t\n\t\t//https://github.com/Witcher42/os-cli/blob/master/bin/os.js\n\t\t\n\t\tvar platform = Os.platform();\n\t\t\n\t\tos = OTHER;\n\t\t\n\t\tif (platform == 'linux') \n\t\t{\n\t\t\tos = LINUX;\n\t\t}\n\t\telse if (platform == 'darwin') \n\t\t{\n\t\t\tos = MAC;\n\t\t}\n\t\telse if (platform.indexOf('win') == 0) \n\t\t{\n\t\t\tos = WINDOWS;\n\t\t}\n\t\t\t\n\t\ttrace(\"platform is \" + Std.string(platform));\n\t}\n}","package core;\nimport js.atomshell.browserandwebpage.Shell;\nimport jQuery.JQuery;\nimport js.Browser;\nimport js.html.AnchorElement;\nimport js.html.DivElement;\nimport js.html.HeadingElement;\nimport js.html.LIElement;\nimport js.html.NodeList;\nimport js.html.UListElement;\nimport js.Node;\nimport newprojectdialog.NewProjectDialog;\nimport openproject.OpenProject;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass WelcomeScreen\n{\n\tstatic var instance:WelcomeScreen;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new WelcomeScreen();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tvar div:DivElement;\n\t\n\tpublic function load():Void\n\t{\t\t\n\t\tdiv = cast(Browser.document.getElementById(\"welcomeScreen\"), DivElement);\n\t\t\n\t\tnew JQuery(\"#createNewProject\").on(\"click\", NewProjectDialog.show);\n\t\t\n\t\tnew JQuery(\"#openProject\").on(\"click\", OpenProject.openProject.bind(null, true));\n\t\t\n\t\tvar links:NodeList = Browser.document.getElementsByClassName(\"welcome-screen-link\");\n\t\t\n\t\tfor (i in 0...links.length) \n\t\t{\n\t\t\tvar link = cast(links.item(i), LIElement);\n\t\t\tlink.onclick = function (e):Void \n\t\t\t{\n\t\t\t\tfor (j in 0...links.length) \n\t\t\t\t{\n\t\t\t\t\tvar link2 = cast(links.item(j), LIElement);\n\t\t\t\t\t\n\t\t\t\t\tif (link2 != link) \n\t\t\t\t\t{\n\t\t\t\t\t\tlink2.classList.remove(\"active\");\n\t\t\t\t\t\t\n\t\t\t\t\t\tnew JQuery(\"#welcomeScreenPage\" + Std.string(j + 1)).hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\tlink2.classList.add(\"active\");\n\t\t\t\t\t\t\n\t\t\t\t\t\tnew JQuery(\"#welcomeScreenPage\" + Std.string(j + 1)).fadeIn(250);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\t\n\t\tnew JQuery(\"#github\").on(\"click\", Shell.openExternal.bind(\"https://github.com/as3boyan/HIDE\"));\n\t\tnew JQuery(\"#as3boyan\").on(\"click\", Shell.openExternal.bind(\"http://twitter.com/As3Boyan\"));\n\t}\n\t\n\tfunction createListElement(text:String, onClick:Dynamic)\n\t{\n\t\tvar li:LIElement = Browser.document.createLIElement();\n\t\t\n\t\tvar a:AnchorElement = Browser.document.createAnchorElement();\n\t\ta.href = \"#\";\n\t\ta.textContent = text;\n\t\ta.onclick = function (e):Void \n\t\t{\n\t\t\tonClick();\n\t\t};\n\t\t\n\t\tli.appendChild(a);\n\t\t\n\t\treturn li;\n\t}\n\t\n\tpublic function show():Void\n\t{\n\t\tnew JQuery(div).fadeIn(250);\n\t}\n\t\n\tpublic function hide():Void\n\t{\n\t\tnew JQuery(div).fadeOut(250);\n\t}\n}","package dialogs;\nimport jQuery.JQuery;\nimport js.Browser;\nimport js.html.DivElement;\nimport js.html.HeadingElement;\nimport watchers.LocaleWatcher;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass ModalDialog\n{\n\tvar modal:DivElement;\n\tvar header:DivElement;\n\tvar body:DivElement;\n\tvar footer:DivElement;\n\tvar h4:HeadingElement;\n\n\tpublic function new(?title:String) \n\t{\n\t\tmodal = Browser.document.createDivElement();\n\t\tmodal.className = \"modal fade\";\n\t\t\n\t\tvar dialog:DivElement = Browser.document.createDivElement();\n\t\tdialog.className = \"modal-dialog\";\n\t\tmodal.appendChild(dialog);\n\t\t\n\t\tvar content:DivElement = Browser.document.createDivElement();\n\t\tcontent.className = \"modal-content\";\n\t\tdialog.appendChild(content);\n\t\t\n\t\theader = Browser.document.createDivElement();\n\t\theader.className = \"modal-header\";\n\t\tcontent.appendChild(header);\n\t\t\n\t\th4 = cast(Browser.document.createElement(\"h4\"), HeadingElement);\n\t\th4.className = \"modal-title\";\n\t\t\n\t\tif (title != null) \n\t\t{\n\t\t\tsetTitle(title);\n\t\t}\n\t\t\n\t\theader.appendChild(h4);\n\t\t\n\t\tbody = Browser.document.createDivElement();\n\t\tbody.className = \"modal-body\";\n\t\tbody.style.overflow = \"hidden\";\n\t\tcontent.appendChild(body);\n\t\t\n\t\tfooter = Browser.document.createDivElement();\n\t\tfooter.className = \"modal-footer\";\n\t\tcontent.appendChild(footer);\n\t\t\n\t\tBrowser.window.addEventListener(\"keyup\", function (e)\n\t\t{\n\t\t\tif (e.keyCode == 27)\n\t\t\t{\n\t\t\t\thide();\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\tBrowser.document.body.appendChild(modal);\n\t}\n\t\n\tpublic function setTitle(title:String):Void\n\t{\n\t\t//h4.setAttribute(\"localeString\", title);\n\t\t//h4.textContent = LocaleWatcher.getStringSync(title);\n\t\th4.textContent = title;\n\t}\n\t\n\tpublic function getHeader() \n\t{\n\t\treturn header;\n\t}\n\t\n\tpublic function getBody() \n\t{\n\t\treturn body;\n\t}\n\t\n\tpublic function getFooter() \n\t{\n\t\treturn footer;\n\t}\n\t\n\tpublic function getModal()\n\t{\n\t\treturn modal;\n\t}\n\t\n\tpublic function show():Void\n\t{\n\t\tuntyped new JQuery(modal).modal(\"show\");\n\t}\n\t\n\tpublic function hide():Void\n\t{\n\t\tuntyped new JQuery(modal).modal(\"hide\");\n\t}\n\t\n}","package dialogs;\nimport bootstrap.ButtonManager;\nimport bootstrap.InputGroupButton;\nimport core.FileDialog;\nimport js.Browser;\nimport js.html.DivElement;\nimport js.html.InputElement;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass BrowseDirectoryDialog extends ModalDialog\n{\n\tvar onComplete:String->Void;\n\tvar input:InputElement;\n\tvar inputGroupButton:InputGroupButton;\n\t\n\tpublic function new(?title:String) \n\t{\n\t\tsuper(title);\n\t\t\n\t\tinputGroupButton = new InputGroupButton(\"Browse...\");\n\t\t\n\t\tinput = inputGroupButton.getInput();\n\t\t\n\t\tvar browseButton = inputGroupButton.getButton();\n\t\t\n\t\tbrowseButton.onclick = function (e):Void \n\t\t{\n\t\t\tFileDialog.openFolder(function (path:String):Void \n\t\t\t{\n\t\t\t\tinput.value = path;\n\t\t\t}\n\t\t\t);\n\t\t};\n\t\t\n\t\tgetBody().appendChild(inputGroupButton.getElement());\n\t\t\n\t\tvar buttonManager = ButtonManager.get();\n\t\t\n\t\tvar okButton = buttonManager.createButton(\"OK\", false, false, true);\n\t\t\n\t\tokButton.onclick = function (e):Void \n\t\t{\n\t\t\tif (onComplete != null) \n\t\t\t{\n\t\t\t\tonComplete(input.value);\n\t\t\t}\n\t\t};\n\t\t\n\t\tgetFooter().appendChild(okButton);\n\t\tgetFooter().appendChild(buttonManager.createButton(\"Cancel\", false, true));\n\t}\n\t\n\tpublic function setDefaultValue(_value:String)\n\t{\n\t\tinput.value = _value;\n\t}\n\t\n\tpublic function setCallback(_onComplete:String->Void):Void\n\t{\n\t\tonComplete = _onComplete;\n\t}\n}","package dialogs;\nimport js.atomshell.browserandwebpage.Shell;\nimport bootstrap.ButtonManager;\nimport js.html.ButtonElement;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass BrowseDirectoryWithDownloadButtonDialog extends BrowseDirectoryDialog\n{\n\tvar downloadButton:ButtonElement;\n\n\tpublic function new(?title:String) \n\t{\n\t\tsuper(title);\n\t\t\n\t\tvar buttonManager = ButtonManager.get();\n\t\t\n\t\tdownloadButton = buttonManager.createButton(\"Download\");\n\t\t\n\t\tinputGroupButton.getSpan().appendChild(downloadButton);\n\t}\n\t\n\tpublic function setDownloadButtonOptions(text:String, url:String)\n\t{\n\t\tdownloadButton.textContent = text;\n\t\t\n\t\tdownloadButton.onclick = function (e):Void \n\t\t{\n\t\t\tShell.openExternal(url);\n\t\t};\n\t}\n\t\n}","package dialogs;\n\nimport watchers.LocaleWatcher;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass DialogManager\n{\n\tstatic var browseDirectoryDialog:BrowseDirectoryDialog;\n\tstatic var haxelibManagerDialog:HaxelibManagerDialog;\n\tstatic var projectOptionsDialog:ProjectOptionsDialog;\n\tstatic var browseDirectoryWithDownloadButtonDialog:BrowseDirectoryWithDownloadButtonDialog;\n\tstatic var installHaxelibDialog:InstallHaxelibDialog;\n    static var reloadFileDialogs:Array<String>;\n\t\n\tpublic static function load():Void\n\t{\n\t\tbrowseDirectoryDialog =  new BrowseDirectoryDialog();\n\t\tbrowseDirectoryWithDownloadButtonDialog = new BrowseDirectoryWithDownloadButtonDialog();\n\t\thaxelibManagerDialog = new HaxelibManagerDialog();\n\t\tprojectOptionsDialog = new ProjectOptionsDialog();\n\t\tinstallHaxelibDialog = new InstallHaxelibDialog();\n        \n        reloadFileDialogs = [];\n\t}\n\t\n\tpublic static function showBrowseFolderDialog(title:String, onComplete:String->Void, ?defaultValue:String = \"\", ?downloadButtonText:String, ?downloadButtonURL:String):Void\n\t{\n\t\tvar dialog = browseDirectoryDialog;\n\t\t\n\t\tif (downloadButtonText != null && downloadButtonURL != null) \n\t\t{\n\t\t\tdialog = browseDirectoryWithDownloadButtonDialog;\n\t\t\tbrowseDirectoryWithDownloadButtonDialog.setDownloadButtonOptions(downloadButtonText, downloadButtonURL);\n\t\t}\n\t\t\n\t\tdialog.setTitle(title);\n\t\tdialog.setCallback(onComplete);\n\t\tdialog.setDefaultValue(defaultValue);\n\t\tdialog.show();\n\t}\n\t\n\tpublic static function showHaxelibManagerDialog()\n\t{\n\t\thaxelibManagerDialog.show();\n\t}\n\t\n\tpublic static function showProjectOptions()\n\t{\n\t\tprojectOptionsDialog.show();\n\t}\n\t\n\tpublic static function showInstallHaxelibDialog(lib:String, pathToHxml:String):Void \n\t{\n\t\tinstallHaxelibDialog.setLib(lib);\n\t\tinstallHaxelibDialog.setPathToHxml(pathToHxml);\n\t\tinstallHaxelibDialog.show();\n\t}\n\t\n    public static function showReloadFileDialog(path:String, onConfirm:Dynamic)\n    {\n        if (reloadFileDialogs.indexOf(path) == -1)\n        {            \n            Alertify.confirm(LocaleWatcher.getStringSync(\"File \") + path + LocaleWatcher.getStringSync(\" was changed. Reload?\"), function (e)\n            {\n                if (e) \n                {\n                    onConfirm();\n                }\n                    \n                reloadFileDialogs.remove(path);\n            }\n            );\n            \n            reloadFileDialogs.push(path);\n        }\n    }\n    \n\tpublic static function hide():Void \n\t{\n\t\tbrowseDirectoryDialog.hide();\n\t\tbrowseDirectoryWithDownloadButtonDialog.hide();\n\t\thaxelibManagerDialog.hide();\n\t}\n}","package dialogs;\nimport bootstrap.ButtonManager;\nimport bootstrap.InputGroupButton;\nimport bootstrap.ListGroup;\nimport core.HaxeHelper;\nimport core.ProcessHelper;\nimport js.Browser;\nimport js.html.Event;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass HaxelibManagerDialog extends ModalDialog\n{\n\tvar listGroup:ListGroup;\n\n\tpublic function new() \n\t{\n\t\tsuper(\"haxelib manager\");\n\t\t\n\t\tvar inputGroupButton:InputGroupButton = new InputGroupButton(\"Search\");\n\t\t\n\t\tgetBody().appendChild(inputGroupButton.getElement());\n\t\t\n\t\tlistGroup = new ListGroup();\n\t\tlistGroup.getElement().id = \"haxelibsList\";\n\t\t\n\t\tHaxeHelper.getInstalledHaxelibList(function (data:Array<String>):Void \n\t\t{\n\t\t\tfor (item in data)\n\t\t\t{\n\t\t\t\tlistGroup.addItem(item, \"\");\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\tgetBody().appendChild(listGroup.getElement());\n\t\t\n\t\tBrowser.window.addEventListener(\"resize\", function (e:Event):Void \n\t\t{\n\t\t\tupdateSize();\n\t\t}\n\t\t);\n\t\t\n\t\tvar buttonManager = ButtonManager.get();\n\t\t\n\t\tgetFooter().appendChild(buttonManager.createButton(\"OK\", false, true, true));\n\t\t\n\t\tupdateSize();\n\t}\n\t\n\tfunction updateSize():Void \n\t{\n\t\tlistGroup.getElement().style.height = Browser.window.innerHeight / 2 + \"px\";\n\t}\n\t\n}","package dialogs;\nimport projectaccess.ProjectAccess;\nimport bootstrap.ButtonManager;\nimport bootstrap.InputGroup;\nimport bootstrap.InputGroupButton;\nimport bootstrap.RadioElement;\nimport core.ProcessHelper;\nimport jQuery.JQuery;\nimport js.Browser;\nimport js.html.InputElement;\nimport js.html.KeyboardEvent;\nimport js.html.ParagraphElement;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass InstallHaxelibDialog extends ModalDialog\n{\n\t//var inputGroupButton:InputGroupButton;\n\tvar lib:String;\n\tvar pathToHxml:String;\n\tvar input:InputElement;\n\tvar installHxmlLibsRadio:RadioElement;\n\tvar commandPreviewP:ParagraphElement;\n\tvar installLibRadio:RadioElement;\n\tvar installAllHxmlLibsRadio:RadioElement;\n\n\tpublic function new()\n\t{\n\t\tsuper(\"Missing haxelib\");\n\t\t\n\t\tvar form = Browser.document.createFormElement();\n\t\tform.setAttribute(\"role\", \"form\");\n\t\t\n\t\tvar inputGroup:InputGroup = new InputGroup();\n\t\tinputGroup.getElement().id = \"commandInputElement\";\n\t\t\n\t\tinputGroup.getElement().style.display = \"none\";\n\t\t\n\t\tinput = inputGroup.getInput();\n\t\t\n\t\tinstallLibRadio = new RadioElement(\"haxelibInstallOptions\", \"installLib\", \"install from haxelib\", function ():Void \n\t\t{\n\t\t\tinput.value = \"haxelib install \" + lib;\n\t\t\tinput.onchange(null);\n\t\t\tinputGroup.getElement().style.display = \"none\";\n\t\t});\n\t\tinstallLibRadio.getInput().checked = true;\n\t\tform.appendChild(installLibRadio.getElement());\n\t\t\n\t\tinstallHxmlLibsRadio = new RadioElement(\"haxelibInstallOptions\", \"installHxmlLibs\", \"install all libs for hxml from haxelib\", function ():Void \n\t\t{\n\t\t\tinput.value = \"haxelib install \" + pathToHxml;\n\t\t\tinput.onchange(null);\n\t\t\tinputGroup.getElement().style.display = \"none\";\n\t\t});\n\t\tinstallHxmlLibsRadio.getInput().checked = true;\n\t\tform.appendChild(installHxmlLibsRadio.getElement());\n\t\t\n\t\tinstallAllHxmlLibsRadio = new RadioElement(\"haxelibInstallOptions\", \"installHxmlLibs\", \"install all libs for all hxml from haxelib\", function ():Void \n\t\t{\n\t\t\tinput.value = \"haxelib install all\";\n\t\t\tinput.onchange(null);\n\t\t\tinputGroup.getElement().style.display = \"none\";\n\t\t});\n\t\tinstallAllHxmlLibsRadio.getInput().checked = true;\n\t\tform.appendChild(installAllHxmlLibsRadio.getElement());\n\t\t\n\t\tvar installLibFromGitRadio = new RadioElement(\"haxelibInstallOptions\", \"installLibFromGit\", \"install from git\", function ():Void \n\t\t{\n\t\t\tinput.value = \"haxelib git \" + lib + \" <git-clone-path> <branch> <subdirectory>\";\n\t\t\tinput.onchange(null);\n\t\t\tinputGroup.getElement().style.display = \"\";\n\t\t});\n\t\tinstallLibFromGitRadio.getInput().checked = true;\n\t\tform.appendChild(installLibFromGitRadio.getElement());\n\t\t\n\t\tvar installLibFromDevRadio = new RadioElement(\"haxelibInstallOptions\", \"installLibFromDev\", \"set development directory\", function ():Void \n\t\t{\n\t\t\tinput.value = \"haxelib dev \" + lib + \" <directory>\";\n\t\t\tinput.onchange(null);\n\t\t\tinputGroup.getElement().style.display = \"\";\n\t\t});\n\t\t\n\t\tinstallLibFromDevRadio.getInput().checked = true;\n\t\tform.appendChild(installLibFromDevRadio.getElement());\n\t\t\n\t\tgetBody().appendChild(form);\n\t\t\n\t\tgetBody().appendChild(inputGroup.getElement() );\n\t\t\n\t\tcommandPreviewP = Browser.document.createParagraphElement();\n\t\tcommandPreviewP.id = \"commandPreviewText\";\n\t\t\n\t\tinput.onchange = function (e):Void \n\t\t{\n\t\t\tcommandPreviewP.textContent = \"Run command: \" + input.value;\n\t\t};\n\t\t\n\t\tgetBody().appendChild(commandPreviewP);\n\t\t\n\t\tvar buttonManager = ButtonManager.get();\n\t\t\n\t\tvar cancelButton = buttonManager.createButton(\"Cancel\", false, true);\n\t\tgetFooter().appendChild(cancelButton);\n\t\t\n\t\tvar okButton = buttonManager.createButton(\"OK\", false, false, true);\n\t\tokButton.onclick = function (e):Void \n\t\t{\t\n\t\t\tAlertify.log(\"Running command: \" + input.value);\n\t\t\t\n\t\t\tvar params = StringTools.trim(input.value).split(\" \");\n\t\t\t\n\t\t\tvar cwd = ProjectAccess.path;\n\t\t\t\n\t\t\tvar processHelper = ProcessHelper.get();\n\t\t\t\n\t\t\tprocessHelper.runPersistentProcess(params.shift(), params, cwd, function (code, stdout, stderr):Void \n\t\t\t{\n\t\t\t\tif (code == 0) \n\t\t\t\t{\n\t\t\t\t\tAlertify.success(lib + \" install complete(\" + input.value + \").\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tAlertify.error(\"Error on running command \" + input.value);\n\t\t\t\t\tAlertify.error(stdout);\n\t\t\t\t\tAlertify.error(stderr);\n\t\t\t\t}\n\t\t\t}, true);\n\t\t\t\n\t\t\thide();\n\t\t};\n\t\t\n\t\tgetFooter().appendChild(okButton);\n\t\t\n\t\tBrowser.document.addEventListener(\"keyup\", function (e:KeyboardEvent):Void \n\t\t{\n\t\t\tif (e.keyCode == 13 && new JQuery(getModal()).is(\":visible\"))\n\t\t\t{\n\t\t\t\tokButton.click();\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic function setLib(name:String):Void \n\t{\n\t\tlib = name;\n\t\tsetTitle('Missing \"' + lib + '\" haxelib');\n\t}\n\t\n\tpublic function setPathToHxml(?path:String):Void \n\t{\n\t\tpathToHxml = path;\n\t\t\n\t\tif (path != null) \n\t\t{\n\t\t\tinstallHxmlLibsRadio.getInput().disabled = false;\n\t\t\tinstallAllHxmlLibsRadio.getInput().disabled = false;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tinstallHxmlLibsRadio.getInput().disabled = true;\n\t\t\tinstallAllHxmlLibsRadio.getInput().disabled = true;\n\t\t}\n\t}\n\t\n\toverride public function show():Void \n\t{\n\t\tsuper.show();\n\t\tinstallLibRadio.getInput().checked = true;\n\t\tinput.value = \"haxelib install \" + lib;\n\t\tinput.onchange(null);\n\t}\n\t\n}","package dialogs;\nimport bootstrap.ButtonManager;\nimport projectaccess.ProjectOptions;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass ProjectOptionsDialog extends ModalDialog\n{\n\n\tpublic function new() \n\t{\n\t\tsuper(\"Project Options\");\n\t\t\n\t\tvar projectOptions = ProjectOptions.get();\n\t\t\n\t\tvar buttonManager = ButtonManager.get();\n\t\t\n\t\tgetBody().appendChild(projectOptions.page);\n\t\tgetFooter().appendChild(buttonManager.createButton(\"OK\", false, true, true));\n\t}\n\t\n}","package filetree;\nimport js.npm.Remove;\nimport js.atomshell.browserandwebpage.Shell;\nimport js.npm.Mv;\nimport js.npm.Watchr;\nimport js.node.Path;\nimport js.node.Fs;\nimport js.node.fs.Stats;\nimport projectaccess.Project;\nimport core.RunProject;\nimport haxe.ds.StringMap.StringMap;\nimport jQuery.JQuery;\nimport jQuery.JQueryStatic;\nimport js.Browser;\nimport js.html.AnchorElement;\nimport js.html.DivElement;\nimport js.html.LIElement;\nimport js.html.MouseEvent;\nimport js.html.UListElement;\nimport parser.ClasspathWalker;\nimport projectaccess.ProjectAccess;\nimport tabmanager.TabManager;\nimport watchers.LocaleWatcher;\nimport watchers.SettingsWatcher;\nimport watchers.Watcher;\nimport core.OutlinePanel.TreeItem;\n\n/**\n * ...\n * @author AS3Boyan\n */\n\ntypedef ContextMenuItem = \n{\n\t?element:LIElement,\n\t?cb:Dynamic\n}\n\nclass FileTree\n{\n\tvar lastProjectName:String;\n\tvar lastProjectPath:String;\n\t\n\tvar contextMenu:Dynamic;\n\tvar contextMenuCommandsMap:StringMap<ContextMenuItem>;\n\tvar watcher:Dynamic;\n\t\n\tstatic var instance:FileTree;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new FileTree();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function init():Void\n\t{\t\t\n\t\tcontextMenuCommandsMap = new StringMap();\n\t\t\n\t\tappendToContextMenu(\"New File...\", function (selectedItem):Void \n\t\t{\n\t\t\tvar path:String;\n\t\t\t\n\t\t\tif (selectedItem.value.type == 'folder') \n\t\t\t{\n\t\t\t\tpath = selectedItem.value.path;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpath = Path.dirname(selectedItem.value.path);\n\t\t\t}\n\t\t\t\t\n\t\t\tAlertify.prompt(LocaleWatcher.getStringSync(\"Filename:\"), function (e:Bool, str:String)\n\t\t\t{\n\t\t\t\tif (e) \n\t\t\t\t{\n\t\t\t\t\tvar pathToFile:String = Path.join(path, str);\n\t\t\t\t\t\n\t\t\t\t\tvar tabManager = TabManager.get();\n\t\t\t\t\ttabManager.createFileInNewTab(pathToFile);\n\t\t\t\t\tuntyped new JQuery('#filetree').jqxTree('addTo', createFileItem(pathToFile) , selectedItem.element);\n\t\t\t\t\tattachContextMenu();\n\t\t\t\t}\n\t\t\t}, \"New.hx\");\n\t\t});\n\t\t\n\t\tappendToContextMenu(\"New Folder...\", function (selectedItem):Void \n\t\t{\n\t\t\tvar path:String;\n\t\t\t\n\t\t\tif (selectedItem.value.type == 'folder') \n\t\t\t{\n\t\t\t\tpath = selectedItem.value.path;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpath = Path.dirname(selectedItem.value.path);\n\t\t\t}\n\t\t\t\n\t\t\tAlertify.prompt(\"Folder name:\", function (e, str:String)\n\t\t\t{\n\t\t\t\tif (e) \n\t\t\t\t{\n\t\t\t\t\tvar dirname:String = str;\n\t\t\t\n\t\t\t\t\tif (dirname != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pathToFolder = Path.join(path, dirname);\n\t\t\t\t\t\t\n\t\t\t\t\t\tFs.mkdir(pathToFolder, function (error):Void\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (error == null) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuntyped new JQuery('#filetree').jqxTree('addTo', { label: str, value: {type: \"folder\", path: pathToFolder}}, selectedItem.element);\n\t\t\t\t\t\t\t\t//icon: \"includes/images/folder.png\"\n\t\t\t\t\t\t\t\tattachContextMenu();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tAlertify.error(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, \"New Folder\");\n\t\t});\n\t\t\n\t\tappendToContextMenu(\"Edit\", function (selectedItem):Void \n\t\t{\n\t\t\tvar tabManager = TabManager.get();\n\t\t\t\n\t\t\tif (selectedItem.value.type == 'file') \n\t\t\t{\n\t\t\t\ttabManager.openFileInNewTab(selectedItem.value.path);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tuntyped new JQuery('#filetree').jqxTree('expandItem', selectedItem.element);\n\t\t\t}\n\t\t});\n\t\t\n\t\tappendToContextMenu(\"Execute\", function (selectedItem):Void \n\t\t{\n\t\t\tShell.openItem(selectedItem.value.path);\n\t\t});\n\t\t\n\t\tappendToContextMenu(\"Show Item In Folder\", function (selectedItem):Void \n\t\t{\n\t\t\tShell.showItemInFolder(selectedItem.value.path);\n\t\t});\n\t\t\n\t\tappendToContextMenu(\"Rename...\", function (selectedItem):Void \n\t\t{\t\t\t\n\t\t\tvar path = selectedItem.value.path;\n\t\t\t\n\t\t\tAlertify.prompt(LocaleWatcher.getStringSync(\"Please enter new name for \") + path, function (e, str):Void \n\t\t\t{\n\t\t\t\tif (e) \n\t\t\t\t{\n\t\t\t\t\tvar currentDirectory:String = Path.dirname(path);\n\t\t\t\t\tMv.move(path, Path.join(currentDirectory, str), function (error):Void \n\t\t\t\t\t{\n\t\t\t\t\t\tif (error == null) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tload();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tAlertify.error(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\t, Path.basename(path));\n\t\t}\n\t\t);\n\t\t\n\t\tappendToContextMenu(\"Delete...\", function (selectedItem):Void \n\t\t{\n\t\t\tvar path = selectedItem.value.path;\n\t\t\t\n\t\t\tswitch (selectedItem.value.type) \n\t\t\t{\n\t\t\t\tcase 'file':\n\t\t\t\t\tAlertify.confirm(LocaleWatcher.getStringSync(\"Remove file \") + path + \" ?\", function (e):Void \n\t\t\t\t\t{\n\t\t\t\t\t\tif (e) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tFs.unlink(path, function (error):Void \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (error == null) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuntyped new JQuery('#filetree').jqxTree('removeItem', selectedItem.element);\n\t\t\t\t\t\t\t\t\tattachContextMenu();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tAlertify.error(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\tcase 'folder':\n\t\t\t\t\tAlertify.confirm(LocaleWatcher.getStringSync(\"Remove folder \") + path + \" ?\", function (e):Void \n\t\t\t\t\t{\n\t\t\t\t\t\tif (e) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tRemove.removeAsync(path, {}, function (error):Void \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (error == null) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuntyped new JQuery('#filetree').jqxTree('removeItem', selectedItem.element);\n\t\t\t\t\t\t\t\t\tattachContextMenu();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tAlertify.error(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\tappendToContextMenu(\"Hide/Unhide All\", function (selectedItem):Void \n\t\t{\n\t\t\tif (ProjectAccess.path != null) \n\t\t\t{\n\t\t\t\tProjectAccess.currentProject.showHiddenItems = !ProjectAccess.currentProject.showHiddenItems;\n\t\t\t\tAlertify.success(LocaleWatcher.getStringSync(\"Hidden Items Visible: \") + Std.string(ProjectAccess.currentProject.showHiddenItems));\n\t\t\t\t\n\t\t\t\tif (!ProjectAccess.currentProject.showHiddenItems) \n\t\t\t\t{\n\t\t\t\t\tAlertify.log(\"Hidden Items: \\n\" + Std.string(ProjectAccess.currentProject.hiddenItems));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tload();\n\t\t}\n\t\t);\n\t\t\n\t\tappendToContextMenu(\"Hide/Unhide\", function (selectedItem):Void \n\t\t{\n\t\t\tif (ProjectAccess.path != null) \n\t\t\t{\n\t\t\t\tvar path = selectedItem.value.path;\n\t\t\t\t\n\t\t\t\tif (!ProjectAccess.isItemHidden(path))\n\t\t\t\t{\n\t\t\t\t\tProjectAccess.hideItem(path);\n\t\t\t\t\tuntyped new JQuery('#filetree').jqxTree('removeItem', selectedItem.element);\n\t\t\t\t\tattachContextMenu();\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tProjectAccess.unhideItem(path);\n\t\t\t\t\tload();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tuntyped new JQuery('#filetree').jqxTree('removeItem', selectedItem.element);\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\tappendToContextMenu(\"Set As Compile Main\", function (selectedItem):Void\n\t\t{\n\t\t\tvar path:String = selectedItem.value.path;\n\t\t\t\n\t\t\tif (RunProject.setHxmlAsProjectBuildFile(path))\n\t\t\t{\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\tcontextMenu = untyped new JQuery(\"#jqxMenu\").jqxMenu({ autoOpenPopup: false, mode: 'popup' });\n\t\t\n\t\tattachContextMenu();\n\t\t\n\t\t// disable the default browser's context menu.\n\t\tnew JQuery(Browser.document).on('contextmenu', function (e) {\n\t\t\tif (new JQuery(e.target).parents('.jqx-tree').length > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\t\n\t\tnew JQuery(\"#jqxMenu\").on('itemclick', function (event) \n\t\t{\n\t\t\tvar item = Lambda.find(contextMenuCommandsMap, function (contextMenuItem)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn event.args == contextMenuItem.element;\n\t\t\t\t\t\t}\n\t\t\t\t\t   );\n\t\t\t\n\t\t\titem.cb();\n\t\t}\n\t\t);\n\t\t\n\t\tnew JQuery('#filetree').dblclick(function (event):Void \n\t\t{\n\t\t\tvar item = untyped new JQuery('#filetree').jqxTree('getSelectedItem');\n\t\t\t\n\t\t\tif (item != null)\n\t\t\t{\n\t\t\t\tvar value = item.value;\n\t\t\t\n\t\t\t\tif (value != null && value.type == 'file') \n\t\t\t\t{\n\t\t\t\t\tvar tabManager = TabManager.get();\n\t\t\t\t\ttabManager.openFileInNewTab(item.value.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\tnew JQuery('#filetree').bind('dragEnd', function (event) {\n                var target = event.args.originalEvent.target;\n                var targetParents = new JQuery(target).parents();\n                var item:Dynamic = null;\n                JQueryStatic.each(untyped new JQuery(\"#filetree\").jqxTree('getItems'), function (index, value) {\n                    if (value.label == event.args.label && value.value == event.args.value) {\n                        item = value;\n                        untyped __js__('return false');\n                    }\n                });\n                if (item) {\n                    var parents = new JQuery(item.element).parents('li');\n                    var path = \"\";\n\t\t\t\t\t\n                    JQueryStatic.each(parents, function (index, value) {\n                        var item = untyped new JQuery(\"#filetree\").jqxTree('getItem', value);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (item.level > 0) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t path = item.label + \"/\" + path;\n\t\t\t\t\t\t}\n                    });\n\t\t\t\t\t\n\t\t\t\t\tvar topDirectory = untyped new JQuery(\"#filetree\").jqxTree('getItems')[0].value.path;\n\t\t\t\t\tvar selectedItem = untyped new JQuery(\"#filetree\").jqxTree('getSelectedItem');\n\t\t\t\t\t\n\t\t\t\t\tvar previousPath = selectedItem.value.path;\n                    var newPath = Path.join(topDirectory, path, selectedItem.label);\n\t\t\t\t\t\n\t\t\t\t\tif (previousPath != newPath)\n\t\t\t\t\t{\n\t\t\t\t\t\tMv.move(previousPath, newPath, function (error):Void \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (error == null) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tAlertify.success(\"File were successfully moved to \" + newPath);\n\t\t\t\t\t\t\t\tselectedItem.value.path = newPath;\n\t\t\t\t\t\t\t\tattachContextMenu();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tAlertify.error(\"Can't move file from \" + previousPath + \" to \" + newPath);\n\t\t\t\t\t\t\t\tload();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n                }\n            });\n\t}\n\t\n\tstatic function updateProjectMainHxml()\n\t{\n\t\tvar project = ProjectAccess.currentProject;\n\t\t\n\t\tvar noproject = (ProjectAccess.path == null);\n\t\t\n\t\tvar main = null;\n\t\t\n\t\tswitch (project.type)\n\t\t{\n\t\t\tcase Project.HAXE:\n\t\t\t\tif (!noproject)\n\t\t\t\t{\n\t\t\t\t\tmain = Path.resolve(ProjectAccess.path, project.targetData[project.target].pathToHxml);\n\t\t\t\t}\n\n\t\t\tcase Project.HXML:\n\t\t\t\tif (!noproject && project.main != null)\n\t\t\t\t{\n\t\t\t\t\tmain = Path.resolve(ProjectAccess.path, project.main);\n\t\t\t\t}\n\t\t\tcase Project.OPENFL:\n\t\t\tdefault:\n\n\t\t}\n\t\t\n\t\tvar items:Array<Dynamic> = untyped new JQuery('#filetree').jqxTree('getItems');\n\t\t\t\t\n\t\tfor (item in items)\n\t\t{\n\t\t\tvar li = cast(item.element, LIElement);\n\n\t\t\tif (!noproject && main != null && item.value.path == main)\n\t\t\t{\n\t\t\t\tli.classList.add(\"mainHxml\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tli.classList.remove(\"mainHxml\");\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction appendToContextMenu(name:String, onClick:Dynamic)\n\t{\n\t\tvar li:LIElement = Browser.document.createLIElement();\n\t\tli.textContent = name;\n\t\tnew JQuery(\"#filetreemenu\").append(li);\n\t\t\n\t\tvar contextMenuItem:ContextMenuItem = {};\n\t\t\n\t\tcontextMenuItem.cb = function ():Void \n\t\t{\n\t\t\tvar selectedItem = untyped new JQuery('#filetree').jqxTree('getSelectedItem');\n\t\t\tif (selectedItem != null) \n\t\t\t{\n\t\t\t\tonClick(selectedItem);\n\t\t\t}\n\t\t};\n\t\t\n\t\tcontextMenuItem.element = li;\n\t\t\n\t\tcontextMenuCommandsMap.set(name, contextMenuItem);\n\t}\n\t\n\tfunction attachContextMenu() \n\t{\n\t\t// open the context menu when the user presses the mouse right button.\n\t\tnew JQuery(\"#filetree li\").on('mousedown', function (event) {\t\t\t\n\t\t\tvar target = new JQuery(event.target).parents('li:first')[0];\n\t\t\tvar rightClick = isRightClick(event);\n\t\t\tif (rightClick && target != null) \n\t\t\t{\n\t\t\t\tuntyped new JQuery(\"#filetree\").jqxTree('selectItem', target);\n\t\t\t\tvar scrollTop = new JQuery(Browser.window).scrollTop();\n\t\t\t\tvar scrollLeft = new JQuery(Browser.window).scrollLeft();\n\t\t\t\t\n\t\t\t\tvar selectedItem = untyped new JQuery(\"#filetree\").jqxTree('getSelectedItem');\n\t\t\t\tvar extname = Path.extname(selectedItem.value.path);\n\t\t\t\t\n\t\t\t\tvar editElement = contextMenuCommandsMap.get(\"Edit\").element;\n\t\t\t\t\n\t\t\t\tif (selectedItem.value.type == \"file\")\n\t\t\t\t{\n\t\t\t\t\teditElement.textContent = \"Edit\";\n\t\t\t\t}\n\t\t\t\telse if (selectedItem.value.type == \"folder\")\n\t\t\t\t{\n\t\t\t\t\teditElement.textContent = \"Open Folder\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar setAsCompileMainelement = contextMenuCommandsMap.get(\"Set As Compile Main\").element;\n\t\t\t\t\n\t\t\t\tif (extname != \".hxml\")\n\t\t\t\t{\n\t\t\t\t\tnew JQuery(setAsCompileMainelement).hide();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnew JQuery(setAsCompileMainelement).show();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (ProjectAccess.path != null)\n\t\t\t\t{\n\t\t\t\t\tvar hideUnhideItemElement = contextMenuCommandsMap.get(\"Hide/Unhide\").element;\n\t\t\t\t\t\n\t\t\t\t\tif (!ProjectAccess.isItemHidden(selectedItem.value.path))\n\t\t\t\t\t{\n\t\t\t\t\t\thideUnhideItemElement.textContent = \"Hide\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\thideUnhideItemElement.textContent = \"Unhide\";\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tvar showHiddenItemsElement = contextMenuCommandsMap.get(\"Hide/Unhide All\").element;\n\t\t\t\t\t\t\n\t\t\t\t\tif (ProjectAccess.currentProject.showHiddenItems)\n\t\t\t\t\t{\n\t\t\t\t\t\tshowHiddenItemsElement.textContent = \"Hide All\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tshowHiddenItemsElement.textContent = \"Unhide All\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcontextMenu.jqxMenu('open', Std.parseInt(event.clientX) + 5 + scrollLeft, Std.parseInt(event.clientY) + 5 + scrollTop);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction isRightClick(event:Dynamic):Bool\n\t{\n\t\tvar rightclick = null;\n\t\tif (!event) var event = Browser.window.event;\n\t\tif (event.which) rightclick = (event.which == 3);\n\t\telse if (event.button) rightclick = (event.button == 2);\n\t\treturn rightclick;\n\t}\n\t\n\tpublic function load(?projectName:String, ?path:String):Void\n\t{        \n\t\tif (projectName == null)\n\t\t{\n\t\t\tprojectName = lastProjectName;\n\t\t}\n\t\t\n\t\tif (path == null)\n\t\t{\n\t\t\tpath = lastProjectPath;\n\t\t}\n            \n        var filetree:Dynamic = untyped new JQuery(\"#filetree\");\n        \n        filetree.on('expand', function (event) \n        {\n            var label = filetree.jqxTree('getItem', event.args.element).label;\n            var element2 = new JQuery(event.args.element);\n            var loader = false;\n            var loaderItem:Dynamic = null;\n            var children = element2.find('ul:first').children();\n            jQuery.JQueryStatic.each(children, function (index, value) \n\t\t\t{\n                var item = filetree.jqxTree('getItem', value);\n                if (item != null && item.label == \"Loading...\") \n                {\n                    loaderItem = item;\n                    loader = true;\n                    untyped __js__(\"return false\");\n                };\n            });\n           \t\n            if (loader) \n            {\n                var pathToItem:String = loaderItem.value;\n                \n            \tvar items:Array<TreeItem> = readDir2(pathToItem);\n                \n//                 for (i in 0...items.length)\n//                 {\n//                 \t items[i] = prepareForLazyLoading(items[i]);\n//                 }\n                \n                filetree.jqxTree('addTo', items, element2[0]);\n            \tfiletree.jqxTree('removeItem', loaderItem.element);\n            \tattachContextMenu();\n            }\n        });\n\t\t\n\t\treadDirItems(path, function (source:TreeItem):Void \n\t\t{            \n//             var source2:TreeItem = prepareForLazyLoading(source);\n//             source2.expanded = true;\n            \n            untyped new JQuery('#filetree').jqxTree( { source: [source] } );\n            attachContextMenu();\n            \t\t\t\n\t\t\t//var items = untyped new JQuery(\"#filetree\").jqxTree('getItems');\n\t\t\t//trace(items);\n\t\t}, true);\n\t\t\n\t\tif (watcher != null) \n\t\t{\n\t\t\twatcher.close();\n\t\t\twatcher = null;\n\t\t}\n\t\t\n\t\tvar classpathWalker = ClasspathWalker.get();\n\t\t\t\n\t\tvar config:WatchrConfig = {\n\t\t\tpath: path,\n\t\t\tlistener:\n\t\t\t\tfunction (changeType, filePath, fileCurrentStat, filePreviousStat):Void \n\t\t\t\t{\n\t\t\t\t\ttrace(changeType);\n\t\t\t\t\ttrace(filePath);\n\t\t\t\t\ttrace(fileCurrentStat);\n\t\t\t\t\ttrace(filePreviousStat);\n\t\t\t\t\t\n\t\t\t\t\tswitch (changeType) \n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'create':\n\t\t\t\t\t\t\ttrace(changeType);\n\t\t\t\t\t\t\ttrace(filePath);\n\t\t\t\t\t\t\t//load();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tFs.stat(filePath, function (error, stat:Stats):Void \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (error == null) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (stat.isFile()) \n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (changeType == 'create') \n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tclasspathWalker.addFile(filePath);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tclasspathWalker.removeFile(filePath);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if(stat.isDirectory()) \n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttrace(changeType);\n\t\t\t\t\t\t\t\t\t\ttrace(filePath);\n\t\t\t\t\t\t\t\t\t\t//ClasspathWalker.parseProjectArguments();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttrace(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n                        case 'delete':\n                            if (Path.extname(filePath) != \"\")\n                            {\n                            \tclasspathWalker.removeFile(filePath);\n                    \t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t};\n\t\t\n\t\tconfig.interval = 3000;\n\t\t\n\t\twatcher = Watchr.watch(config);\n\t\t\n\t\tlastProjectName = projectName;\n\t\tlastProjectPath = path;\n\t\t\n\t\tupdateProjectMainHxml();\n\t}\n\t\n\tstatic function readDirItems(path:String, ?onComplete:Dynamic->Void, ?root:Bool = false)\n\t{\n        var source:Dynamic = createFolderItem(path, []);\n        source.expanded = true;\n        \n        source.items = readDir2(path);\n        \n        onComplete(source);\n\t}\n\t\n    static function readDir2(path:String):Array<TreeItem>\n\t{\n        var items:Array<TreeItem> = [];\n        \n        var pathToFolders:Array<String> = [];\n        var pathToFiles:Array<String> = [];\n        \n        var fullPath:String;\n        var stat:Stats;\n        \n        for (pathToItem in Fs.readdirSync(path))\n        {      \n            if (!SettingsWatcher.isItemInIgnoreList(pathToItem) && !ProjectAccess.isItemInIgnoreList(pathToItem))\n            {\n                fullPath = Path.join(path, pathToItem);\n                stat = Fs.statSync(fullPath);\n\n                if (stat.isDirectory())\n                {\n                    pathToFolders.push(fullPath);\n                }\n                else if(stat.isFile())\n                {\n                    pathToFiles.push(fullPath);\n                }\n            }\n        }\n        \n        var type:String = null;\n        type = \"folder\";\n        \n        var item:TreeItem = null;\n        \n        for (pathToItem in pathToFolders)\n        {\n             item = createFolderItem(pathToItem, []);\n        \t item.items = [];\n        \t item.items.push({label:\"Loading...\", value: pathToItem});\n             items.push(item);\n\t\t}\n    \t\n    \ttype = \"file\";\n    \n    \tfor (pathToItem in pathToFiles)\n        {\n             item = createFileItem(pathToItem);\n             items.push(item);\n\t\t}\n\n\t\treturn items;\n\t}\n    \n\tstatic function createFileItem(path:String):TreeItem\n\t{\n\t\tvar basename:String = Path.basename(path);\n\t\tvar extname:String = Path.extname(basename);\n\t\t\n\t\tvar data:TreeItem = { label: basename, value: {path: path, type: \"file\"} };\n\t\t\n// \t\tswitch (extname) \n// \t\t{\n// \t\t\tcase \".pdf\":\n// \t\t\t\tdata.icon = \"includes/images/page_white_acrobat.png\";\n// \t\t\tcase \".swf\":\n// \t\t\t\tdata.icon = \"includes/images/page_white_flash.png\";\n// \t\t\tcase \".jpg\", \".jpeg\", \".png\", \".gif\", \".tga\":\n// \t\t\t\tdata.icon = \"includes/images/photo.png\";\n// \t\t\tcase \".html\":\n// \t\t\t\tdata.icon = \"includes/images/html.png\";\n// \t\t\tdefault:\n\t\t\t\t\n// \t\t}\n\t\t\n\t\treturn data;\n\t}\n    \n    static function createFolderItem(path:String, items:Array<TreeItem>):TreeItem\n    {\n    \treturn {label:Path.basename(path), items: items, value: {path: path, type: \"folder\"}}; //icon: \"includes/images/folder.png\"\n    }\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tResource can be used to access resources that were added through the\n\t-resource file@name command line parameter.\n\n\tDepending on their type they can be obtained as String through\n\tgetString(name), or as binary data through getBytes(name).\n\n\tA list of all available resource names can be obtained from listNames().\n**/\nclass Resource {\n\n\t#if (java || cs)\n\t@:keep static var content : Array<String>;\n\t#else\n\tstatic var content : Array<{ name : String, data : String, str : String }>;\n\t#end\n\n\t#if cs\n\tstatic var paths : haxe.ds.StringMap<String>;\n\n\t#if cs @:keep #end private static function getPaths():haxe.ds.StringMap<String>\n\t{\n\t\tif (paths != null)\n\t\t\treturn paths;\n\t\tvar p = new haxe.ds.StringMap();\n\t\tvar all = cs.Lib.toNativeType(haxe.Resource).Assembly.GetManifestResourceNames();\n\t\tfor (i in 0...all.Length)\n\t\t{\n\t\t\tvar path = all[i];\n\t\t\tvar name = path.substr(path.indexOf(\"Resources.\") + 10);\n\t\t\tp.set(name, path);\n\t\t}\n\n\t\treturn paths = p;\n\t}\n\t#end\n\n\t/**\n\t\tLists all available resource names. The resource name is the name part\n\t\tof the -resource file@name command line parameter.\n\t**/\n\tpublic static function listNames() : Array<String> {\n\t\tvar names = new Array();\n\t\t#if (java || cs)\n\t\tfor ( x in content )\n\t\t\tnames.push(x);\n\t\t#else\n\t\tfor ( x in content )\n\t\t\tnames.push(x.name);\n\t\t#end\n\t\treturn names;\n\t}\n\n\t/**\n\t\tRetrieves the resource identified by `name` as a String.\n\n\t\tIf `name` does not match any resource name, null is returned.\n\t**/\n\tpublic static function getString( name : String ) : String {\n\t\t#if java\n\t\tvar stream = cast(Resource, java.lang.Class<Dynamic>).getResourceAsStream(\"/\" + name);\n\t\tif (stream == null)\n\t\t\treturn null;\n\t\tvar stream = new java.io.NativeInput(stream);\n\t\treturn stream.readAll().toString();\n\t\t#elseif cs\n\t\tvar path = getPaths().get(name);\n\t\tvar str = cs.Lib.toNativeType(haxe.Resource).Assembly.GetManifestResourceStream(path);\n\t\tif (str != null)\n\t\t\treturn new cs.io.NativeInput(str).readAll().toString();\n\t\treturn null;\n\t\t#else\n\t\tfor( x in content )\n\t\t\tif( x.name == name ) {\n\t\t\t\t#if neko\n\t\t\t\treturn new String(x.data);\n\t\t\t\t#else\n\t\t\t\tif( x.str != null ) return x.str;\n\t\t\t\tvar b : haxe.io.Bytes = haxe.crypto.Base64.decode(x.data);\n\t\t\t\treturn b.toString();\n\t\t\t\t#end\n\t\t\t}\n\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tRetrieves the resource identified by `name` as an instance of\n\t\thaxe.io.Bytes.\n\n\t\tIf `name` does not match any resource name, null is returned.\n\t**/\n\tpublic static function getBytes( name : String ) : haxe.io.Bytes {\n\t\t#if java\n\t\tvar stream = cast(Resource, java.lang.Class<Dynamic>).getResourceAsStream(\"/\" + name);\n\t\tif (stream == null)\n\t\t\treturn null;\n\t\tvar stream = new java.io.NativeInput(stream);\n\t\treturn stream.readAll();\n\t\t#elseif cs\n\t\tvar path = getPaths().get(name);\n\t\tvar str = cs.Lib.toNativeType(haxe.Resource).Assembly.GetManifestResourceStream(path);\n\t\tif (str != null)\n\t\t\treturn new cs.io.NativeInput(str).readAll();\n\t\treturn null;\n\t\t#else\n\t\tfor( x in content )\n\t\t\tif( x.name == name ) {\n\t\t\t\t#if neko\n\t\t\t\treturn haxe.io.Bytes.ofData(cast x.data);\n\t\t\t\t#else\n\t\t\t\tif( x.str != null ) return haxe.io.Bytes.ofString(x.str);\n\t\t\t\treturn haxe.crypto.Base64.decode(x.data);\n\t\t\t\t#end\n\t\t\t}\n\t\treturn null;\n\t\t#end\n\t}\n\n\tstatic function __init__() {\n\t\t#if neko\n\t\tvar tmp = untyped __resources__();\n\t\tcontent = untyped Array.new1(tmp,__dollar__asize(tmp));\n\t\t#elseif php\n\t\tcontent = null;\n\t\t#elseif as3\n\t\tnull;\n\t\t#elseif (java || cs)\n\t\t//do nothing\n\t\t#else\n\t\tcontent = untyped __resources__();\n\t\t#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Serializer class can be used to encode values and objects into a String,\n\tfrom which the Unserializer class can recreate the original representation.\n\n\tThis class can be used in two ways:\n\n\t- create a new Serializer() instance, call its serialize() method with\n\t\tany argument and finally retrieve the String representation from\n\t\ttoString()\n\t- call Serializer.run() to obtain the serialized representation of a\n\t\tsingle argument\n\n\tSerialization is guaranteed to work for all haxe-defined classes, but may\n\tor may not work for instances of external/native classes.\n\n\tThe specification of the serialization format can be found here:\n\t`http://haxe.org/manual/serialization/format`\n**/\nclass Serializer {\n\n\t/**\n\t\tIf the values you are serializing can contain circular references or\n\t\tobjects repetitions, you should set USE_CACHE to true to prevent\n\t\tinfinite loops.\n\n\t\tThis may also reduce the size of serialization Strings at the expense of\n\t\tperformance.\n\n\t\tThis value can be changed for individual instances of Serializer by\n\t\tsetting their useCache field.\n\t**/\n\tpublic static var USE_CACHE = false;\n\n\t/**\n\t\tUse constructor indexes for enums instead of names.\n\n\t\tThis may reduce the size of serialization Strings, but makes them less\n\t\tsuited for long-term storage: If constructors are removed or added from\n\t\tthe enum, the indices may no longer match.\n\n\t\tThis value can be changed for individual instances of Serializer by\n\t\tsetting their useEnumIndex field.\n\t**/\n\tpublic static var USE_ENUM_INDEX = false;\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\n\tvar buf : StringBuf;\n\tvar cache : Array<Dynamic>;\n\tvar shash : haxe.ds.StringMap<Int>;\n\tvar scount : Int;\n\n\t/**\n\t\tThe individual cache setting for `this` Serializer instance.\n\n\t\tSee USE_CACHE for a complete description.\n\t**/\n\tpublic var useCache : Bool;\n\n\t/**\n\t\tThe individual enum index setting for `this` Serializer instance.\n\n\t\tSee USE_ENUM_INDEX for a complete description.\n\t**/\n\tpublic var useEnumIndex : Bool;\n\n\t/**\n\t\tCreates a new Serializer instance.\n\n\t\tSubsequent calls to `this.serialize` will append values to the\n\t\tinternal buffer of this String. Once complete, the contents can be\n\t\tretrieved through a call to `this.toString`.\n\n\t\tEach Serializer instance maintains its own cache if this.useCache` is\n\t\ttrue.\n\t**/\n\tpublic function new() {\n\t\tbuf = new StringBuf();\n\t\tcache = new Array();\n\t\tuseCache = USE_CACHE;\n\t\tuseEnumIndex = USE_ENUM_INDEX;\n\t\tshash = new haxe.ds.StringMap();\n\t\tscount = 0;\n\t}\n\n\t/**\n\t\tReturn the String representation of `this` Serializer.\n\n\t\tThe exact format specification can be found here:\n\t\thttp://haxe.org/manual/serialization/format\n\t**/\n\tpublic function toString() {\n\t\treturn buf.toString();\n\t}\n\n\t/* prefixes :\n\t\ta : array\n\t\tb : hash\n\t\tc : class\n\t\td : Float\n\t\te : reserved (float exp)\n\t\tf : false\n\t\tg : object end\n\t\th : array/list/hash end\n\t\ti : Int\n\t\tj : enum (by index)\n\t\tk : NaN\n\t\tl : list\n\t\tm : -Inf\n\t\tn : null\n\t\to : object\n\t\tp : +Inf\n\t\tq : haxe.ds.IntMap\n\t\tr : reference\n\t\ts : bytes (base64)\n\t\tt : true\n\t\tu : array nulls\n\t\tv : date\n\t\tw : enum\n\t\tx : exception\n\t\ty : urlencoded string\n\t\tz : zero\n\t\tM : haxe.ds.ObjectMap\n\t\tC : custom\n\t*/\n\n\tfunction serializeString( s : String ) {\n\t\tvar x = shash.get(s);\n\t\tif( x != null ) {\n\t\t\tbuf.add(\"R\");\n\t\t\tbuf.add(x);\n\t\t\treturn;\n\t\t}\n\t\tshash.set(s,scount++);\n\t\t#if old_serialize\n\t\t\t// no more support for -D old_serialize due to 'j' reuse\n\t\t\t#if error #end\n\t\t#end\n\t\tbuf.add(\"y\");\n\t\ts = StringTools.urlEncode(s);\n\t\tbuf.add(s.length);\n\t\tbuf.add(\":\");\n\t\tbuf.add(s);\n\t}\n\n\tfunction serializeRef(v) {\n\t\t#if js\n\t\tvar vt = untyped __js__(\"typeof\")(v);\n\t\t#end\n\t\tfor( i in 0...cache.length ) {\n\t\t\t#if js\n\t\t\tvar ci = cache[i];\n\t\t\tif( untyped __js__(\"typeof\")(ci) == vt && ci == v ) {\n\t\t\t#else\n\t\t\tif( cache[i] == v ) {\n\t\t\t#end\n\t\t\t\tbuf.add(\"r\");\n\t\t\t\tbuf.add(i);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tcache.push(v);\n\t\treturn false;\n\t}\n\n\t#if flash9\n\t// only the instance variables\n\n\tfunction serializeClassFields(v,c) {\n\t\tvar xml : flash.xml.XML = untyped __global__[\"flash.utils.describeType\"](c);\n\t\tvar vars = xml.factory[0].child(\"variable\");\n\t\tfor( i in 0...vars.length() ) {\n\t\t\tvar f = vars[i].attribute(\"name\").toString();\n\t\t\tif( !v.hasOwnProperty(f) )\n\t\t\t\tcontinue;\n\t\t\tserializeString(f);\n\t\t\tserialize(Reflect.field(v,f));\n\t\t}\n\t\tbuf.add(\"g\");\n\t}\n\t#end\n\n\tfunction serializeFields(v) {\n\t\tfor( f in Reflect.fields(v) ) {\n\t\t\tserializeString(f);\n\t\t\tserialize(Reflect.field(v,f));\n\t\t}\n\t\tbuf.add(\"g\");\n\t}\n\n\t/**\n\t\tSerializes `v`.\n\n\t\tAll haxe-defined values and objects with the exception of functions can\n\t\tbe serialized. Serialization of external/native objects is not\n\t\tguaranteed to work.\n\n\t\tThe values of `this.useCache` and `this.useEnumIndex` may affect\n\t\tserialization output.\n\t**/\n\tpublic function serialize( v : Dynamic ) {\n\t\tswitch( Type.typeof(v) ) {\n\t\tcase TNull:\n\t\t\tbuf.add(\"n\");\n\t\tcase TInt:\n\t\t\tvar v : Int = v;\n\t\t\tif( v == 0 ) {\n\t\t\t\tbuf.add(\"z\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbuf.add(\"i\");\n\t\t\tbuf.add(v);\n\t\tcase TFloat:\n\t\t\tvar v : Float = v;\n\t\t\tif( Math.isNaN(v) )\n\t\t\t\tbuf.add(\"k\");\n\t\t\telse if( !Math.isFinite(v) )\n\t\t\t\tbuf.add(if( v < 0 ) \"m\" else \"p\");\n\t\t\telse {\n\t\t\t\tbuf.add(\"d\");\n\t\t\t\tbuf.add(v);\n\t\t\t}\n\t\tcase TBool:\n\t\t\tbuf.add(if( v ) \"t\" else \"f\");\n\t\tcase TClass(c):\n\t\t\tif( #if neko untyped c.__is_String #else c == String #end ) {\n\t\t\t\tserializeString(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif( useCache && serializeRef(v) )\n\t\t\t\treturn;\n\t\t\tswitch( #if (neko || cs) Type.getClassName(c) #else c #end ) {\n\t\t\tcase #if (neko || cs) \"Array\" #else cast Array #end:\n\t\t\t\tvar ucount = 0;\n\t\t\t\tbuf.add(\"a\");\n\t\t\t\t#if flash9\n\t\t\t\tvar v : Array<Dynamic> = v;\n\t\t\t\t#end\n\t\t\t\tvar l = #if (neko || flash9 || php || cs || java) v.length #elseif cpp v.__length() #else v[untyped \"length\"] #end;\n\t\t\t\tfor( i in 0...l ) {\n\t\t\t\t\tif( v[i] == null )\n\t\t\t\t\t\tucount++;\n\t\t\t\t\telse {\n\t\t\t\t\t\tif( ucount > 0 ) {\n\t\t\t\t\t\t\tif( ucount == 1 )\n\t\t\t\t\t\t\t\tbuf.add(\"n\");\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tbuf.add(\"u\");\n\t\t\t\t\t\t\t\tbuf.add(ucount);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tucount = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tserialize(v[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( ucount > 0 ) {\n\t\t\t\t\tif( ucount == 1 )\n\t\t\t\t\t\tbuf.add(\"n\");\n\t\t\t\t\telse {\n\t\t\t\t\t\tbuf.add(\"u\");\n\t\t\t\t\t\tbuf.add(ucount);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs) \"List\" #else cast List #end:\n\t\t\t\tbuf.add(\"l\");\n\t\t\t\tvar v : List<Dynamic> = v;\n\t\t\t\tfor( i in v )\n\t\t\t\t\tserialize(i);\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs) \"Date\" #else cast Date #end:\n\t\t\t\tvar d : Date = v;\n\t\t\t\tbuf.add(\"v\");\n\t\t\t\tbuf.add(d.toString());\n\t\t\tcase #if (neko || cs) \"haxe.ds.StringMap\" #else cast haxe.ds.StringMap #end:\n\t\t\t\tbuf.add(\"b\");\n\t\t\t\tvar v : haxe.ds.StringMap<Dynamic> = v;\n\t\t\t\tfor( k in v.keys() ) {\n\t\t\t\t\tserializeString(k);\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs) \"haxe.ds.IntMap\" #else cast haxe.ds.IntMap #end:\n\t\t\t\tbuf.add(\"q\");\n\t\t\t\tvar v : haxe.ds.IntMap<Dynamic> = v;\n\t\t\t\tfor( k in v.keys() ) {\n\t\t\t\t\tbuf.add(\":\");\n\t\t\t\t\tbuf.add(k);\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs) \"haxe.ds.ObjectMap\" #else cast haxe.ds.ObjectMap #end:\n\t\t\t\tbuf.add(\"M\");\n\t\t\t\tvar v : haxe.ds.ObjectMap<Dynamic,Dynamic> = v;\n\t\t\t\tfor ( k in v.keys() ) {\n\t\t\t\t\t#if (js || flash8 || neko)\n\t\t\t\t\tvar id = Reflect.field(k, \"__id__\");\n\t\t\t\t\tReflect.deleteField(k, \"__id__\");\n\t\t\t\t\tserialize(k);\n\t\t\t\t\tReflect.setField(k, \"__id__\", id);\n\t\t\t\t\t#else\n\t\t\t\t\tserialize(k);\n\t\t\t\t\t#end\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs) \"haxe.io.Bytes\" #else cast haxe.io.Bytes #end:\n\t\t\t\tvar v : haxe.io.Bytes = v;\n\t\t\t\t#if neko\n\t\t\t\tvar chars = new String(base_encode(v.getData(),untyped BASE64.__s));\n\t\t\t\t#else\n\t\t\t\tvar i = 0;\n\t\t\t\tvar max = v.length - 2;\n\t\t\t\tvar charsBuf = new StringBuf();\n\t\t\t\tvar b64 = BASE64;\n\t\t\t\twhile( i < max ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tvar b2 = v.get(i++);\n\t\t\t\t\tvar b3 = v.get(i++);\n\n\t\t\t\t\tcharsBuf.add(b64.charAt(b1 >> 2));\n\t\t\t\t\tcharsBuf.add(b64.charAt(((b1 << 4) | (b2 >> 4)) & 63));\n\t\t\t\t\tcharsBuf.add(b64.charAt(((b2 << 2) | (b3 >> 6)) & 63));\n\t\t\t\t\tcharsBuf.add(b64.charAt(b3 & 63));\n\t\t\t\t}\n\t\t\t\tif( i == max ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tvar b2 = v.get(i++);\n\t\t\t\t\tcharsBuf.add(b64.charAt(b1 >> 2));\n\t\t\t\t\tcharsBuf.add(b64.charAt(((b1 << 4) | (b2 >> 4)) & 63));\n\t\t\t\t\tcharsBuf.add(b64.charAt((b2 << 2) & 63));\n\t\t\t\t} else if( i == max + 1 ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tcharsBuf.add(b64.charAt(b1 >> 2));\n\t\t\t\t\tcharsBuf.add(b64.charAt((b1 << 4) & 63));\n\t\t\t\t}\n\t\t\t\tvar chars = charsBuf.toString();\n\t\t\t\t#end\n\t\t\t\tbuf.add(\"s\");\n\t\t\t\tbuf.add(chars.length);\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(chars);\n\t\t\tdefault:\n\t\t\t\tif( useCache ) cache.pop();\n\t\t\t\tif( #if flash9 try v.hxSerialize != null catch( e : Dynamic ) false #elseif (cs || java) Reflect.hasField(v, \"hxSerialize\") #else v.hxSerialize != null #end  ) {\n\t\t\t\t\tbuf.add(\"C\");\n\t\t\t\t\tserializeString(Type.getClassName(c));\n\t\t\t\t\tif( useCache ) cache.push(v);\n\t\t\t\t\tv.hxSerialize(this);\n\t\t\t\t\tbuf.add(\"g\");\n\t\t\t\t} else {\n\t\t\t\t\tbuf.add(\"c\");\n\t\t\t\t\tserializeString(Type.getClassName(c));\n\t\t\t\t\tif( useCache ) cache.push(v);\n\t\t\t\t\t#if flash9\n\t\t\t\t\tserializeClassFields(v,c);\n\t\t\t\t\t#else\n\t\t\t\t\tserializeFields(v);\n\t\t\t\t\t#end\n\t\t\t\t}\n\t\t\t}\n\t\tcase TObject:\n\t\t\tif( useCache && serializeRef(v) )\n\t\t\t\treturn;\n\t\t\tbuf.add(\"o\");\n\t\t\tserializeFields(v);\n\t\tcase TEnum(e):\n\t\t\tif( useCache ) {\n\t\t\t\tif( serializeRef(v) )\n\t\t\t\t\treturn;\n\t\t\t\tcache.pop();\n\t\t\t}\n\t\t\tbuf.add(useEnumIndex?\"j\":\"w\");\n\t\t\tserializeString(Type.getEnumName(e));\n\t\t\t#if neko\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.index);\n\t\t\t} else\n\t\t\t\tserializeString(new String(v.tag));\n\t\t\tbuf.add(\":\");\n\t\t\tif( v.args == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tvar l : Int = untyped __dollar__asize(v.args);\n\t\t\t\tbuf.add(l);\n\t\t\t\tfor( i in 0...l )\n\t\t\t\t\tserialize(v.args[i]);\n\t\t\t}\n\t\t\t#elseif flash9\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tvar i : Int = v.index;\n\t\t\t\tbuf.add(i);\n\t\t\t} else\n\t\t\t\tserializeString(v.tag);\n\t\t\tbuf.add(\":\");\n\t\t\tvar pl : Array<Dynamic> = v.params;\n\t\t\tif( pl == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(pl.length);\n\t\t\t\tfor( p in pl )\n\t\t\t\t\tserialize(p);\n\t\t\t}\n\t\t\t#elseif cpp\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.__Index());\n\t\t\t} else\n\t\t\t\tserializeString(v.__Tag());\n\t\t\tbuf.add(\":\");\n\t\t\tvar pl : Array<Dynamic> = v.__EnumParams();\n\t\t\tif( pl == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(pl.length);\n\t\t\t\tfor( p in pl )\n\t\t\t\t\tserialize(p);\n\t\t\t}\n\t\t\t#elseif php\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.index);\n\t\t\t} else\n\t\t\t\tserializeString(v.tag);\n\t\t\tbuf.add(\":\");\n\t\t\tvar l : Int = untyped __call__(\"count\", v.params);\n\t\t\tif( l == 0 || v.params == null)\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(l);\n\t\t\t\tfor( i in 0...l )\n\t\t\t\t\tserialize(untyped __field__(v, __php__(\"params\"), i));\n\t\t\t}\n\t\t\t#elseif (java || cs)\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(Type.enumIndex(v));\n\t\t\t} else\n\t\t\t\tserializeString(Type.enumConstructor(v));\n\t\t\tbuf.add(\":\");\n\t\t\tvar arr:Array<Dynamic> = Type.enumParameters(v);\n\t\t\tif (arr != null)\n\t\t\t{\n\t\t\t\tbuf.add(arr.length);\n\t\t\t\tfor (v in arr)\n\t\t\t\t\tserialize(v);\n\t\t\t} else {\n\t\t\t\tbuf.add(\"0\");\n\t\t\t}\n\n\t\t\t#else\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v[1]);\n\t\t\t} else\n\t\t\t\tserializeString(v[0]);\n\t\t\tbuf.add(\":\");\n\t\t\tvar l = v[untyped \"length\"];\n\t\t\tbuf.add(l - 2);\n\t\t\tfor( i in 2...l )\n\t\t\t\tserialize(v[i]);\n\t\t\t#end\n\t\t\tif( useCache ) cache.push(v);\n\t\tcase TFunction:\n\t\t\tthrow \"Cannot serialize function\";\n\t\tdefault:\n\t\t\t#if neko\n\t\t\tif( untyped (__i32__kind != null && __dollar__iskind(v,__i32__kind)) ) {\n\t\t\t\tbuf.add(\"i\");\n\t\t\t\tbuf.add(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t#end\n\t\t\tthrow \"Cannot serialize \"+Std.string(v);\n\t\t}\n\t}\n\n\tpublic function serializeException( e : Dynamic ) {\n\t\tbuf.add(\"x\");\n\t\t#if flash9\n\t\tif( untyped __is__(e,__global__[\"Error\"]) ) {\n\t\t\tvar e : flash.errors.Error = e;\n\t\t\tvar s = e.getStackTrace();\n\t\t\tif( s == null )\n\t\t\t\tserialize(e.message);\n\t\t\telse\n\t\t\t\tserialize(s);\n\t\t\treturn;\n\t\t}\n\t\t#end\n\t\tserialize(e);\n\t}\n\n\t/**\n\t\tSerializes `v` and returns the String representation.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tSerializer, serialize `v` into it and obtain the result through a call\n\t\tto toString().\n\t**/\n\tpublic static function run( v : Dynamic ) {\n\t\tvar s = new Serializer();\n\t\ts.serialize(v);\n\t\treturn s.toString();\n\t}\n\n\t#if neko\n\tstatic var base_encode = neko.Lib.load(\"std\",\"base_encode\",2);\n\t#end\n\n}\n\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\nprivate enum TemplateExpr {\n\tOpVar( v : String );\n\tOpExpr( expr :  Void -> Dynamic );\n\tOpIf( expr : Void -> Dynamic,  eif : TemplateExpr, eelse : TemplateExpr );\n\tOpStr( str : String );\n\tOpBlock( l : List<TemplateExpr> );\n\tOpForeach( expr : Void -> Dynamic, loop : TemplateExpr );\n\tOpMacro( name : String, params : List<TemplateExpr> );\n}\n\nprivate typedef Token = {\n\tvar s : Bool;\n\tvar p : String;\n\tvar l : Array<String>;\n}\n\nprivate typedef ExprToken = {\n\tvar s : Bool;\n\tvar p : String;\n}\n\n/**\n\tTemplate provides a basic templating mechanism to replace values in a source\n\tString, and to have some basic logic.\n\n\tA complete documentation of the supported syntax is available at:\n\thttp://haxe.org/doc/cross/template\n**/\nclass Template {\n\n\tstatic var splitter = ~/(::[A-Za-z0-9_ ()&|!+=\\/><*.\"-]+::|\\$\\$([A-Za-z0-9_-]+)\\()/;\n\tstatic var expr_splitter = ~/(\\(|\\)|[ \\r\\n\\t]*\"[^\"]*\"[ \\r\\n\\t]*|[!+=\\/><*.&|-]+)/;\n\tstatic var expr_trim = ~/^[ ]*([^ ]+)[ ]*$/;\n\tstatic var expr_int = ~/^[0-9]+$/;\n\tstatic var expr_float = ~/^([+-]?)(?=\\d|,\\d)\\d*(,\\d*)?([Ee]([+-]?\\d+))?$/;\n\n\t/**\n\t\tGlobal replacements which are used across all Template instances. This\n\t\thas lower priority than the context argument of execute().\n\t**/\n\tpublic static var globals : Dynamic = {};\n\n\tvar expr : TemplateExpr;\n\tvar context : Dynamic;\n\tvar macros : Dynamic;\n\tvar stack : List<Dynamic>;\n\tvar buf : StringBuf;\n\n\t/**\n\t\tCreates a new Template instance from `str`.\n\n\t\t`str` is parsed into tokens, which are stored for internal use. This\n\t\tmeans that multiple execute() operations on a single Template instance\n\t\tare more efficient than one execute() operations on multiple Template\n\t\tinstances.\n\n\t\tIf `str` is null, the result is unspecified.\n\t**/\n\tpublic function new( str : String ) {\n\t\tvar tokens = parseTokens(str);\n\t\texpr = parseBlock(tokens);\n\t\tif( !tokens.isEmpty() )\n\t\t\tthrow \"Unexpected '\"+tokens.first().s+\"'\";\n\t}\n\n\t/**\n\t\tExecutes `this` Template, taking into account `context` for\n\t\treplacements and `macros` for callback functions.\n\n\t\tIf `context` has a field 'name', its value replaces all occurrences of\n\t\t::name:: in the Template. Otherwise Template.globals is checked instead,\n\t\tIf 'name' is not a field of that either, ::name:: is replaced with null.\n\n\t\tIf `macros` has a field 'name', all occurrences of $$name(args) are\n\t\treplaced with the result of calling that field. The first argument is\n\t\talways the resolve() method, followed by the given arguments.\n\t\tIf `macros` has no such field, the result is unspecified.\n\n\t\tIf `context` is null, the result is unspecified. If `macros` is null,\n\t\tno macros are used.\n\t**/\n\tpublic function execute( context : Dynamic, ?macros : Dynamic ):String {\n\t\tthis.macros = if( macros == null ) {} else macros;\n\t\tthis.context = context;\n\t\tstack = new List();\n\t\tbuf = new StringBuf();\n\t\trun(expr);\n\t\treturn buf.toString();\n\t}\n\n\tfunction resolve( v : String ) : Dynamic {\n\t\tif( Reflect.hasField(context,v) )\n\t\t\treturn Reflect.field(context,v);\n\t\tfor( ctx in stack )\n\t\t\tif( Reflect.hasField(ctx,v) )\n\t\t\t\treturn Reflect.field(ctx,v);\n\t\tif( v == \"__current__\" )\n\t\t\treturn context;\n\t\treturn Reflect.field(globals,v);\n\t}\n\n\tfunction parseTokens( data : String ) {\n\t\tvar tokens = new List<Token>();\n\t\twhile( splitter.match(data) ) {\n\t\t\tvar p = splitter.matchedPos();\n\t\t\tif( p.pos > 0 )\n\t\t\t\ttokens.add({ p : data.substr(0,p.pos), s : true, l : null });\n\n\t\t\t// : ?\n\t\t\tif( data.charCodeAt(p.pos) == 58 ) {\n\t\t\t\ttokens.add({ p : data.substr(p.pos + 2,p.len - 4), s : false, l : null });\n\t\t\t\tdata = splitter.matchedRight();\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// macro parse\n\t\t\tvar parp = p.pos + p.len;\n\t\t\tvar npar = 1;\n\t\t\tvar params = [];\n\t\t\tvar part = \"\";\n\t\t\twhile( true ) {\n\t\t\t\tvar c = data.charCodeAt(parp);\n\t\t\t\tparp++;\n\t\t\t\tif( c == 40 ) {\n\t\t\t\t\tnpar++;\n\t\t\t\t} else if( c == 41 ) {\n\t\t\t\t\tnpar--;\n\t\t\t\t\tif (npar <= 0) break;\n\t\t\t\t} else if( c == null ){\n\t\t\t\t\tthrow \"Unclosed macro parenthesis\";\n\t\t\t\t}\n\t\t\t\tif ( c == 44 && npar == 1) {\n\t\t\t\t\tparams.push(part);\n\t\t\t\t\tpart = \"\";\n\t\t\t\t} else {\n\t\t\t\t\tpart += String.fromCharCode(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\tparams.push(part);\n\t\t\ttokens.add({ p : splitter.matched(2), s : false, l : params });\n\t\t\tdata = data.substr(parp,data.length - parp);\n\t\t}\n\t\tif( data.length > 0 )\n\t\t\ttokens.add({ p : data, s : true, l : null });\n\t\treturn tokens;\n\t}\n\n\tfunction parseBlock( tokens : List<Token> ) {\n\t\tvar l = new List();\n\t\twhile( true ) {\n\t\t\tvar t = tokens.first();\n\t\t\tif( t == null )\n\t\t\t\tbreak;\n\t\t\tif( !t.s && (t.p == \"end\" || t.p == \"else\" || t.p.substr(0,7) == \"elseif \") )\n\t\t\t\tbreak;\n\t\t\tl.add(parse(tokens));\n\t\t}\n\t\tif( l.length == 1 )\n\t\t\treturn l.first();\n\t\treturn OpBlock(l);\n\t}\n\n\tfunction parse( tokens : List<Token> ) {\n\t\tvar t = tokens.pop();\n\t\tvar p = t.p;\n\t\tif( t.s )\n\t\t\treturn OpStr(p);\n\t\t// macro\n\t\tif( t.l != null ) {\n\t\t\tvar pe = new List();\n\t\t\tfor( p in t.l )\n\t\t\t\tpe.add(parseBlock(parseTokens(p)));\n\t\t\treturn OpMacro(p,pe);\n\t\t}\n\t\t// 'end' , 'else', 'elseif' can't be found here\n\t\tif( p.substr(0,3) == \"if \" ) {\n\t\t\tp = p.substr(3,p.length - 3);\n\t\t\tvar e = parseExpr(p);\n\t\t\tvar eif = parseBlock(tokens);\n\t\t\tvar t = tokens.first();\n\t\t\tvar eelse;\n\t\t\tif( t == null )\n\t\t\t\tthrow \"Unclosed 'if'\";\n\t\t\tif( t.p == \"end\" ) {\n\t\t\t\ttokens.pop();\n\t\t\t\teelse = null;\n\t\t\t} else if( t.p == \"else\" ) {\n\t\t\t\ttokens.pop();\n\t\t\t\teelse = parseBlock(tokens);\n\t\t\t\tt = tokens.pop();\n\t\t\t\tif( t == null || t.p != \"end\" )\n\t\t\t\t\tthrow \"Unclosed 'else'\";\n\t\t\t} else { // elseif\n\t\t\t\tt.p = t.p.substr(4,t.p.length - 4);\n\t\t\t\teelse = parse(tokens);\n\t\t\t}\n\t\t\treturn OpIf(e,eif,eelse);\n\t\t}\n\t\tif( p.substr(0,8) == \"foreach \" ) {\n\t\t\tp = p.substr(8,p.length - 8);\n\t\t\tvar e = parseExpr(p);\n\t\t\tvar efor = parseBlock(tokens);\n\t\t\tvar t = tokens.pop();\n\t\t\tif( t == null || t.p != \"end\" )\n\t\t\t\tthrow \"Unclosed 'foreach'\";\n\t\t\treturn OpForeach(e,efor);\n\t\t}\n\t\tif( expr_splitter.match(p) )\n\t\t\treturn OpExpr(parseExpr(p));\n\t\treturn OpVar(p);\n\t}\n\n\tfunction parseExpr( data : String ) {\n\t\tvar l = new List<ExprToken>();\n\t\tvar expr = data;\n\t\twhile( expr_splitter.match(data) ) {\n\t\t\tvar p = expr_splitter.matchedPos();\n\t\t\tvar k = p.pos + p.len;\n\t\t\tif( p.pos != 0 )\n\t\t\t\tl.add({ p : data.substr(0,p.pos), s : true });\n\t\t\tvar p = expr_splitter.matched(0);\n\t\t\tl.add({ p : p, s : p.indexOf('\"') >= 0 });\n\t\t\tdata = expr_splitter.matchedRight();\n\t\t}\n\t\tif( data.length != 0 )\n\t\t\tl.add({ p : data, s : true });\n\t\tvar e:Void->Dynamic;\n\t\ttry {\n\t\t\te = makeExpr(l);\n\t\t\tif( !l.isEmpty() )\n\t\t\t\tthrow l.first().p;\n\t\t} catch( s : String ) {\n\t\t\tthrow \"Unexpected '\"+s+\"' in \"+expr;\n\t\t}\n\t\treturn function() {\n\t\t\ttry {\n\t\t\t\treturn e();\n\t\t\t} catch( exc : Dynamic ) {\n\t\t\t\tthrow \"Error : \"+Std.string(exc)+\" in \"+expr;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeConst( v : String ) : Void -> Dynamic {\n\t\texpr_trim.match(v);\n\t\tv = expr_trim.matched(1);\n\t\tif( v.charCodeAt(0) == 34 ) {\n\t\t\tvar str = v.substr(1,v.length-2);\n\t\t\treturn function() return str;\n\t\t}\n\t\tif( expr_int.match(v) ) {\n\t\t\tvar i = Std.parseInt(v);\n\t\t\treturn function() { return i; };\n\t\t}\n\t\tif( expr_float.match(v) ) {\n\t\t\tvar f = Std.parseFloat(v);\n\t\t\treturn function() { return f; };\n\t\t}\n\t\tvar me = this;\n\t\treturn function() { return me.resolve(v); };\n\t}\n\n\tfunction makePath( e : Void -> Dynamic, l : List<ExprToken> ) {\n\t\tvar p = l.first();\n\t\tif( p == null || p.p != \".\" )\n\t\t\treturn e;\n\t\tl.pop();\n\t\tvar field = l.pop();\n\t\tif( field == null || !field.s )\n\t\t\tthrow field.p;\n\t\tvar f = field.p;\n\t\texpr_trim.match(f);\n\t\tf = expr_trim.matched(1);\n\t\treturn makePath(function() { return Reflect.field(e(),f); },l);\n\t}\n\n\tfunction makeExpr( l ) {\n\t\treturn makePath(makeExpr2(l),l);\n\t}\n\n\tfunction makeExpr2( l : List<ExprToken> ) : Void -> Dynamic {\n\t\tvar p = l.pop();\n\t\tif( p == null )\n\t\t\tthrow \"<eof>\";\n\t\tif( p.s )\n\t\t\treturn makeConst(p.p);\n\t\tswitch( p.p ) {\n\t\tcase \"(\":\n\t\t\tvar e1:Dynamic = makeExpr(l);\n\t\t\tvar p = l.pop();\n\t\t\tif( p == null || p.s )\n\t\t\t\tthrow p.p;\n\t\t\tif( p.p == \")\" )\n\t\t\t\treturn e1;\n\t\t\tvar e2:Dynamic = makeExpr(l);\n\t\t\tvar p2 = l.pop();\n\t\t\tif( p2 == null || p2.p != \")\" )\n\t\t\t\tthrow p2.p;\n\t\t\treturn switch( p.p ) {\n\t\t\tcase \"+\": function() { return cast e1() + e2(); };\n\t\t\tcase \"-\": function() { return cast e1() - e2(); };\n\t\t\tcase \"*\": function() { return cast e1() * e2(); };\n\t\t\tcase \"/\": function() { return cast e1() / e2(); };\n\t\t\tcase \">\": function() { return cast e1() > e2(); };\n\t\t\tcase \"<\": function() { return cast e1() < e2(); };\n\t\t\tcase \">=\": function() { return cast e1() >= e2(); };\n\t\t\tcase \"<=\": function() { return cast e1() <= e2(); };\n\t\t\tcase \"==\": function() { return cast e1() == e2(); };\n\t\t\tcase \"!=\": function() { return cast e1() != e2(); };\n\t\t\tcase \"&&\": function() { return cast e1() && e2(); };\n\t\t\tcase \"||\": function() { return cast e1() || e2(); };\n\t\t\tdefault: throw \"Unknown operation \"+p.p;\n\t\t\t}\n\t\tcase \"!\":\n\t\t\tvar e : Void->Dynamic = makeExpr(l);\n\t\t\treturn function() {\n\t\t\t\tvar v : Dynamic = e();\n\t\t\t\treturn (v == null || v == false);\n\t\t\t};\n\t\tcase \"-\":\n\t\t\tvar e = makeExpr(l);\n\t\t\treturn function() { return -e(); };\n\t\t}\n\t\tthrow p.p;\n\t}\n\n\tfunction run( e : TemplateExpr ) {\n\t\tswitch( e ) {\n\t\tcase OpVar(v):\n\t\t\tbuf.add(Std.string(resolve(v)));\n\t\tcase OpExpr(e):\n\t\t\tbuf.add(Std.string(e()));\n\t\tcase OpIf(e,eif,eelse):\n\t\t\tvar v : Dynamic = e();\n\t\t\tif( v == null || v == false ) {\n\t\t\t\tif( eelse != null ) run(eelse);\n\t\t\t} else\n\t\t\t\trun(eif);\n\t\tcase OpStr(str):\n\t\t\tbuf.add(str);\n\t\tcase OpBlock(l):\n\t\t\tfor( e in l )\n\t\t\t\trun(e);\n\t\tcase OpForeach(e,loop):\n\t\t\tvar v : Dynamic = e();\n\t\t\ttry {\n\t\t\t\tvar x : Dynamic = v.iterator();\n\t\t\t\tif( x.hasNext == null ) throw null;\n\t\t\t\tv = x;\n\t\t\t} catch( e : Dynamic ) try {\n\t\t\t\tif( v.hasNext == null ) throw null;\n\t\t\t} catch( e : Dynamic ) {\n\t\t\t\tthrow \"Cannot iter on \" + v;\n\t\t\t}\n\t\t\tstack.push(context);\n\t\t\tvar v : Iterator<Dynamic> = v;\n\t\t\tfor( ctx in v ) {\n\t\t\t\tcontext = ctx;\n\t\t\t\trun(loop);\n\t\t\t}\n\t\t\tcontext = stack.pop();\n\t\tcase OpMacro(m,params):\n\t\t\tvar v : Dynamic = Reflect.field(macros,m);\n\t\t\tvar pl = new Array<Dynamic>();\n\t\t\tvar old = buf;\n\t\t\tpl.push(resolve);\n\t\t\tfor( p in params ) {\n\t\t\t\tswitch( p ) {\n\t\t\t\tcase OpVar(v): pl.push(resolve(v));\n\t\t\t\tdefault:\n\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\trun(p);\n\t\t\t\t\tpl.push(buf.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf = old;\n\t\t\ttry {\n\t\t\t\tbuf.add(Std.string(Reflect.callMethod(macros,v,pl)));\n\t\t\t} catch( e : Dynamic ) {\n\t\t\t\tvar plstr = try pl.join(\",\") catch( e : Dynamic ) \"???\";\n\t\t\t\tvar msg = \"Macro call \"+m+\"(\"+plstr+\") failed (\"+Std.string(e)+\")\";\n\t\t\t\t#if neko\n\t\t\t\tneko.Lib.rethrow(msg);\n\t\t\t\t#else\n\t\t\t\tthrow msg;\n\t\t\t\t#end\n\t\t\t}\n\t\t}\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\t#if (flash || js || java)\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this].run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash9\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif flash\n\t\t\tvar me = this;\n\t\t\tid = untyped _global[\"setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash9\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif flash\n\t\t\t\tuntyped _global[\"clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\ttimer.cancel();\n\t\t\ttimer = null;\n\t\t\ttask = null;\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t#end\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn Date.now().getTime() / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n@:noDoc\ntypedef TypeResolver = {\n\tfunction resolveClass( name : String ) : Class<Dynamic>;\n\tfunction resolveEnum( name : String ) : Enum<Dynamic>;\n}\n\n/**\n\tThe Unserializer class is the complement to the Serializer class. It parses\n\ta serialization String and creates objects from the contained data.\n\n\tThis class can be used in two ways:\n\n\t- create a new Unserializer() instance with a given serialization\n\t\tString, then call its unserialize() method until all values are\n\t\textracted\n\t- call Unserializer.run() to unserialize a single value from a given\n\t\tString\n**/\nclass Unserializer {\n\n\t/**\n\t\tThis value can be set to use custom type resolvers.\n\n\t\tA type resolver finds a Class or Enum instance from a given String. By\n\t\tdefault, the haxe Type Api is used.\n\n\t\tA type resolver must provide two methods:\n\n\t\t1. resolveClass(name:String):Class<Dynamic> is called to determine a\n\t\t\t\tClass from a class name\n\t\t2. resolveEnum(name:String):Enum<Dynamic> is called to determine an\n\t\t\t\tEnum from an enum name\n\n\t\tThis value is applied when a new Unserializer instance is created.\n\t\tChanging it afterwards has no effect on previously created instances.\n\t**/\n\tpublic static var DEFAULT_RESOLVER : TypeResolver = Type;\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\n\t#if !neko\n\tstatic var CODES = null;\n\n\tstatic function initCodes() {\n\t\tvar codes =\n\t\t\t#if flash9\n\t\t\t\tnew flash.utils.ByteArray();\n\t\t\t#else\n\t\t\t\tnew Array();\n\t\t\t#end\n\t\tfor( i in 0...BASE64.length )\n\t\t\tcodes[StringTools.fastCodeAt(BASE64,i)] = i;\n\t\treturn codes;\n\t}\n\t#end\n\n \tvar buf : String;\n \tvar pos : Int;\n \tvar length : Int;\n \tvar cache : Array<Dynamic>;\n \tvar scache : Array<String>;\n \tvar resolver : TypeResolver;\n \t#if neko\n \tvar upos : Int;\n \t#end\n\n\t/**\n\t\tCreates a new Unserializer instance, with its internal buffer\n\t\tinitialized to `buf`.\n\n\t\tThis does not parse `buf` immediately. It is parsed only when calls to\n\t\t`this.unserialize` are made.\n\n\t\tEach Unserializer instance maintains its own cache.\n\t**/\n \tpublic function new( buf : String ) {\n \t\tthis.buf = buf;\n \t\tlength = buf.length;\n \t\tpos = 0;\n \t\t#if neko\n \t\tupos = 0;\n \t\t#end\n \t\tscache = new Array();\n \t\tcache = new Array();\n\t\tvar r = DEFAULT_RESOLVER;\n\t\tif( r == null ) {\n\t\t\tr = Type;\n\t\t\tDEFAULT_RESOLVER = r;\n\t\t}\n \t\tsetResolver(r);\n \t}\n\n\t/**\n\t\tSets the type resolver of `this` Unserializer instance to `r`.\n\n\t\tIf `r` is null, a special resolver is used which returns null for all\n\t\tinput values.\n\n\t\tSee DEFAULT_RESOLVER for more information on type resolvers.\n\t**/\n \tpublic function setResolver( r ) {\n\t\tif( r == null )\n\t\t\tresolver = {\n\t\t\t\tresolveClass : function(_) { return null; },\n\t\t\t\tresolveEnum : function(_) { return null; }\n\t\t\t};\n\t\telse\n\t\t\tresolver = r;\n\t}\n\n\t/**\n\t\tGets the type resolver of `this` Unserializer instance.\n\n\t\tSee DEFAULT_RESOLVER for more information on type resolvers.\n\t**/\n \tpublic function getResolver() {\n\t\treturn resolver;\n\t}\n\n\tinline function get(p) : Int {\n\t\treturn StringTools.fastCodeAt(buf, p);\n\t}\n\n \tfunction readDigits() {\n \t\tvar k = 0;\n \t\tvar s = false;\n \t\tvar fpos = pos;\n \t\twhile( true ) {\n \t\t\tvar c = get(pos);\n\t\t\tif( StringTools.isEof(c) )\n\t\t\t\tbreak;\n \t\t\tif( c == \"-\".code ) {\n \t\t\t\tif( pos != fpos )\n \t\t\t\t\tbreak;\n \t\t\t\ts = true;\n \t\t\t\tpos++;\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\tif( c < \"0\".code || c > \"9\".code )\n \t\t\t\tbreak;\n \t\t\tk = k * 10 + (c - \"0\".code);\n \t\t\tpos++;\n \t\t}\n \t\tif( s )\n \t\t\tk *= -1;\n \t\treturn k;\n \t}\n\n\tfunction unserializeObject(o) {\n \t\twhile( true ) {\n \t\t\tif( pos >= length )\n \t\t\t\tthrow \"Invalid object\";\n \t\t\tif( get(pos) == \"g\".code )\n \t\t\t\tbreak;\n \t\t\tvar k = unserialize();\n \t\t\tif( !Std.is(k,String) )\n \t\t\t\tthrow \"Invalid object key\";\n \t\t\tvar v = unserialize();\n \t\t\tReflect.setField(o,k,v);\n \t\t}\n \t\tpos++;\n\t}\n\n\tfunction unserializeEnum( edecl, tag ) {\n\t\tif( get(pos++) != \":\".code )\n\t\t\tthrow \"Invalid enum format\";\n\t\tvar nargs = readDigits();\n\t\tif( nargs == 0 )\n\t\t\treturn Type.createEnum(edecl,tag);\n\t\tvar args = new Array();\n\t\twhile( nargs-- > 0 )\n\t\t\targs.push(unserialize());\n\t\treturn Type.createEnum(edecl,tag,args);\n\t}\n\n\t/**\n\t\tUnserializes the next part of `this` Unserializer instance and returns\n\t\tthe according value.\n\n\t\tThis function may call `this.resolver.resolveClass` to determine a\n\t\tClass from a String, and `this.resolver.resolveEnum` to determine an\n\t\tEnum from a String.\n\n\t\tIf `this` Unserializer instance contains no more or invalid data, an\n\t\texception is thrown.\n\n\t\tThis operation may fail on structurally valid data if a type cannot be\n\t\tresolved or if a field cannot be set. This can happen when unserializing\n\t\tStrings that were serialized on a different haxe target, in which the\n\t\tserialization side has to make sure not to include platform-specific\n\t\tdata.\n\n\t\tClasses are created from Type.createEmptyInstance, which means their\n\t\tconstructors are not called.\n\t**/\n \tpublic function unserialize() : Dynamic {\n \t\tswitch( get(pos++) ) {\n \t\tcase \"n\".code:\n \t\t\treturn null;\n \t\tcase \"t\".code:\n \t\t\treturn true;\n \t\tcase \"f\".code:\n \t\t\treturn false;\n \t\tcase \"z\".code:\n \t\t\treturn 0;\n \t\tcase \"i\".code:\n \t\t\treturn readDigits();\n \t\tcase \"d\".code:\n \t\t\tvar p1 = pos;\n \t\t\twhile( true ) {\n \t\t\t\tvar c = get(pos);\n \t\t\t\t// + - . , 0-9\n \t\t\t\tif( (c >= 43 && c < 58) || c == \"e\".code || c == \"E\".code )\n \t\t\t\t\tpos++;\n \t\t\t\telse\n \t\t\t\t\tbreak;\n \t\t\t}\n \t\t\treturn Std.parseFloat(buf.substr(p1,pos-p1));\n\t\tcase \"y\".code:\n \t\t\tvar len = readDigits();\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n \t\t\t\tthrow \"Invalid string length\";\n\t\t\tvar s = buf.substr(pos,len);\n\t\t\tpos += len;\n\t\t\ts = StringTools.urlDecode(s);\n\t\t\tscache.push(s);\n\t\t\treturn s;\n \t\tcase \"k\".code:\n \t\t\treturn Math.NaN;\n \t\tcase \"m\".code:\n \t\t\treturn Math.NEGATIVE_INFINITY;\n \t\tcase \"p\".code:\n \t\t\treturn Math.POSITIVE_INFINITY;\n \t\tcase \"a\".code:\n\t\t\tvar buf = buf;\n \t\t\tvar a = new Array<Dynamic>();\n \t\t\tcache.push(a);\n \t\t\twhile( true ) {\n \t\t\t\tvar c = get(pos);\n \t\t\t\tif( c == \"h\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tbreak;\n\t\t\t\t}\n \t\t\t\tif( c == \"u\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tvar n = readDigits();\n \t\t\t\t\ta[a.length+n-1] = null;\n \t\t\t\t} else\n \t\t\t\t\ta.push(unserialize());\n \t\t\t}\n \t\t\treturn a;\n \t\tcase \"o\".code:\n\t \t\tvar o = {};\n\t \t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n \t\tcase \"r\".code:\n \t\t\tvar n = readDigits();\n \t\t\tif( n < 0 || n >= cache.length )\n \t\t\t\tthrow \"Invalid reference\";\n \t\t\treturn cache[n];\n \t\tcase \"R\".code:\n\t\t\tvar n = readDigits();\n\t\t\tif( n < 0 || n >= scache.length )\n\t\t\t\tthrow \"Invalid string reference\";\n\t\t\treturn scache[n];\n \t\tcase \"x\".code:\n\t\t\tthrow unserialize();\n\t\tcase \"c\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n\t\tcase \"w\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tvar e = unserializeEnum(edecl, unserialize());\n\t\t\tcache.push(e);\n\t\t\treturn e;\n \t\tcase \"j\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tpos++; /* skip ':' */\n\t\t\tvar index = readDigits();\n\t\t\tvar tag = Type.getEnumConstructs(edecl)[index];\n\t\t\tif( tag == null )\n\t\t\t\tthrow \"Unknown enum index \"+name+\"@\"+index;\n\t\t\tvar e = unserializeEnum(edecl, tag);\n\t\t\tcache.push(e);\n\t\t\treturn e;\n\t\tcase \"l\".code:\n\t\t\tvar l = new List();\n\t\t\tcache.push(l);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code )\n\t\t\t\tl.add(unserialize());\n\t\t\tpos++;\n\t\t\treturn l;\n\t\tcase \"b\".code:\n\t\t\tvar h = new haxe.ds.StringMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"q\".code:\n\t\t\tvar h = new haxe.ds.IntMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\tvar c = get(pos++);\n\t\t\twhile( c == \":\".code ) {\n\t\t\t\tvar i = readDigits();\n\t\t\t\th.set(i,unserialize());\n\t\t\t\tc = get(pos++);\n\t\t\t}\n\t\t\tif( c != \"h\".code )\n\t\t\t\tthrow \"Invalid IntMap format\";\n\t\t\treturn h;\n\t\tcase \"M\".code:\n\t\t\tvar h = new haxe.ds.ObjectMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"v\".code:\n\t\t\tvar d = Date.fromString(buf.substr(pos,19));\n\t\t\tcache.push(d);\n\t\t\tpos += 19;\n\t\t\treturn d;\n \t\tcase \"s\".code:\n \t\t\tvar len = readDigits();\n\t\t\tvar buf = buf;\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n\t\t\t\tthrow \"Invalid bytes length\";\n\t\t\t#if neko\n\t\t\tvar bytes = haxe.io.Bytes.ofData( base_decode(untyped buf.substr(pos,len).__s,untyped BASE64.__s) );\n\t\t\t#else\n\t\t\tvar codes = CODES;\n\t\t\tif( codes == null ) {\n\t\t\t\tcodes = initCodes();\n\t\t\t\tCODES = codes;\n\t\t\t}\n\t\t\tvar i = pos;\n\t\t\tvar rest = len & 3;\n\t\t\tvar size = (len >> 2) * 3 + ((rest >= 2) ? rest - 1 : 0);\n\t\t\tvar max = i + (len - rest);\n\t\t\tvar bytes = haxe.io.Bytes.alloc(size);\n\t\t\tvar bpos = 0;\n\t\t\twhile( i < max ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\tvar c4 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c3 << 6) | c4);\n\t\t\t}\n\t\t\tif( rest >= 2 ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tif( rest == 3 ) {\n\t\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\t}\n\t\t\t}\n \t\t\t#end\n\t\t\tpos += len;\n\t\t\tcache.push(bytes);\n\t\t\treturn bytes;\n\t\tcase \"C\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o : Dynamic = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\to.hxUnserialize(this);\n\t\t\tif( get(pos++) != \"g\".code )\n\t\t\t\tthrow \"Invalid custom data\";\n\t\t\treturn o;\n \t\tdefault:\n \t\t}\n \t\tpos--;\n \t\tthrow (\"Invalid char \"+buf.charAt(pos)+\" at position \"+pos);\n \t}\n\n\t/**\n\t\tUnserializes `v` and returns the according value.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tUnserializer with `v` as buffer and calling its unserialize() method\n\t\tonce.\n\t**/\n\tpublic static function run( v : String ) : Dynamic {\n\t\treturn new Unserializer(v).unserialize();\n\t}\n\n\t#if neko\n\tstatic var base_decode = neko.Lib.load(\"std\",\"base_decode\",2);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tSince all platforms does not guarantee that String always uses UTF-8 encoding, you\n\tcan use this crossplatform API to perform operations on such strings.\n**/\nclass Utf8 {\n\n\tvar __b : String;\n\n\t/**\n\t\tAllocate a new Utf8 buffer using an optional bytes size.\n\t**/\n\tpublic function new( ?size : Int ) {\n\t\t__b = \"\";\n\t}\n\n\t/**\n\t\tAdd the given UTF8 character code to the buffer.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\t__b += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tReturns the buffer converted to a String;\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn __b;\n\t}\n\n\t/**\n\t\tCall the `chars` function for each UTF8 char of the string.\n\t**/\n\tpublic static function iter( s : String, chars : Int -> Void ) {\n\t\tfor( i in 0...s.length )\n\t\t\tchars(s.charCodeAt(i));\n\t}\n\n\t/**\n\t\tEncode the input ISO string into the corresponding UTF8 one.\n\t**/\n\tpublic static function encode( s : String ) : String {\n\t\tthrow \"Not implemented\";\n\t\treturn s;\n\t}\n\n\t/**\n\t\tDecode an UTF8 string back to an ISO string.\n\t\tThrow an exception if a given UTF8 character is not supported by the decoder.\n\t**/\n\tpublic static function decode( s : String ) : String {\n\t\tthrow \"Not implemented\";\n\t\treturn s;\n\t}\n\n\t/**\n\t\tSimilar to `String.charCodeAt` but uses the UTF8 character position.\n\t**/\n\tpublic static inline function charCodeAt( s : String, index : Int ) : Int {\n\t\treturn s.charCodeAt(index);\n\t}\n\n\t/**\n\t\tTells if the String is correctly encoded as UTF8.\n\t**/\n\tpublic static inline function validate( s : String ) : Bool {\n\t\treturn true;\n\t}\n\n\t/**\n\t\tReturns the number of UTF8 chars of the String.\n\t**/\n\t#if js @:extern #end\n\tpublic static inline function length( s : String ) : Int {\n\t\treturn s.length;\n\t}\n\n\t/**\n\t\tCompare two UTF8 strings, character by character.\n\t**/\n\tpublic static function compare( a : String, b : String ) : Int {\n\t\treturn a > b ? 1 : (a == b ? 0 : -1);\n\t}\n\n\t/**\n\t\tThis is similar to `String.substr` but the `pos` and `len` parts are considering UTF8 characters.\n\t**/\n\tpublic static inline function sub( s : String, pos : Int, len : Int ) : String {\n\t\treturn s.substr(pos,len);\n\t}\n\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n#if cpp\nusing cpp.NativeArray;\n#end\n\nclass Bytes {\n\n\tpublic var length(default,null) : Int;\n\tvar b : BytesData;\n\n\tfunction new(length,b) {\n\t\tthis.length = length;\n\t\tthis.b = b;\n\t\t#if flash9\n\t\tb.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t#end\n\t}\n\n\tpublic inline function get( pos : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(b,pos);\n\t\t#elseif flash9\n\t\treturn b[pos];\n\t\t#elseif php\n\t\treturn untyped __call__(\"ord\", b[pos]);\n\t\t#elseif cpp\n\t\treturn untyped b[pos];\n\t\t#elseif java\n\t\treturn untyped b[pos] & 0xFF;\n\t\t#else\n\t\treturn b[pos];\n\t\t#end\n\t}\n\n\tpublic inline function set( pos : Int, v : Int ) : Void {\n\t\t#if neko\n\t\tuntyped __dollar__sset(b,pos,v);\n\t\t#elseif flash9\n\t\tb[pos] = v;\n\t\t#elseif php\n\t\tb[pos] = untyped __call__(\"chr\", v);\n\t\t#elseif cpp\n\t\tuntyped b[pos] = v;\n\t\t#elseif java\n\t\tb[pos] = cast v;\n\t\t#elseif cs\n\t\tb[pos] = cast v;\n\t\t#else\n\t\tb[pos] = v & 0xFF;\n\t\t#end\n\t}\n\n\tpublic function blit( pos : Int, src : Bytes, srcpos : Int, len : Int ) : Void {\n\t\t#if !neko\n\t\tif( pos < 0 || srcpos < 0 || len < 0 || pos + len > length || srcpos + len > src.length ) throw Error.OutsideBounds;\n\t\t#end\n\t\t#if neko\n\t\ttry untyped __dollar__sblit(b,pos,src.b,srcpos,len) catch( e : Dynamic ) throw Error.OutsideBounds;\n\t\t#elseif php\n\t\tb = untyped __php__(\"substr($this->b, 0, $pos) . substr($src->b, $srcpos, $len) . substr($this->b, $pos+$len)\"); //__call__(\"substr\", b, 0, pos)+__call__(\"substr\", src.b, srcpos, len)+__call__(\"substr\", b, pos+len);\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\tif( len > 0 ) b.writeBytes(src.b,srcpos,len);\n\t\t#elseif java\n\t\tjava.lang.System.arraycopy(src.b, srcpos, b, pos, len);\n\t\t#elseif cs\n\t\tcs.system.Array.Copy(src.b, srcpos, b, pos, len);\n\t\t#elseif cpp\n\t\tb.blit(pos, src.b, srcpos, len);\n\t\t#else\n\t\tvar b1 = b;\n\t\tvar b2 = src.b;\n\t\tif( b1 == b2 && pos > srcpos ) {\n\t\t\tvar i = len;\n\t\t\twhile( i > 0 ) {\n\t\t\t\ti--;\n\t\t\t\tb1[i + pos] = b2[i + srcpos];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tfor( i in 0...len )\n\t\t\tb1[i+pos] = b2[i+srcpos];\n\t\t#end\n\t}\n\n\tpublic function fill( pos : Int, len : Int, value : Int ) {\n\t\t#if flash9\n\t\tvar v4 = value&0xFF;\n\t\tv4 |= v4<<8;\n\t\tv4 |= v4<<16;\n\t\tb.position = pos;\n\t\tfor( i in 0...len>>2 )\n\t\t\tb.writeUnsignedInt(v4);\n\t\tpos += len&~3;\n\t\tfor( i in 0...len&3 )\n\t\t\tset(pos++,value);\n\t\t#elseif cpp\n\t\tuntyped __global__.__hxcpp_memory_memset(b,pos,len,value);\n\t\t#else\n\t\tfor( i in 0...len )\n\t\t\tset(pos++, value);\n\t\t#end\n\t}\n\n\tpublic function sub( pos : Int, len : Int ) : Bytes {\n\t\t#if !neko\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\t#end\n\t\t#if neko\n\t\treturn try new Bytes(len,untyped __dollar__ssub(b,pos,len)) catch( e : Dynamic ) throw Error.OutsideBounds;\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\tvar b2 = new flash.utils.ByteArray();\n\t\tb.readBytes(b2,0,len);\n\t\treturn new Bytes(len,b2);\n\t\t#elseif php\n\t\treturn new Bytes(len, untyped __call__(\"substr\", b, pos, len));\n\t\t#elseif java\n\t\tvar newarr = new java.NativeArray(len);\n\t\tjava.lang.System.arraycopy(b, pos, newarr, 0, len);\n\t\treturn new Bytes(len, newarr);\n\t\t#elseif cs\n\t\tvar newarr = new cs.NativeArray(len);\n\t\tcs.system.Array.Copy(b, pos, newarr, 0, len);\n\t\treturn new Bytes(len, newarr);\n\t\t#else\n\t\treturn new Bytes(len,b.slice(pos,pos+len));\n\t\t#end\n\t}\n\n\tpublic function compare( other : Bytes ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__compare(b,other.b);\n\t\t#elseif flash9\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tb1.position = 0;\n\t\tb2.position = 0;\n\t\tb1.endian = flash.utils.Endian.BIG_ENDIAN;\n\t\tb2.endian = flash.utils.Endian.BIG_ENDIAN;\n\t\tfor( i in 0...len>>2 )\n\t\t\tif( b1.readUnsignedInt() != b2.readUnsignedInt() ) {\n\t\t\t\tb1.position -= 4;\n\t\t\t\tb2.position -= 4;\n\t\t\t\tvar d = b1.readUnsignedInt() - b2.readUnsignedInt();\n\t\t\t\tb1.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\t\tb2.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\t\treturn d;\n\t\t\t}\n\t\tfor( i in 0...len & 3 )\n\t\t\tif( b1.readUnsignedByte() != b2.readUnsignedByte() ) {\n\t\t\t\tb1.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\t\tb2.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\t\treturn b1[b1.position-1] - b2[b2.position-1];\n\t\t\t}\n\t\tb1.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\tb2.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\treturn length - other.length;\n\t\t#elseif php\n\t\treturn untyped __php__(\"$this->b < $other->b ? -1 : ($this->b == $other->b ? 0 : 1)\");\n\t\t//#elseif cs\n\t\t//TODO: memcmp if unsafe flag is on\n\t\t#elseif cpp\n\t\treturn b.memcmp(other.b);\n\t\t#else\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tfor( i in 0...len )\n\t\t\tif( b1[i] != b2[i] )\n\t\t\t\t#if cpp\n\t\t\t\treturn untyped b1[i] - untyped b2[i];\n\t\t\t\t#else\n\t\t\t\treturn untyped b1[i] - untyped b2[i];\n\t\t\t\t#end\n\t\treturn length - other.length;\n\t\t#end\n\t}\n\n\tpublic function getDouble( pos : Int ) : Float {\n\t\t#if neko\n\t\treturn untyped Input._double_of_bytes(sub(pos,8).b,false);\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\treturn b.readDouble();\n\t\t#elseif cpp\n\t\tif( pos < 0 || pos + 8 > length ) throw Error.OutsideBounds;\n\t\treturn untyped __global__.__hxcpp_memory_get_double(b,pos);\n\t\t#else\n\t\tvar b = new haxe.io.BytesInput(this,pos,8);\n\t\treturn b.readDouble();\n\t\t#end\n\t}\n\n\tpublic function getFloat( pos : Int ) : Float {\n\t\t#if neko\n\t\treturn untyped Input._float_of_bytes(sub(pos,4).b,false);\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\treturn b.readFloat();\n\t\t#elseif cpp\n\t\tif( pos < 0 || pos + 4 > length ) throw Error.OutsideBounds;\n\t\treturn untyped __global__.__hxcpp_memory_get_float(b,pos);\n\t\t#else\n\t\tvar b = new haxe.io.BytesInput(this,pos,4);\n\t\treturn b.readFloat();\n\t\t#end\n\t}\n\n\tpublic function setDouble( pos : Int, v : Float ) : Void {\n\t\t#if neko\n\t\tuntyped $sblit(b, pos, Output._double_bytes(v,false), 0, 8);\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\tb.writeDouble(v);\n\t\t#elseif cpp\n\t\tif( pos < 0 || pos + 8 > length ) throw Error.OutsideBounds;\n\t\tuntyped __global__.__hxcpp_memory_set_double(b,pos,v);\n\t\t#else\n\t\tthrow \"Not supported\";\n\t\t#end\n\t}\n\n\tpublic function setFloat( pos : Int, v : Float ) : Void {\n\t\t#if neko\n\t\tuntyped $sblit(b, pos, Output._float_bytes(v,false), 0, 4);\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\tb.writeFloat(v);\n\t\t#elseif cpp\n\t\tif( pos < 0 || pos + 4 > length ) throw Error.OutsideBounds;\n\t\tuntyped __global__.__hxcpp_memory_set_float(b,pos,v);\n\t\t#else\n\t\tthrow \"Not supported\";\n\t\t#end\n\t}\n\n\tpublic function getString( pos : Int, len : Int ) : String {\n\t\t#if !neko\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\t#end\n\t\t#if neko\n\t\treturn try new String(untyped __dollar__ssub(b,pos,len)) catch( e : Dynamic ) throw Error.OutsideBounds;\n\t\t#elseif flash9\n\t\tb.position = pos;\n\t\treturn b.readUTFBytes(len);\n\t\t#elseif php\n\t\treturn untyped __call__(\"substr\", b, pos, len);\n\t\t#elseif cpp\n\t\tvar result:String=\"\";\n\t\tuntyped __global__.__hxcpp_string_of_bytes(b,result,pos,len);\n\t\treturn result;\n\t\t#elseif cs\n\t\treturn cs.system.text.Encoding.UTF8.GetString(b, pos, len);\n\t\t#elseif java\n\t\ttry\n\t\t\treturn new String(b, pos, len, \"UTF-8\")\n\t\tcatch (e:Dynamic) throw e;\n\t\t#else\n\t\tvar s = \"\";\n\t\tvar b = b;\n\t\tvar fcc = String.fromCharCode;\n\t\tvar i = pos;\n\t\tvar max = pos+len;\n\t\t// utf8-decode and utf16-encode\n\t\twhile( i < max ) {\n\t\t\tvar c = b[i++];\n\t\t\tif( c < 0x80 ) {\n\t\t\t\tif( c == 0 ) break;\n\t\t\t\ts += fcc(c);\n\t\t\t} else if( c < 0xE0 )\n\t\t\t\ts += fcc( ((c & 0x3F) << 6) | (b[i++] & 0x7F) );\n\t\t\telse if( c < 0xF0 ) {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\ts += fcc( ((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (b[i++] & 0x7F) );\n\t\t\t} else {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\tvar c3 = b[i++];\n\t\t\t\tvar u = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (b[i++] & 0x7F);\n\t\t\t\t// surrogate pair\n\t\t\t\ts += fcc( (u >> 10) + 0xD7C0 );\n\t\t\t\ts += fcc( (u & 0x3FF) | 0xDC00 );\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t\t#end\n\t}\n\n\t@:deprecated(\"readString is deprecated, use getString instead\")\n\t@:noCompletion\n\tpublic inline function readString(pos:Int, len:Int):String {\n\t\treturn getString(pos, len);\n\t}\n\n\tpublic function toString() : String {\n\t\t#if neko\n\t\treturn new String(untyped __dollar__ssub(b,0,length));\n\t\t#elseif flash9\n\t\tb.position = 0;\n\t\treturn b.readUTFBytes(length);\n\t\t#elseif php\n\t\treturn cast b;\n\t\t#elseif cs\n\t\treturn cs.system.text.Encoding.UTF8.GetString(b, 0, length);\n\t\t#elseif java\n\t\ttry\n\t\t{\n\t\t\treturn new String(b, 0, length, \"UTF-8\");\n\t\t}\n\t\tcatch (e:Dynamic) throw e;\n\t\t#else\n\t\treturn getString(0,length);\n\t\t#end\n\t}\n\n\tpublic function toHex() : String {\n\t\tvar s = new StringBuf();\n\t\tvar chars = [];\n\t\tvar str = \"0123456789abcdef\";\n\t\tfor( i in 0...str.length )\n\t\t\tchars.push(str.charCodeAt(i));\n\t\tfor( i in 0...length ) {\n\t\t\tvar c = get(i);\n\t\t\ts.addChar(chars[c >> 4]);\n\t\t\ts.addChar(chars[c & 15]);\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function getData() : BytesData {\n\t\treturn b;\n\t}\n\n\tpublic static function alloc( length : Int ) : Bytes {\n\t\t#if neko\n\t\treturn new Bytes(length,untyped __dollar__smake(length));\n\t\t#elseif flash9\n\t\tvar b = new flash.utils.ByteArray();\n\t\tb.length = length;\n\t\treturn new Bytes(length,b);\n\t\t#elseif php\n\t\treturn new Bytes(length, untyped __call__(\"str_repeat\", __call__(\"chr\", 0), length));\n\t\t#elseif cpp\n\t\tvar a = new BytesData();\n\t\tif (length>0) a[length-1] = untyped 0;\n\t\treturn new Bytes(length, a);\n\t\t#elseif cs\n\t\treturn new Bytes(length, new cs.NativeArray(length));\n\t\t#elseif java\n\t\treturn new Bytes(length, new java.NativeArray(length));\n\t\t#else\n\t\tvar a = new Array();\n\t\tfor( i in 0...length )\n\t\t\ta.push(0);\n\t\treturn new Bytes(length,a);\n\t\t#end\n\t}\n\n\tpublic static function ofString( s : String ) : Bytes {\n\t\t#if neko\n\t\treturn new Bytes(s.length,untyped __dollar__ssub(s.__s,0,s.length));\n\t\t#elseif flash9\n\t\tvar b = new flash.utils.ByteArray();\n\t\tb.writeUTFBytes(s);\n\t\treturn new Bytes(b.length,b);\n\t\t#elseif php\n\t\treturn new Bytes(untyped __call__(\"strlen\", s), cast s);\n//\t\treturn ofData(untyped __call__(\"new _hx_array\", __call__(\"array_values\", __call__(\"unpack\", \"C*\",  s))));\n\t\t#elseif cpp\n\t\tvar a = new BytesData();\n\t\tuntyped __global__.__hxcpp_bytes_of_string(a,s);\n\t\treturn new Bytes(a.length, a);\n\t\t#elseif cs\n\t\tvar b = cs.system.text.Encoding.UTF8.GetBytes(s);\n\t\treturn new Bytes(b.Length, b);\n\t\t#elseif java\n\t\ttry\n\t\t{\n\t\t\tvar b:BytesData = untyped s.getBytes(\"UTF-8\");\n\t\t\treturn new Bytes(b.length, b);\n\t\t}\n\t\tcatch (e:Dynamic) throw e;\n\t\t#else\n\t\tvar a = new Array();\n\t\t// utf16-decode and utf8-encode\n\t\tvar i = 0;\n\t\twhile( i < s.length ) {\n\t\t\tvar c : Int = StringTools.fastCodeAt(s,i++);\n\t\t\t// surrogate pair\n\t\t\tif( 0xD800 <= c && c <= 0xDBFF )\n\t\t\t       c = (c - 0xD7C0 << 10) | (StringTools.fastCodeAt(s,i++) & 0x3FF);\n\t\t\tif( c <= 0x7F )\n\t\t\t\ta.push(c);\n\t\t\telse if( c <= 0x7FF ) {\n\t\t\t\ta.push( 0xC0 | (c >> 6) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else if( c <= 0xFFFF ) {\n\t\t\t\ta.push( 0xE0 | (c >> 12) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else {\n\t\t\t\ta.push( 0xF0 | (c >> 18) );\n\t\t\t\ta.push( 0x80 | ((c >> 12) & 63) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t}\n\t\t}\n\t\treturn new Bytes(a.length,a);\n\t\t#end\n\t}\n\n\tpublic static function ofData( b : BytesData ) {\n\t\t#if flash9\n\t\treturn new Bytes(b.length,b);\n\t\t#elseif neko\n\t\treturn new Bytes(untyped __dollar__ssize(b),b);\n\t\t#elseif php\n\t\treturn new Bytes(untyped __call__(\"strlen\", b), b);\n\t\t#elseif cs\n\t\treturn new Bytes(b.Length,b);\n\t\t#else\n\t\treturn new Bytes(b.length,b);\n\t\t#end\n\t}\n\n\t/**\n\t\tRead the most efficiently possible the n-th byte of the data.\n\t\tBehavior when reading outside of the available data is unspecified.\n\t**/\n\tpublic inline static function fastGet( b : BytesData, pos : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(b,pos);\n\t\t#elseif flash9\n\t\treturn b[pos];\n\t\t#elseif php\n\t\treturn untyped __call__(\"ord\", b[pos]);\n\t\t#elseif cpp\n\t\treturn untyped b.unsafeGet(pos);\n\t\t#elseif java\n\t\treturn untyped b[pos] & 0xFF;\n\t\t#else\n\t\treturn b[pos];\n\t\t#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.crypto;\n\n/**\n\tAllows to encode/decode String and bytes using Base64 encoding.\n**/\nclass Base64 {\n\n\tpublic static var CHARS(default,null) = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\tpublic static var BYTES(default,null) = haxe.io.Bytes.ofString(CHARS);\n\n\tpublic static function encode( bytes : haxe.io.Bytes, complement = true ) : String {\n\t\tvar str = new BaseCode(BYTES).encodeBytes(bytes).toString();\n\t\tif( complement )\n\t\t\tfor( i in 0...(3-(bytes.length*4)%3)%3 )\n\t\t\t\tstr += \"=\";\n\t\treturn str;\n\t}\n\n\tpublic static function decode( str : String, complement = true ) : haxe.io.Bytes {\n\t\tif( complement )\n\t\t\twhile( str.charCodeAt(str.length-1) == \"=\".code )\n\t\t\t\tstr = str.substr(0,-1);\n\t\treturn new BaseCode(BYTES).decodeBytes(haxe.io.Bytes.ofString(str));\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.crypto;\n\n/**\n\tAllows to encode/decode String and bytes using a power of two base dictionnary.\n**/\nclass BaseCode {\n\n\tvar base : haxe.io.Bytes;\n\tvar nbits : Int;\n\tvar tbl : Array<Int>;\n\n\tpublic function new( base : haxe.io.Bytes ) {\n\t\tvar len = base.length;\n\t\tvar nbits = 1;\n\t\twhile( len > 1 << nbits )\n\t\t\tnbits++;\n\t\tif( nbits > 8 || len != 1 << nbits )\n\t\t\tthrow \"BaseCode : base length must be a power of two.\";\n\t\tthis.base = base;\n\t\tthis.nbits = nbits;\n\t}\n\n\tpublic function encodeBytes( b : haxe.io.Bytes ) : haxe.io.Bytes {\n\t\t#if neko\n\t\treturn haxe.io.Bytes.ofData( base_encode(b.getData(),base.getData()) );\n\t\t#else\n\t\tvar nbits = this.nbits;\n\t\tvar base = this.base;\n\t\tvar size = Std.int(b.length * 8 / nbits);\n\t\tvar out = haxe.io.Bytes.alloc(size + (((b.length * 8) % nbits == 0) ? 0 : 1) );\n\t\tvar buf = 0;\n\t\tvar curbits = 0;\n\t\tvar mask = (1 << nbits) - 1;\n\t\tvar pin = 0;\n\t\tvar pout = 0;\n\t\twhile( pout < size ) {\n\t\t\twhile( curbits < nbits ) {\n\t\t\t\tcurbits += 8;\n\t\t\t\tbuf <<= 8;\n\t\t\t\tbuf |= b.get(pin++);\n\t\t\t}\n\t\t\tcurbits -= nbits;\n\t\t\tout.set(pout++,base.get((buf >> curbits) & mask));\n\t\t}\n\t\tif( curbits > 0 )\n\t\t\tout.set(pout++,base.get((buf << (nbits - curbits)) & mask));\n\t\treturn out;\n\t\t#end\n\t}\n\n\tfunction initTable() {\n\t\tvar tbl = new Array();\n\t\tfor( i in 0...256 )\n\t\t\ttbl[i] = -1;\n\t\tfor( i in 0...base.length )\n\t\t\ttbl[base.get(i)] = i;\n\t\tthis.tbl = tbl;\n\t}\n\n\tpublic function decodeBytes( b : haxe.io.Bytes ) : haxe.io.Bytes {\n\t\t#if neko\n\t\treturn haxe.io.Bytes.ofData( base_decode(b.getData(),base.getData()) );\n\t\t#else\n\t\tvar nbits = this.nbits;\n\t\tvar base = this.base;\n\t\tif( this.tbl == null ) initTable();\n\t\tvar tbl = this.tbl;\n\t\tvar size = (b.length * nbits) >> 3;\n\t\tvar out = haxe.io.Bytes.alloc(size);\n\t\tvar buf = 0;\n\t\tvar curbits = 0;\n\t\tvar pin = 0;\n\t\tvar pout = 0;\n\t\twhile( pout < size ) {\n\t\t\twhile( curbits < 8 ) {\n\t\t\t\tcurbits += nbits;\n\t\t\t\tbuf <<= nbits;\n\t\t\t\tvar i = tbl[b.get(pin++)];\n\t\t\t\tif( i == -1 )\n\t\t\t\t\tthrow \"BaseCode : invalid encoded char\";\n\t\t\t\tbuf |= i;\n\t\t\t}\n\t\t\tcurbits -= 8;\n\t\t\tout.set(pout++,(buf >> curbits) & 0xFF);\n\t\t}\n\t\treturn out;\n\t\t#end\n\t}\n\n\tpublic function encodeString( s : String ) {\n\t\t#if neko\n\t\treturn neko.NativeString.toString( base_encode(neko.NativeString.ofString(s),base.getData()) );\n\t\t#else\n\t\treturn encodeBytes(haxe.io.Bytes.ofString(s)).toString();\n\t\t#end\n\t}\n\n\tpublic function decodeString( s : String ) {\n\t\t#if neko\n\t\treturn neko.NativeString.toString( base_decode(neko.NativeString.ofString(s),base.getData()) );\n\t\t#else\n\t\treturn decodeBytes(haxe.io.Bytes.ofString(s)).toString();\n\t\t#end\n\t}\n\n\tpublic static function encode( s : String, base : String ) {\n\t\tvar b = new BaseCode(haxe.io.Bytes.ofString(base));\n\t\treturn b.encodeString(s);\n\t}\n\n\tpublic static function decode( s : String, base : String ) {\n\t\tvar b = new BaseCode(haxe.io.Bytes.ofString(base));\n\t\treturn b.decodeString(s);\n\t}\n\n\t#if neko\n\tprivate static var base_encode = neko.Lib.load(\"std\",\"base_encode\",2);\n\tprivate static var base_decode = neko.Lib.load(\"std\",\"base_decode\",2);\n\t#end\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n#if (flash9 || cpp)\n@:generic\n#end\nclass GenericCell<T> {\n\tpublic var elt : T;\n\tpublic var next : GenericCell<T>;\n\tpublic function new(elt,next) { this.elt = elt; this.next = next; }\n}\n\n#if cpp\n@:generic\nprivate class GenericStackIterator<T> extends cpp.FastIterator<T> {\n\tpublic var current : GenericCell<T>;\n\toverride public function hasNext():Bool { return current!=null; }\n\toverride public function next():T { var result = current.elt; current = current.next; return result; }\n\n\tpublic function new(head) { current = head; }\n}\n\n#end\n\n/**\n\tA stack of elements.\n\n\tThis class is generic, which means one type is generated for each type\n\tparameter T on static targets. For example:\n\n\t- `new GenericStack<Int>()` generates `GenericStack_Int`\n\t- `new GenericStack<String>()` generates `GenericStack_String`\n\n\tThe generated name is an implementation detail and should not be relied\n\tupon.\n**/\n#if (flash9 || cpp)\n@:generic\n#end\nclass GenericStack<T> {\n\n\tpublic var head : GenericCell<T>;\n\n\t/**\n\t\tCreates a new empty GenericStack.\n\t**/\n\tpublic function new() {\n\t}\n\n\t/**\n\t\tPushes element `item` onto the stack.\n\t**/\n\tpublic inline function add( item : T ) {\n\t\thead = new GenericCell<T>(item,head);\n\t}\n\n\t/**\n\t\tReturns the topmost stack element without removing it.\n\n\t\tIf the stack is empty, null is returned.\n\t**/\n\tpublic inline function first() : Null<T> {\n\t\treturn if( head == null ) null else head.elt;\n\t}\n\n\t/**\n\t\tReturns the topmost stack element and removes it.\n\n\t\tIf the stack is empty, null is returned.\n\t**/\n\tpublic inline function pop() : Null<T> {\n\t\tvar k = head;\n\t\tif( k== null )\n\t\t\treturn null;\n\t\telse {\n\t\t\thead = k.next;\n\t\t\treturn k.elt;\n\t\t}\n\t}\n\n\t/**\n\t\tTells if the stack is empty.\n\t**/\n\tpublic inline function isEmpty() : Bool {\n\t\treturn (head == null);\n\t}\n\n\t/**\n\t\tRemoves the first element which is equal to `v` according to the `==`\n\t\toperator.\n\n\t\tThis method traverses the stack until it finds a matching element and\n\t\tunlinks it, returning true.\n\n\t\tIf no matching element is found, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev = null;\n\t\tvar l = head;\n\t\twhile( l != null ) {\n\t\t\tif( l.elt == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\thead = l.next;\n\t\t\t\telse\n\t\t\t\t\tprev.next = l.next;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l.next;\n\t\t}\n\t\treturn (l != null);\n\t}\n\n\t#if cpp\n\n\t/**\n\t\tReturns an iterator over the elements of `this` GenericStack.\n\t**/\n\tpublic function iterator() : Iterator<T> {\n\t\treturn new GenericStackIterator<T>(head);\n\t}\n\n\t#else\n\n\t/**\n\t\tReturns an iterator over the elements of `this` GenericStack.\n\t**/\n\tpublic function iterator() : Iterator<T> {\n\t\tvar l = head;\n\t\treturn {\n\t\t\thasNext : function() {\n\t\t\t\treturn l != null;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\tvar k = l;\n\t\t\t\tl = k.next;\n\t\t\t\treturn k.elt;\n\t\t\t}\n\t\t};\n\t}\n   #end\n\n\t/**\n\t\tReturns a String representation of `this` GenericStack.\n\t**/\n\tpublic function toString() {\n\t\tvar a = new Array();\n\t\tvar l = head;\n\t\twhile( l != null ) {\n\t\t\ta.push(l.elt);\n\t\t\tl = l.next;\n\t\t}\n\t\treturn \"{\"+a.join(\",\")+\"}\";\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class IntMap<T> implements Map.IMap<Int,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic function set( key : Int, value : T ) : Void {\n\t\tuntyped h[key] = value;\n\t}\n\n\tpublic function get( key : Int ) : Null<T> {\n\t\treturn untyped h[key];\n\t}\n\n\tpublic function exists( key : Int ) : Bool {\n\t\treturn untyped h.hasOwnProperty(key);\n\t}\n\n\tpublic function remove( key : Int ) : Bool {\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped  __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<Int> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(key|0);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of h software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and h permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n@:coreApi\nclass ObjectMap<K:{ }, V> implements Map.IMap<K,V> {\n\n\tstatic var count = 0;\n\n\tstatic inline function assignId(obj: { } ):Int {\n\t\treturn untyped obj.__id__ = ++count;\n\t}\n\n\tstatic inline function getId(obj: { } ):Int {\n\t\treturn untyped obj.__id__;\n\t}\n\n\tvar h : { };\n\n\tpublic function new() : Void {\n\t\th = { };\n\t\tuntyped h.__keys__ = { };\n\t}\n\n\tpublic function set(key:K, value:V):Void untyped {\n\t\tvar id : Int = untyped key.__id__ || assignId(key);\n\t\th[id] = value;\n\t\th.__keys__[id] = key;\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn untyped h[getId(key)];\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn untyped h.__keys__[getId(key)] != null;\n\t}\n\n\tpublic function remove( key : K ) : Bool {\n\t\tvar id = getId(key);\n\t\tif ( untyped h.__keys__[id] == null ) return false;\n\t\tuntyped  __js__(\"delete\")(h[id]);\n\t\tuntyped  __js__(\"delete\")(h.__keys__[id]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<K> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h.__keys__ ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(h.__keys__[key]);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<V> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[getId(i)]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(Std.string(i));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tThis exception is raised when reading while data is no longer available in the [Input].\n**/\nclass Eof {\n\tpublic function new() {\n\t}\n\t@:keep function toString() {\n\t\treturn \"Eof\";\n\t}\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.macro;\n\nimport haxe.macro.Expr;\nusing Lambda;\n\n/**\n\tThis class provides some utility methods to work with expressions. It is\n\tbest used through 'using haxe.macro.ExprTools' syntax and then provides\n\tadditional methods on haxe.macro.Expr instances.\n\n\tWhile mainly intended to be used in macros, it works in non-macro code as\n\twell.\n**/\nclass ExprTools {\n\n\t/**\n\t\tConverts expression [e] to a human-readable String representation.\n\n\t\tThe result is guaranteed to be valid haxe code, but there may be\n\t\tdifferences from the original lexical syntax.\n\t**/\n\tstatic public function toString( e : Expr ) : String\n\t\treturn new Printer().printExpr(e);\n\n\t/**\n\t\tCalls function [f] on each sub-expression of [e].\n\n\t\tIf [e] has no sub-expressions, this operation has no effect.\n\n\t\tOtherwise [f] is called once per sub-expression of [e], with the\n\t\tsub-expression as argument. These calls are done in order of the\n\t\tsub-expression declarations.\n\n\t\tThis method does not call itself recursively. It should instead be used\n\t\tin a recursive function which handles the expression nodes of interest.\n\n\t\tUsage example:\n\n\t\tfunction findStrings(e:Expr) {\n\t\t\tswitch(e.expr) {\n\t\t\t\tcase EConst(CString(s)):\n\t\t\t\t\t// handle s\n\t\t\t\tcase _:\n\t\t\t\t\tExprTools.iter(e, findStrings);\n\t\t\t}\n\t\t}\n\t**/\n\tstatic public function iter( e : Expr, f : Expr -> Void ) : Void {\n\t\tswitch(e.expr) {\n\t\t\tcase EConst(_),\n\t\t\t\tEContinue,\n\t\t\t\tEBreak,\n\t\t\t\tEDisplayNew(_):\n\t\t\tcase EField(e, _),\n\t\t\t\tEParenthesis(e),\n\t\t\t\tEUntyped(e),\n\t\t\t\tEThrow(e),\n\t\t\t\tEDisplay(e, _),\n\t\t\t\tECheckType(e, _),\n\t\t\t\tEUnop(_, _, e),\n\t\t\t\tECast(e, _),\n\t\t\t\tEMeta(_, e):\n\t\t\t\t\tf(e);\n\t\t\tcase EArray(e1, e2),\n\t\t\t\tEWhile(e1, e2, _),\n\t\t\t\tEBinop(_, e1, e2),\n\t\t\t\tEFor(e1, e2),\n\t\t\t\tEIn(e1, e2):\n\t\t\t\t\tf(e1);\n\t\t\t\t\tf(e2);\n\t\t\tcase EVars(vl):\n\t\t\t\tfor (v in vl)\n\t\t\t\t\topt2(v.expr, f);\n\t\t\tcase ETry(e, cl):\n\t\t\t\tf(e);\n\t\t\t\tfor (c in cl)\n\t\t\t\t\tf(c.expr);\n\t\t\tcase ETernary(e1, e2, e3)\n\t\t\t| EIf(e1, e2, e3):\n\t\t\t\tf(e1);\n\t\t\t\tf(e2);\n\t\t\t\topt2(e3, f);\n\t\t\tcase EArrayDecl(el),\n\t\t\t\tENew(_, el),\n\t\t\t\tEBlock(el):\n\t\t\t\t\tExprArrayTools.iter(el, f);\n\t\t\tcase EObjectDecl(fl):\n\t\t\t\tfor (fd in fl)\n\t\t\t\t\tf(fd.expr);\n\t\t\tcase ECall(e, el):\n\t\t\t\tf(e);\n\t\t\t\tExprArrayTools.iter(el, f);\n\t\t\tcase EReturn(e):\n\t\t\t\topt2(e, f);\n\t\t\tcase EFunction(_, func):\n\t\t\t\tfor (arg in func.args)\n\t\t\t\t\topt2(arg.value, f);\n\t\t\t\topt2(func.expr, f);\n\t\t\tcase ESwitch(e, cl, edef):\n\t\t\t\tf(e);\n\t\t\t\tfor (c in cl) {\n\t\t\t\t\tExprArrayTools.iter(c.values, f);\n\t\t\t\t\topt2(c.guard, f);\n\t\t\t\t\topt2(c.expr, f);\n\t\t\t\t}\n\t\t\t\tif (edef != null && edef.expr != null)\n\t\t\t\t\tf(edef);\n\t\t}\n\t}\n\n\t/**\n\t\tTransforms the sub-expressions of [e] by calling [f] on each of them.\n\n\t\tIf [e] has no sub-expressions, this operation returns [e] unchanged.\n\n\t\tOtherwise [f] is called once per sub-expression of [e], with the\n\t\tsub-expression as argument. These calls are done in order of the\n\t\tsub-expression declarations.\n\n\t\tThis method does not call itself recursively. It should instead be used\n\t\tin a recursive function which handles the expression nodes of interest.\n\n\t\tUsage example:\n\n\t\tfunction capitalizeStrings(e:Expr) {\n\t\t\treturn switch(e.expr) {\n\t\t\t\tcase EConst(CString(s)):\n\t\t\t\t\t{ expr: EConst(CString(s.toUpperCase())), pos: e.pos };\n\t\t\t\tcase _:\n\t\t\t\t\tExprTools.map(e, capitalizeStrings);\n\t\t\t}\n\t\t}\n\t**/\n\tstatic public function map( e : Expr, f : Expr -> Expr ) : Expr {\n\t\treturn {pos: e.pos, expr: switch(e.expr) {\n\t\t\tcase EConst(_): e.expr;\n\t\t\tcase EArray(e1, e2): EArray(f(e1), f(e2));\n\t\t\tcase EBinop(op, e1, e2): EBinop(op, f(e1), f(e2));\n\t\t\tcase EField(e, field): EField(f(e), field);\n\t\t\tcase EParenthesis(e): EParenthesis(f(e));\n\t\t\tcase EObjectDecl(fields):\n\t\t\t\tvar ret = [];\n\t\t\t\tfor (field in fields)\n\t\t\t\t\tret.push( { field: field.field, expr: f(field.expr) } );\n\t\t\t\tEObjectDecl(ret);\n\t\t\tcase EArrayDecl(el): EArrayDecl(ExprArrayTools.map(el, f));\n\t\t\tcase ECall(e, params): ECall(f(e), ExprArrayTools.map(params, f));\n\t\t\tcase ENew(tp, params): ENew(tp, ExprArrayTools.map(params, f));\n\t\t\tcase EUnop(op, postFix, e): EUnop(op, postFix, f(e));\n\t\t\tcase EVars(vars):\n\t\t\t\tvar ret = [];\n\t\t\t\tfor (v in vars)\n\t\t\t\t\tret.push( { name: v.name, type:v.type, expr: opt(v.expr, f) } );\n\t\t\t\tEVars(ret);\n\t\t\tcase EBlock(el): EBlock(ExprArrayTools.map(el, f));\n\t\t\tcase EFor(it, expr): EFor(f(it), f(expr));\n\t\t\tcase EIn(e1, e2): EIn(f(e1), f(e2));\n\t\t\tcase EIf(econd, eif, eelse): EIf(f(econd), f(eif), opt(eelse, f));\n\t\t\tcase EWhile(econd, e, normalWhile): EWhile(f(econd), f(e), normalWhile);\n\t\t\tcase EReturn(e): EReturn(opt(e,f));\n\t\t\tcase EUntyped(e): EUntyped(f(e));\n\t\t\tcase EThrow(e): EThrow(f(e));\n\t\t\tcase ECast(e, t): ECast(f(e), t);\n\t\t\tcase EDisplay(e, isCall): EDisplay(f(e), isCall);\n\t\t\tcase ETernary(econd, eif, eelse): ETernary(f(econd), f(eif), f(eelse));\n\t\t\tcase ECheckType(e, t): ECheckType(f(e), t);\n\t\t\tcase EDisplayNew(_),\n\t\t\t\tEContinue,\n\t\t\t\tEBreak:\n\t\t\t\t\te.expr;\n\t\t\tcase ETry(e, catches):\n\t\t\t\tvar ret = [];\n\t\t\t\tfor (c in catches)\n\t\t\t\t\tret.push( { name:c.name, type:c.type, expr:f(c.expr) } );\n\t\t\t\tETry(f(e), ret);\n\t\t\tcase ESwitch(e, cases, edef):\n\t\t\t\tvar ret = [];\n\t\t\t\tfor (c in cases)\n\t\t\t\t\tret.push( { expr: opt (c.expr, f), guard: opt(c.guard, f), values: ExprArrayTools.map(c.values, f) } );\n\t\t\t\tESwitch(f(e), ret, edef == null || edef.expr == null ? edef : f(edef));\n\t\t\tcase EFunction(name, func):\n\t\t\t\tvar ret = [];\n\t\t\t\tfor (arg in func.args)\n\t\t\t\t\tret.push( { name: arg.name, opt: arg.opt, type: arg.type, value: opt(arg.value, f) } );\n\t\t\t\tEFunction(name, { args: ret, ret: func.ret, params: func.params, expr: f(func.expr) } );\n\t\t\tcase EMeta(m, e): EMeta(m, f(e));\n\t\t}};\n\t}\n\n\t/**\n\t\tReturns the value `e` represents.\n\n\t\tSupported expressions are:\n\t\t\t- `Int`, `Float` and `String` literals\n\t\t\t- identifiers `true`, `false` and `null`\n\t\t\t- structure declarations if all their fields are values\n\t\t\t- array declarations if all their elements are values\n\t\t\t- unary operators `-`, `!` and `~` if the operand is a value\n\t\t\t- binary operators except `=>`, `...` and assignments\n\n\t\tParentheses, metadata and the `untyped` keyword are ignored.\n\n\t\tIf any non-value is encountered, an exception of type `String` is\n\t\tthrown.\n\n\t\tIf `e` is null, the result is unspecified.\n\t**/\n\tstatic public function getValue(e:Expr):Dynamic {\n\t\treturn switch (e.expr) {\n\t\t\tcase EConst(CInt(v)): Std.parseInt(v);\n\t\t\tcase EConst(CFloat(v)): Std.parseFloat(v);\n\t\t\tcase EConst(CString(s)): s;\n\t\t\tcase EConst(CIdent(\"true\")): true;\n\t\t\tcase EConst(CIdent(\"false\")): false;\n\t\t\tcase EConst(CIdent(\"null\")): null;\n\t\t\tcase EParenthesis(e1) | EUntyped(e1) | EMeta(_, e1): getValue(e1);\n\t\t\tcase EObjectDecl(fields):\n\t\t\t\tvar obj = {};\n\t\t\t\tfor (field in fields) {\n\t\t\t\t\tReflect.setField(obj, field.field, getValue(field.expr));\n\t\t\t\t}\n\t\t\t\tobj;\n\t\t\tcase EArrayDecl(el): el.map(getValue);\n\t\t\tcase EUnop(op, false, e1):\n\t\t\t\tvar e1:Dynamic = getValue(e1);\n\t\t\t\tswitch (op) {\n\t\t\t\t\tcase OpNot: !e1;\n\t\t\t\t\tcase OpNeg: -e1;\n\t\t\t\t\tcase OpNegBits: ~e1;\n\t\t\t\t\tcase _: throw 'Unsupported expression: $e';\n\t\t\t\t}\n\t\t\tcase EBinop(op, e1, e2):\n\t\t\t\tvar e1:Dynamic = getValue(e1);\n\t\t\t\tvar e2:Dynamic = getValue(e2);\n\t\t\t\tswitch (op) {\n\t\t\t\t\tcase OpAdd: e1 + e2;\n\t\t\t\t\tcase OpSub: e1 - e2;\n\t\t\t\t\tcase OpMult: e1 * e2;\n\t\t\t\t\tcase OpDiv: e1 / e2;\n\t\t\t\t\tcase OpMod: e1 % e2;\n\t\t\t\t\tcase OpEq: e1 == e2;\n\t\t\t\t\tcase OpNotEq: e1 != e2;\n\t\t\t\t\tcase OpLt: e1 < e2;\n\t\t\t\t\tcase OpLte: e1 <= e2;\n\t\t\t\t\tcase OpGt: e1 > e2;\n\t\t\t\t\tcase OpGte: e1 >= e2;\n\t\t\t\t\tcase OpOr: e1 | e2;\n\t\t\t\t\tcase OpAnd: e1 & e2;\n\t\t\t\t\tcase OpXor: e1 ^ e2;\n\t\t\t\t\tcase OpBoolAnd: e1 && e2;\n\t\t\t\t\tcase OpBoolOr: e1 || e2;\n\t\t\t\t\tcase OpShl: e1 << e2;\n\t\t\t\t\tcase OpShr: e1 >> e2;\n\t\t\t\t\tcase OpUShr: e1 >>> e2;\n\t\t\t\t\tcase _: throw 'Unsupported expression: $e';\n\t\t\t\t}\n\t\t\tcase _: throw 'Unsupported expression: $e';\n\t\t}\n\t}\n\n\tstatic inline function opt(e:Null<Expr>, f : Expr -> Expr):Expr\n\t\treturn e == null ? null : f(e);\n\n\tstatic inline function opt2(e:Null<Expr>, f : Expr -> Void):Void\n\t\tif (e != null) f(e);\n}\n\n/**\n\tThis class provides functions on expression arrays for convenience. For a\n\tdetailed reference on each method, see the documentation of ExprTools.\n */\nclass ExprArrayTools {\n\tstatic public function map( el : Array<Expr>, f : Expr -> Expr):Array<Expr> {\n\t\tvar ret = [];\n\t\tfor (e in el)\n\t\t\tret.push(f(e));\n\t\treturn ret;\n\t}\n\n\tstatic public function iter( el : Array<Expr>, f : Expr -> Void):Void {\n\t\tfor (e in el)\n\t\t\tf(e);\n\t}\n}","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.macro;\n\nimport haxe.macro.Expr;\nusing Lambda;\n\nclass Printer {\n\tvar tabs:String;\n\tvar tabString:String;\n\n\tpublic function new(?tabString = \"\\t\") {\n\t\ttabs = \"\";\n\t\tthis.tabString = tabString;\n\t}\n\n\tpublic function printUnop(op:Unop) return switch(op) {\n\t\tcase OpIncrement: \"++\";\n\t\tcase OpDecrement: \"--\";\n\t\tcase OpNot: \"!\";\n\t\tcase OpNeg: \"-\";\n\t\tcase OpNegBits: \"~\";\n\t}\n\n\tpublic function printBinop(op:Binop) return switch(op) {\n\t\tcase OpAdd: \"+\";\n\t\tcase OpMult: \"*\";\n\t\tcase OpDiv: \"/\";\n\t\tcase OpSub: \"-\";\n\t\tcase OpAssign: \"=\";\n\t\tcase OpEq: \"==\";\n\t\tcase OpNotEq: \"!=\";\n\t\tcase OpGt: \">\";\n\t\tcase OpGte: \">=\";\n\t\tcase OpLt: \"<\";\n\t\tcase OpLte: \"<=\";\n\t\tcase OpAnd: \"&\";\n\t\tcase OpOr: \"|\";\n\t\tcase OpXor: \"^\";\n\t\tcase OpBoolAnd: \"&&\";\n\t\tcase OpBoolOr: \"||\";\n\t\tcase OpShl: \"<<\";\n\t\tcase OpShr: \">>\";\n\t\tcase OpUShr: \">>>\";\n\t\tcase OpMod: \"%\";\n\t\tcase OpInterval: \"...\";\n\t\tcase OpArrow: \"=>\";\n\t\tcase OpAssignOp(op):\n\t\t\tprintBinop(op)\n\t\t\t+ \"=\";\n\t}\n\tpublic function printString(s:String) {\n\t\treturn '\"' + s.split(\"\\n\").join(\"\\\\n\").split(\"\\t\").join(\"\\\\t\").split(\"'\").join(\"\\\\'\").split('\"').join(\"\\\\\\\"\") #if sys .split(\"\\x00\").join(\"\\\\x00\") #end + '\"';\n\t}\n\tpublic function printConstant(c:Constant) return switch(c) {\n\t\tcase CString(s): printString(s);\n\t\tcase CIdent(s),\n\t\t\tCInt(s),\n\t\t\tCFloat(s):\n\t\t\t\ts;\n\t\tcase CRegexp(s,opt): '~/$s/$opt';\n\t}\n\n\tpublic function printTypeParam(param:TypeParam) return switch(param) {\n\t\tcase TPType(ct): printComplexType(ct);\n\t\tcase TPExpr(e): printExpr(e);\n\t}\n\n\tpublic function printTypePath(tp:TypePath) return\n\t\t(tp.pack.length > 0 ? tp.pack.join(\".\") + \".\" : \"\")\n\t\t+ tp.name\n\t\t+ (tp.sub != null ? '.${tp.sub}' : \"\")\n\t\t+ (tp.params.length > 0 ? \"<\" + tp.params.map(printTypeParam).join(\", \") + \">\" : \"\");\n\n\t// TODO: check if this can cause loops\n\tpublic function printComplexType(ct:ComplexType) return switch(ct) {\n\t\tcase TPath(tp): printTypePath(tp);\n\t\tcase TFunction(args, ret): (args.length>0 ? args.map(printComplexType).join(\" -> \") : \"Void\") + \" -> \" + printComplexType(ret);\n\t\tcase TAnonymous(fields): \"{ \" + [for (f in fields) printField(f) + \"; \"].join(\"\") + \"}\";\n\t\tcase TParent(ct): \"(\" + printComplexType(ct) + \")\";\n\t\tcase TOptional(ct): \"?\" + printComplexType(ct);\n\t\tcase TExtend(tpl, fields): '{> ${tpl.map(printTypePath).join(\" >, \")}, ${fields.map(printField).join(\", \")} }';\n\t}\n\n\tpublic function printMetadata(meta:MetadataEntry) return\n\t\t'@${meta.name}'\n\t\t+ (meta.params.length > 0 ? '(${printExprs(meta.params,\", \")})' : \"\");\n\n\tpublic function printAccess(access:Access) return switch(access) {\n\t\tcase AStatic: \"static\";\n\t\tcase APublic: \"public\";\n\t\tcase APrivate: \"private\";\n\t\tcase AOverride: \"override\";\n\t\tcase AInline: \"inline\";\n\t\tcase ADynamic: \"dynamic\";\n\t\tcase AMacro: \"macro\";\n\t}\n\n\tpublic function printField(field:Field) return\n\t\t(field.doc != null && field.doc != \"\" ? \"/**\\n\" + tabs + tabString + StringTools.replace(field.doc, \"\\n\", \"\\n\" + tabs + tabString) + \"\\n\" + tabs + \"**/\\n\" + tabs : \"\")\n\t\t+ (field.meta != null && field.meta.length > 0 ? field.meta.map(printMetadata).join('\\n$tabs') + '\\n$tabs' : \"\")\n\t\t+ (field.access != null && field.access.length > 0 ? field.access.map(printAccess).join(\" \") + \" \" : \"\")\n\t\t+ switch(field.kind) {\n\t\t  case FVar(t, eo): 'var ${field.name}' + opt(t, printComplexType, \" : \") + opt(eo, printExpr, \" = \");\n\t\t  case FProp(get, set, t, eo): 'var ${field.name}($get, $set)' + opt(t, printComplexType, \" : \") + opt(eo, printExpr, \" = \");\n\t\t  case FFun(func): 'function ${field.name}' + printFunction(func);\n\t\t}\n\n\tpublic function printTypeParamDecl(tpd:TypeParamDecl) return\n\t\ttpd.name\n\t\t+ (tpd.params != null && tpd.params.length > 0 ? \"<\" + tpd.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\")\n\t\t+ (tpd.constraints != null && tpd.constraints.length > 0 ? \":(\" + tpd.constraints.map(printComplexType).join(\", \") + \")\" : \"\");\n\n\tpublic function printFunctionArg(arg:FunctionArg) return\n\t\t(arg.opt ? \"?\" : \"\")\n\t\t+ arg.name\n\t\t+ opt(arg.type, printComplexType, \":\")\n\t\t+ opt(arg.value, printExpr, \" = \");\n\n\tpublic function printFunction(func:Function) return\n\t\t(func.params.length > 0 ? \"<\" + func.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\")\n\t\t+ \"(\" + func.args.map(printFunctionArg).join(\", \") + \")\"\n\t\t+ opt(func.ret, printComplexType, \":\")\n\t\t+ opt(func.expr, printExpr, \" \");\n\n\tpublic function printVar(v:Var) return\n\t\tv.name\n\t\t+ opt(v.type, printComplexType, \":\")\n\t\t+ opt(v.expr, printExpr, \" = \");\n\n\n\tpublic function printExpr(e:Expr) return e == null ? \"#NULL\" : switch(e.expr) {\n\t\tcase EConst(c): printConstant(c);\n\t\tcase EArray(e1, e2): '${printExpr(e1)}[${printExpr(e2)}]';\n\t\tcase EBinop(op, e1, e2): '${printExpr(e1)} ${printBinop(op)} ${printExpr(e2)}';\n\t\tcase EField(e1, n): '${printExpr(e1)}.$n';\n\t\tcase EParenthesis(e1): '(${printExpr(e1)})';\n\t\tcase EObjectDecl(fl):\n\t\t\t\"{ \" + fl.map(function(fld) return '${fld.field} : ${printExpr(fld.expr)}').join(\", \") + \" }\";\n\t\tcase EArrayDecl(el): '[${printExprs(el, \", \")}]';\n\t\tcase ECall(e1, el): '${printExpr(e1)}(${printExprs(el,\", \")})';\n\t\tcase ENew(tp, el): 'new ${printTypePath(tp)}(${printExprs(el,\", \")})';\n\t\tcase EUnop(op, true, e1): printExpr(e1) + printUnop(op);\n\t\tcase EUnop(op, false, e1): printUnop(op) + printExpr(e1);\n\t\tcase EFunction(no, func) if (no != null): 'function $no' + printFunction(func);\n\t\tcase EFunction(_, func): \"function\" +printFunction(func);\n\t\tcase EVars(vl): \"var \" +vl.map(printVar).join(\", \");\n\t\tcase EBlock([]): '{ }';\n\t\tcase EBlock(el):\n\t\t\tvar old = tabs;\n\t\t\ttabs += tabString;\n\t\t\tvar s = '{\\n$tabs' + printExprs(el, ';\\n$tabs');\n\t\t\ttabs = old;\n\t\t\ts + ';\\n$tabs}';\n\t\tcase EFor(e1, e2): 'for (${printExpr(e1)}) ${printExpr(e2)}';\n\t\tcase EIn(e1, e2): '${printExpr(e1)} in ${printExpr(e2)}';\n\t\tcase EIf(econd, eif, null): 'if (${printExpr(econd)}) ${printExpr(eif)}';\n\t\tcase EIf(econd, eif, eelse): 'if (${printExpr(econd)}) ${printExpr(eif)} else ${printExpr(eelse)}';\n\t\tcase EWhile(econd, e1, true): 'while (${printExpr(econd)}) ${printExpr(e1)}';\n\t\tcase EWhile(econd, e1, false): 'do ${printExpr(e1)} while (${printExpr(econd)})';\n\t\tcase ESwitch(e1, cl, edef):\n\t\t\tvar old = tabs;\n\t\t\ttabs += tabString;\n\t\t\tvar s = 'switch ${printExpr(e1)} {\\n$tabs' +\n\t\t\t\tcl.map(function(c)\n\t\t\t\t\treturn 'case ${printExprs(c.values, \", \")}'\n\t\t\t\t\t\t+ (c.guard != null ? ' if (${printExpr(c.guard)}):' : \":\")\n\t\t\t\t\t\t+ (c.expr != null ? (opt(c.expr, printExpr)) + \";\" : \"\"))\n\t\t\t\t.join('\\n$tabs');\n\t\t\tif (edef != null)\n\t\t\t\ts += '\\n${tabs}default:' + (edef.expr == null ? \"\" : printExpr(edef) + \";\");\n\t\t\ttabs = old;\n\t\t\ts + '\\n$tabs}';\n\t\tcase ETry(e1, cl):\n\t\t\t'try ${printExpr(e1)}'\n\t\t\t+ cl.map(function(c) return ' catch(${c.name}:${printComplexType(c.type)}) ${printExpr(c.expr)}').join(\"\");\n\t\tcase EReturn(eo): \"return\" + opt(eo, printExpr, \" \");\n\t\tcase EBreak: \"break\";\n\t\tcase EContinue: \"continue\";\n\t\tcase EUntyped(e1): \"untyped \" +printExpr(e1);\n\t\tcase EThrow(e1): \"throw \" +printExpr(e1);\n\t\tcase ECast(e1, cto) if (cto != null): 'cast(${printExpr(e1)}, ${printComplexType(cto)})';\n\t\tcase ECast(e1, _): \"cast \" +printExpr(e1);\n\t\tcase EDisplay(e1, _): '#DISPLAY(${printExpr(e1)})';\n\t\tcase EDisplayNew(tp): '#DISPLAY(${printTypePath(tp)})';\n\t\tcase ETernary(econd, eif, eelse): '${printExpr(econd)} ? ${printExpr(eif)} : ${printExpr(eelse)}';\n\t\tcase ECheckType(e1, ct): '(${printExpr(e1)} : ${printComplexType(ct)})';\n\t\tcase EMeta(meta, e1): printMetadata(meta) + \" \" +printExpr(e1);\n\t}\n\n\tpublic function printExprs(el:Array<Expr>, sep:String) {\n\t\treturn el.map(printExpr).join(sep);\n\t}\n\n\tfunction printExtension(tpl:Array<TypePath>, fields: Array<Field>) {\n\t\treturn '{\\n$tabs>' + tpl.map(printTypePath).join(',\\n$tabs>') + \",\"\n\t\t    + (fields.length > 0 ? ('\\n$tabs' + fields.map(printField).join(';\\n$tabs') + \";\\n}\") : (\"\\n}\"));\n\t}\n\n\tfunction printStructure(fields:Array<Field>) {\n\t\treturn fields.length == 0 ? \"{ }\" :\n\t\t\t'{\\n$tabs' + fields.map(printField).join(';\\n$tabs') + \";\\n}\";\n\t}\n\n\tpublic function printTypeDefinition(t:TypeDefinition, printPackage = true):String {\n\t\tvar old = tabs;\n\t\ttabs = tabString;\n\n\t\tvar str = t == null ? \"#NULL\" :\n\t\t\t(printPackage && t.pack.length > 0 && t.pack[0] != \"\" ? \"package \" + t.pack.join(\".\") + \";\\n\" : \"\") +\n\t\t\t(t.meta != null && t.meta.length > 0 ? t.meta.map(printMetadata).join(\" \") + \" \" : \"\") + (t.isExtern ? \"extern \" : \"\") + switch (t.kind) {\n\t\t\t\tcase TDEnum:\n\t\t\t\t\t\"enum \" + t.name + (t.params.length > 0 ? \"<\" + t.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\") + \" {\\n\"\n\t\t\t\t\t+ [for (field in t.fields)\n\t\t\t\t\t\ttabs + (field.doc != null && field.doc != \"\" ? \"/**\\n\" + tabs + tabString + StringTools.replace(field.doc, \"\\n\", \"\\n\" + tabs + tabString) + \"\\n\" + tabs + \"**/\\n\" + tabs : \"\")\n\t\t\t\t\t\t+ (field.meta != null && field.meta.length > 0 ? field.meta.map(printMetadata).join(\" \") + \" \" : \"\")\n\t\t\t\t\t\t+ (switch(field.kind) {\n\t\t\t\t\t\t\tcase FVar(t, _): field.name + opt(t, printComplexType, \":\");\n\t\t\t\t\t\t\tcase FProp(_, _, _, _): throw \"FProp is invalid for TDEnum.\";\n\t\t\t\t\t\t\tcase FFun(func): field.name + printFunction(func);\n\t\t\t\t\t\t}) + \";\"\n\t\t\t\t\t].join(\"\\n\")\n\t\t\t\t\t+ \"\\n}\";\n\t\t\t\tcase TDStructure:\n\t\t\t\t\t\"typedef \" + t.name + (t.params.length > 0 ? \"<\" + t.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\") + \" = {\\n\"\n\t\t\t\t\t+ [for (f in t.fields) {\n\t\t\t\t\t\ttabs + printField(f) + \";\";\n\t\t\t\t\t}].join(\"\\n\")\n\t\t\t\t\t+ \"\\n}\";\n\t\t\t\tcase TDClass(superClass, interfaces, isInterface):\n\t\t\t\t\t(isInterface ? \"interface \" : \"class \") + t.name + (t.params.length > 0 ? \"<\" + t.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\")\n\t\t\t\t\t+ (superClass != null ? \" extends \" + printTypePath(superClass) : \"\")\n\t\t\t\t\t+ (interfaces != null ? (isInterface ? [for (tp in interfaces) \" extends \" + printTypePath(tp)] : [for (tp in interfaces) \" implements \" + printTypePath(tp)]).join(\"\") : \"\")\n\t\t\t\t\t+ \" {\\n\"\n\t\t\t\t\t+ [for (f in t.fields) {\n\t\t\t\t\t\tvar fstr = printField(f);\n\t\t\t\t\t\ttabs + fstr + switch(f.kind) {\n\t\t\t\t\t\t\tcase FVar(_, _), FProp(_, _, _, _): \";\";\n\t\t\t\t\t\t\tcase FFun(func) if (func.expr == null): \";\";\n\t\t\t\t\t\t\tcase _: \"\";\n\t\t\t\t\t\t};\n\t\t\t\t\t}].join(\"\\n\")\n\t\t\t\t\t+ \"\\n}\";\n\t\t\t\tcase TDAlias(ct):\n\t\t\t\t\t\"typedef \" + t.name + (t.params.length > 0 ? \"<\" + t.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\") + \" = \"\n\t\t\t\t\t+ (switch(ct) {\n\t\t\t\t\t\tcase TExtend(tpl, fields): printExtension(tpl, fields);\n\t\t\t\t\t\tcase TAnonymous(fields): printStructure(fields);\n\t\t\t\t\t\tcase _: printComplexType(ct);\n\t\t\t\t\t})\n\t\t\t\t\t+ \";\";\n\t\t\t\tcase TDAbstract(tthis, from, to):\n\t\t\t\t\t\"abstract \" + t.name\n\t\t\t\t\t+ (t.params.length > 0 ? \"<\" + t.params.map(printTypeParamDecl).join(\", \") + \">\" : \"\")\n\t\t\t\t\t+ (tthis == null ? \"\" : \"(\" + printComplexType(tthis) + \")\")\n\t\t\t\t\t+ (from == null ? \"\" : [for (f in from) \" from \" + printComplexType(f)].join(\"\"))\n\t\t\t\t\t+ (to == null ? \"\" : [for (t in to) \" to \" + printComplexType(t)].join(\"\"))\n\t\t\t\t\t+ \" {\\n\"\n\t\t\t\t\t+ [for (f in t.fields) {\n\t\t\t\t\t\tvar fstr = printField(f);\n\t\t\t\t\t\ttabs + fstr + switch(f.kind) {\n\t\t\t\t\t\t\tcase FVar(_, _), FProp(_, _, _, _): \";\";\n\t\t\t\t\t\t\tcase FFun(func) if (func.expr == null): \";\";\n\t\t\t\t\t\t\tcase _: \"\";\n\t\t\t\t\t\t};\n\t\t\t\t\t}].join(\"\\n\")\n\t\t\t\t\t+ \"\\n}\";\n\t\t\t}\n\n\t\ttabs = old;\n\t\treturn str;\n\t}\n\n\tfunction opt<T>(v:T, f:T->String, prefix = \"\") return v == null ? \"\" : (prefix + f(v));\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.xml;\n\nprivate class NodeAccess implements Dynamic<Fast> {\n\n\tvar __x : Xml;\n\n\tpublic function new( x : Xml ) {\n\t\t__x = x;\n\t}\n\n\tpublic function resolve( name : String ) : Fast {\n\t\tvar x = __x.elementsNamed(name).next();\n\t\tif( x == null ) {\n\t\t\tvar xname = if( __x.nodeType == Xml.Document ) \"Document\" else __x.nodeName;\n\t\t\tthrow xname+\" is missing element \"+name;\n\t\t}\n\t\treturn new Fast(x);\n\t}\n\n}\n\nprivate class AttribAccess implements Dynamic<String> {\n\n\tvar __x : Xml;\n\n\tpublic function new( x : Xml ) {\n\t\t__x = x;\n\t}\n\n\tpublic function resolve( name : String ) : String {\n\t\tif( __x.nodeType == Xml.Document )\n\t\t\tthrow \"Cannot access document attribute \"+name;\n\t\tvar v = __x.get(name);\n\t\tif( v == null )\n\t\t\tthrow __x.nodeName+\" is missing attribute \"+name;\n\t\treturn v;\n\t}\n\n}\n\nprivate class HasAttribAccess implements Dynamic<Bool> {\n\n\tvar __x : Xml;\n\n\tpublic function new( x : Xml ) {\n\t\t__x = x;\n\t}\n\n\tpublic function resolve( name : String ) : Bool {\n\t\tif( __x.nodeType == Xml.Document )\n\t\t\tthrow \"Cannot access document attribute \"+name;\n\t\treturn __x.exists(name);\n\t}\n\n}\n\nprivate class HasNodeAccess implements Dynamic<Bool> {\n\n\tvar __x : Xml;\n\n\tpublic function new( x : Xml ) {\n\t\t__x = x;\n\t}\n\n\tpublic function resolve( name : String ) : Bool {\n\t\treturn __x.elementsNamed(name).hasNext();\n\t}\n\n}\n\nprivate class NodeListAccess implements Dynamic<List<Fast>> {\n\n\tvar __x : Xml;\n\n\tpublic function new( x : Xml ) {\n\t\t__x = x;\n\t}\n\n\tpublic function resolve( name : String ) : List<Fast> {\n\t\tvar l = new List();\n\t\tfor( x in __x.elementsNamed(name) )\n\t\t\tl.add(new Fast(x));\n\t\treturn l;\n\t}\n\n}\n\nclass Fast {\n\n\tpublic var x(default,null) : Xml;\n\tpublic var name(get,null) : String;\n\tpublic var innerData(get,null) : String;\n\tpublic var innerHTML(get,null) : String;\n\tpublic var node(default,null) : NodeAccess;\n\tpublic var nodes(default,null) : NodeListAccess;\n\tpublic var att(default,null) : AttribAccess;\n\tpublic var has(default,null) : HasAttribAccess;\n\tpublic var hasNode(default,null) : HasNodeAccess;\n\tpublic var elements(get,null) : Iterator<Fast>;\n\n\tpublic function new( x : Xml ) {\n\t\tif( x.nodeType != Xml.Document && x.nodeType != Xml.Element )\n\t\t\tthrow \"Invalid nodeType \"+x.nodeType;\n\t\tthis.x = x;\n\t\tnode = new NodeAccess(x);\n\t\tnodes = new NodeListAccess(x);\n\t\tatt = new AttribAccess(x);\n\t\thas = new HasAttribAccess(x);\n\t\thasNode = new HasNodeAccess(x);\n\t}\n\n\tfunction get_name() {\n\t\treturn if( x.nodeType == Xml.Document ) \"Document\" else x.nodeName;\n\t}\n\n\tfunction get_innerData() {\n\t\tvar it = x.iterator();\n\t\tif( !it.hasNext() )\n\t\t\tthrow name+\" does not have data\";\n\t\tvar v = it.next();\n\t\tvar n = it.next();\n\t\tif( n != null ) {\n\t\t\t// handle <spaces>CDATA<spaces>\n\t\t\tif( v.nodeType == Xml.PCData && n.nodeType == Xml.CData && StringTools.trim(v.nodeValue) == \"\" ) {\n\t\t\t\tvar n2 = it.next();\n\t\t\t\tif( n2 == null || (n2.nodeType == Xml.PCData && StringTools.trim(n2.nodeValue) == \"\" && it.next() == null) )\n\t\t\t\t\treturn n.nodeValue;\n\t\t\t}\n\t\t\tthrow name+\" does not only have data\";\n\t\t}\n\t\tif( v.nodeType != Xml.PCData && v.nodeType != Xml.CData )\n\t\t\tthrow name+\" does not have data\";\n\t\treturn v.nodeValue;\n\t}\n\n\tfunction get_innerHTML() {\n\t\tvar s = new StringBuf();\n\t\tfor( x in x )\n\t\t\ts.add(x.toString());\n\t\treturn s.toString();\n\t}\n\n\tfunction get_elements() {\n\t\tvar it = x.elements();\n\t\treturn {\n\t\t\thasNext : it.hasNext,\n\t\t\tnext : function() {\n\t\t\t\tvar x = it.next();\n\t\t\t\tif( x == null )\n\t\t\t\t\treturn null;\n\t\t\t\treturn new Fast(x);\n\t\t\t}\n\t\t};\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.xml;\n\nusing StringTools;\n\n/* poor'man enum : reduce code size + a bit faster since inlined */\nextern private class S {\n\tpublic static inline var IGNORE_SPACES \t= 0;\n\tpublic static inline var BEGIN\t\t\t= 1;\n\tpublic static inline var BEGIN_NODE\t\t= 2;\n\tpublic static inline var TAG_NAME\t\t= 3;\n\tpublic static inline var BODY\t\t\t= 4;\n\tpublic static inline var ATTRIB_NAME\t= 5;\n\tpublic static inline var EQUALS\t\t\t= 6;\n\tpublic static inline var ATTVAL_BEGIN\t= 7;\n\tpublic static inline var ATTRIB_VAL\t\t= 8;\n\tpublic static inline var CHILDS\t\t\t= 9;\n\tpublic static inline var CLOSE\t\t\t= 10;\n\tpublic static inline var WAIT_END\t\t= 11;\n\tpublic static inline var WAIT_END_RET\t= 12;\n\tpublic static inline var PCDATA\t\t\t= 13;\n\tpublic static inline var HEADER\t\t\t= 14;\n\tpublic static inline var COMMENT\t\t= 15;\n\tpublic static inline var DOCTYPE\t\t= 16;\n\tpublic static inline var CDATA\t\t\t= 17;\n\tpublic static inline var ESCAPE\t\t\t= 18;\n}\n\nclass Parser\n{\n\tstatic var escapes = {\n\t\tvar h = new haxe.ds.StringMap();\n\t\th.set(\"lt\", \"<\");\n\t\th.set(\"gt\", \">\");\n\t\th.set(\"amp\", \"&\");\n\t\th.set(\"quot\", '\"');\n\t\th.set(\"apos\", \"'\");\n\t\th.set(\"nbsp\", String.fromCharCode(160));\n\t\th;\n\t}\n\n\tstatic public function parse(str:String)\n\t{\n\t\tvar doc = Xml.createDocument();\n\t\tdoParse(str, 0, doc);\n\t\treturn doc;\n\t}\n\n\tstatic function doParse(str:String, p:Int = 0, ?parent:Xml):Int\n\t{\n\t\tvar xml:Xml = null;\n\t\tvar state = S.BEGIN;\n\t\tvar next = S.BEGIN;\n\t\tvar aname = null;\n\t\tvar start = 0;\n\t\tvar nsubs = 0;\n\t\tvar nbrackets = 0;\n\t\tvar c = str.fastCodeAt(p);\n\t\tvar buf = new StringBuf();\n\t\twhile (!StringTools.isEof(c))\n\t\t{\n\t\t\tswitch(state)\n\t\t\t{\n\t\t\t\tcase S.IGNORE_SPACES:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase\n\t\t\t\t\t\t\t'\\n'.code,\n\t\t\t\t\t\t\t'\\r'.code,\n\t\t\t\t\t\t\t'\\t'.code,\n\t\t\t\t\t\t\t' '.code:\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = next;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.BEGIN:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '<'.code:\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.BEGIN_NODE;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tstate = S.PCDATA;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.PCDATA:\n\t\t\t\t\tif (c == '<'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\t#if php\n\t\t\t\t\t\tvar child = Xml.createPCDataFromCustomParser(buf.toString() + str.substr(start, p - start));\n\t\t\t\t\t\t#else\n\t\t\t\t\t\tvar child = Xml.createPCData(buf.toString() + str.substr(start, p - start));\n\t\t\t\t\t\t#end\n\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\tparent.addChild(child);\n\t\t\t\t\t\tnsubs++;\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BEGIN_NODE;\n\t\t\t\t\t}\n\t\t\t\t\t#if !flash9\n\t\t\t\t\telse if (c == '&'.code) {\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tstate = S.ESCAPE;\n\t\t\t\t\t\tnext = S.PCDATA;\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t}\n\t\t\t\t\t#end\n\t\t\t\tcase S.CDATA:\n\t\t\t\t\tif (c == ']'.code && str.fastCodeAt(p + 1) == ']'.code && str.fastCodeAt(p + 2) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar child = Xml.createCData(str.substr(start, p - start));\n\t\t\t\t\t\tparent.addChild(child);\n\t\t\t\t\t\tnsubs++;\n\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.BEGIN_NODE:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '!'.code:\n\t\t\t\t\t\t\tif (str.fastCodeAt(p + 1) == '['.code)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\t\t\tif (str.substr(p, 6).toUpperCase() != \"CDATA[\")\n\t\t\t\t\t\t\t\t\tthrow(\"Expected <![CDATA[\");\n\t\t\t\t\t\t\t\tp += 5;\n\t\t\t\t\t\t\t\tstate = S.CDATA;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (str.fastCodeAt(p + 1) == 'D'.code || str.fastCodeAt(p + 1) == 'd'.code)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(str.substr(p + 2, 6).toUpperCase() != \"OCTYPE\")\n\t\t\t\t\t\t\t\t\tthrow(\"Expected <!DOCTYPE\");\n\t\t\t\t\t\t\t\tp += 8;\n\t\t\t\t\t\t\t\tstate = S.DOCTYPE;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if( str.fastCodeAt(p + 1) != '-'.code || str.fastCodeAt(p + 2) != '-'.code )\n\t\t\t\t\t\t\t\tthrow(\"Expected <!--\");\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\t\t\tstate = S.COMMENT;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase '?'.code:\n\t\t\t\t\t\t\tstate = S.HEADER;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\tcase '/'.code:\n\t\t\t\t\t\t\tif( parent == null )\n\t\t\t\t\t\t\t\tthrow(\"Expected node name\");\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.CLOSE;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = S.TAG_NAME;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.TAG_NAME:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tif( p == start )\n\t\t\t\t\t\t\tthrow(\"Expected node name\");\n\t\t\t\t\t\txml = Xml.createElement(str.substr(start, p - start));\n\t\t\t\t\t\tparent.addChild(xml);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BODY;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.BODY:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '/'.code:\n\t\t\t\t\t\t\tstate = S.WAIT_END;\n\t\t\t\t\t\t\tnsubs++;\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tstate = S.CHILDS;\n\t\t\t\t\t\t\tnsubs++;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = S.ATTRIB_NAME;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTRIB_NAME:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp;\n\t\t\t\t\t\tif( start == p )\n\t\t\t\t\t\t\tthrow(\"Expected attribute name\");\n\t\t\t\t\t\ttmp = str.substr(start,p-start);\n\t\t\t\t\t\taname = tmp;\n\t\t\t\t\t\tif( xml.exists(aname) )\n\t\t\t\t\t\t\tthrow(\"Duplicate attribute\");\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.EQUALS;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.EQUALS:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '='.code:\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.ATTVAL_BEGIN;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow(\"Expected =\");\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTVAL_BEGIN:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '\"'.code, '\\''.code:\n\t\t\t\t\t\t\tstate = S.ATTRIB_VAL;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow(\"Expected \\\"\");\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTRIB_VAL:\n\t\t\t\t\tif (c == str.fastCodeAt(start))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar val = str.substr(start+1,p-start-1);\n\t\t\t\t\t\txml.set(aname, val);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BODY;\n\t\t\t\t\t}\n\t\t\t\tcase S.CHILDS:\n\t\t\t\t\tp = doParse(str, p, xml);\n\t\t\t\t\tstart = p;\n\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\tcase S.WAIT_END:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tthrow(\"Expected >\");\n\t\t\t\t\t}\n\t\t\t\tcase S.WAIT_END_RET:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tif( nsubs == 0 )\n\t\t\t\t\t\t\t\tparent.addChild(Xml.createPCData(\"\"));\n\t\t\t\t\t\t\treturn p;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tthrow(\"Expected >\");\n\t\t\t\t\t}\n\t\t\t\tcase S.CLOSE:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tif( start == p )\n\t\t\t\t\t\t\tthrow(\"Expected node name\");\n\n\t\t\t\t\t\tvar v = str.substr(start,p - start);\n\t\t\t\t\t\tif (v != parent.nodeName)\n\t\t\t\t\t\t\tthrow \"Expected </\" +parent.nodeName + \">\";\n\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.WAIT_END_RET;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.COMMENT:\n\t\t\t\t\tif (c == '-'.code && str.fastCodeAt(p +1) == '-'.code && str.fastCodeAt(p + 2) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tparent.addChild(Xml.createComment(str.substr(start, p - start)));\n\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.DOCTYPE:\n\t\t\t\t\tif(c == '['.code)\n\t\t\t\t\t\tnbrackets++;\n\t\t\t\t\telse if(c == ']'.code)\n\t\t\t\t\t\tnbrackets--;\n\t\t\t\t\telse if (c == '>'.code && nbrackets == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tparent.addChild(Xml.createDocType(str.substr(start, p - start)));\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.HEADER:\n\t\t\t\t\tif (c == '?'.code && str.fastCodeAt(p + 1) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tp++;\n\t\t\t\t\t\tvar str = str.substr(start + 1, p - start - 2);\n\t\t\t\t\t\tparent.addChild(Xml.createProcessingInstruction(str));\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.ESCAPE:\n\t\t\t\t\tif (c == ';'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar s = str.substr(start, p - start);\n\t\t\t\t\t\tif (s.fastCodeAt(0) == '#'.code) {\n\t\t\t\t\t\t\tvar i = s.fastCodeAt(1) == 'x'.code\n\t\t\t\t\t\t\t\t? Std.parseInt(\"0\" +s.substr(1, s.length - 1))\n\t\t\t\t\t\t\t\t: Std.parseInt(s.substr(1, s.length - 1));\n\t\t\t\t\t\t\tbuf.add(String.fromCharCode(i));\n\t\t\t\t\t\t} else if (!escapes.exists(s))\n\t\t\t\t\t\t\tbuf.add('&$s;');\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tbuf.add(escapes.get(s));\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tstate = next;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tc = str.fastCodeAt(++p);\n\t\t}\n\n\t\tif (state == S.BEGIN)\n\t\t{\n\t\t\tstart = p;\n\t\t\tstate = S.PCDATA;\n\t\t}\n\n\t\tif (state == S.PCDATA)\n\t\t{\n\t\t\tif (p != start || nsubs == 0)\n\t\t\t\tparent.addChild(Xml.createPCData(buf.toString() + str.substr(start, p - start)));\n\t\t\treturn p;\n\t\t}\n\n\t\tthrow \"Unexpected end\";\n\t}\n\n\tstatic inline function isValidChar(c) {\n\t\treturn (c >= 'a'.code && c <= 'z'.code) || (c >= 'A'.code && c <= 'Z'.code) || (c >= '0'.code && c <= '9'.code) || c == ':'.code || c == '.'.code || c == '_'.code || c == '-'.code;\n\t}\n}","package haxeparser;\n\nimport haxe.macro.Expr;\n\nenum Keyword {\n\tKwdFunction;\n\tKwdClass;\n\tKwdVar;\n\tKwdIf;\n\tKwdElse;\n\tKwdWhile;\n\tKwdDo;\n\tKwdFor;\n\tKwdBreak;\n\tKwdContinue;\n\tKwdReturn;\n\tKwdExtends;\n\tKwdImplements;\n\tKwdImport;\n\tKwdSwitch;\n\tKwdCase;\n\tKwdDefault;\n\tKwdStatic;\n\tKwdPublic;\n\tKwdPrivate;\n\tKwdTry;\n\tKwdCatch;\n\tKwdNew;\n\tKwdThis;\n\tKwdThrow;\n\tKwdExtern;\n\tKwdEnum;\n\tKwdIn;\n\tKwdInterface;\n\tKwdUntyped;\n\tKwdCast;\n\tKwdOverride;\n\tKwdTypedef;\n\tKwdDynamic;\n\tKwdPackage;\n\tKwdInline;\n\tKwdUsing;\n\tKwdNull;\n\tKwdTrue;\n\tKwdFalse;\n\tKwdAbstract;\n\tKwdMacro;\n}\n\nenum TokenDef {\n\tKwd(k:Keyword);\n\tConst(c:haxe.macro.Expr.Constant);\n\tSharp(s:String);\n\tDollar(s:String);\n\tUnop(op:haxe.macro.Expr.Unop);\n\tBinop(op:haxe.macro.Expr.Binop);\n\tComment(s:String);\n\tCommentLine(s:String);\n\tIntInterval(s:String);\n\tSemicolon;\n\tDot;\n\tDblDot;\n\tArrow;\n\tComma;\n\tBkOpen;\n\tBkClose;\n\tBrOpen;\n\tBrClose;\n\tPOpen;\n\tPClose;\n\tQuestion;\n\tAt;\n\tEof;\n}\n\nclass TokenDefPrinter {\n\tstatic public function print(def:TokenDef) {\n\t\treturn switch(def) {\n\t\t\tcase Kwd(k): k.getName().substr(3).toLowerCase();\n\t\t\tcase Const(CInt(s) | CFloat(s) | CIdent(s)): s;\n\t\t\tcase Const(CString(s)): '\"$s\"';\n\t\t\tcase Const(CRegexp(r, opt)): '~/$r/$opt';\n\t\t\tcase Sharp(s): '#$s';\n\t\t\tcase Dollar(s): '$$$s';\n\t\t\tcase Unop(op): new haxe.macro.Printer(\"\").printUnop(op);\n\t\t\tcase Binop(op): new haxe.macro.Printer(\"\").printBinop(op);\n\t\t\tcase Comment(s): '/*$s/*';\n\t\t\tcase CommentLine(s): '//$s';\n\t\t\tcase IntInterval(s): '$s...';\n\t\t\tcase Semicolon: \";\";\n\t\t\tcase Dot: \".\";\n\t\t\tcase DblDot: \":\";\n\t\t\tcase Arrow: \"->\";\n\t\t\tcase Comma: \",\";\n\t\t\tcase BkOpen: \"[\";\n\t\t\tcase BkClose: \"]\";\n\t\t\tcase BrOpen: \"{\";\n\t\t\tcase BrClose: \"}\";\n\t\t\tcase POpen: \"(\";\n\t\t\tcase PClose: \")\";\n\t\t\tcase Question: \"?\";\n\t\t\tcase At: \"@\";\n\t\t\tcase Eof: \"<eof>\";\n\t\t}\n\t}\n}\n\nclass Token {\n\tpublic var tok: TokenDef;\n\tpublic var pos: Position;\n\t#if keep_whitespace\n\tpublic var space = \"\";\n\t#end\n\tpublic function new(tok, pos) {\n\t\tthis.tok = tok;\n\t\tthis.pos = pos;\n\t}\n\t\n\tpublic function toString() {\n\t\treturn TokenDefPrinter.print(tok);\n\t}\n}\n\ntypedef EnumConstructor = {\n\tname : String,\n\tdoc: String,\n\tmeta: Metadata,\n\targs: Array<{ name: String, opt: Bool, type: ComplexType}>,\n\tpos: Position,\n\tparams: Array<TypeParamDecl>,\n\ttype: Null<ComplexType>\n}\n\ntypedef Definition<A,B> = {\n\tname : String,\n\tdoc: String,\n\tparams: Array<TypeParamDecl>,\n\tmeta: Metadata,\n\tflags: Array<A>,\n\tdata: B\n}\n\nenum TypeDef {\n\tEClass(d:Definition<ClassFlag, Array<Field>>);\n\tEEnum(d:Definition<EnumFlag, Array<EnumConstructor>>);\n\tEAbstract(a:Definition<AbstractFlag, Array<Field>>);\n\tEImport(sl:Array<{pack:String, pos:Position}>, mode:ImportMode);\n\tETypedef(d:Definition<EnumFlag, ComplexType>);\n\tEUsing(path:TypePath);\n}\n\ntypedef TypeDecl = {\n\tdecl : TypeDef,\n\tpos : Position\n}\n\nenum ClassFlag {\n\tHInterface;\n\tHExtern;\n\tHPrivate;\n\tHExtends(t:TypePath);\n\tHImplements(t:TypePath);\n}\n\nenum AbstractFlag {\n\tAPrivAbstract;\n\tAFromType(ct:ComplexType);\n\tAToType(ct:ComplexType);\n\tAIsType(ct:ComplexType);\n}\n\nenum EnumFlag {\n\tEPrivate;\n\tEExtern;\n}\n\nenum ImportMode {\n\tINormal;\n\tIAsName(s:String);\n\tIAll;\n}","package haxeparser;\n\nimport haxeparser.Data;\nimport haxe.macro.Expr;\nimport hxparse.Lexer;\n\nenum LexerErrorMsg {\n\tUnterminatedString;\n\tUnterminatedRegExp;\n\tUnclosedComment;\n\tUnterminatedEscapeSequence;\n\tInvalidEscapeSequence(c:String);\n\tUnknownEscapeSequence(c:String);\n}\n\nclass LexerError {\n\tpublic var msg:LexerErrorMsg;\n\tpublic var pos:Position;\n\tpublic function new(msg, pos) {\n\t\tthis.msg = msg;\n\t\tthis.pos = pos;\n\t}\n}\n\nclass HaxeLexer extends Lexer implements hxparse.RuleBuilder {\n\n\tstatic function mkPos(p:hxparse.Position) {\n\t\treturn {\n\t\t\tfile: p.psource,\n\t\t\tmin: p.pmin,\n\t\t\tmax: p.pmax\n\t\t};\n\t}\n\t\n\tstatic function mk(lexer:Lexer, td) {\n\t\treturn new Token(td, mkPos(lexer.curPos()));\n\t}\n\t\n\t// @:mapping generates a map with lowercase enum constructor names as keys\n\t// and the constructor itself as value\n\tstatic var keywords = @:mapping(3) Data.Keyword;\n\t\n\tstatic var buf = new StringBuf();\n\t\n\tstatic var ident = \"_*[a-z][a-zA-Z0-9_]*|_+|_+[0-9][_a-zA-Z0-9]*\";\n\tstatic var idtype = \"_*[A-Z][a-zA-Z0-9_]*\";\n\t\n\t// @:rule wraps the expression to the right of => with function(lexer) return\n\tpublic static var tok = @:rule [\n\t\t\"\" => mk(lexer, Eof),\n\t\t\"[\\r\\n\\t ]+\" => {\n\t\t\t#if keep_whitespace\n\t\t\tvar space = lexer.current;\n\t\t\tvar token:Token = lexer.token(tok);\n\t\t\ttoken.space = space;\n\t\t\ttoken;\n\t\t\t#else\n\t\t\tlexer.token(tok);\n\t\t\t#end\n\t\t},\n\t\t\"0x[0-9a-fA-F]+\" => mk(lexer, Const(CInt(lexer.current))),\n\t\t\"[0-9]+\" => mk(lexer, Const(CInt(lexer.current))),\n\t\t\"[0-9]+\\\\.[0-9]+\" => mk(lexer, Const(CFloat(lexer.current))),\n\t\t\"\\\\.[0-9]+\" => mk(lexer, Const(CFloat(lexer.current))),\n\t\t\"[0-9]+[eE][\\\\+\\\\-]?[0-9]+\" => mk(lexer,Const(CFloat(lexer.current))),\n\t\t\"[0-9]+\\\\.[0-9]*[eE][\\\\+\\\\-]?[0-9]+\" => mk(lexer,Const(CFloat(lexer.current))),\n\t\t\"[0-9]+\\\\.\\\\.\\\\.\" => mk(lexer,IntInterval(lexer.current.substr(0,-3))),\n\t\t\"//[^\\n\\r]*\" => mk(lexer, CommentLine(lexer.current.substr(2))),\n\t\t\"+\\\\+\" => mk(lexer,Unop(OpIncrement)),\n\t\t\"--\" => mk(lexer,Unop(OpDecrement)),\n\t\t\"~\" => mk(lexer,Unop(OpNegBits)),\n\t\t\"%=\" => mk(lexer,Binop(OpAssignOp(OpMod))),\n\t\t\"&=\" => mk(lexer,Binop(OpAssignOp(OpAnd))),\n\t\t\"|=\" => mk(lexer,Binop(OpAssignOp(OpOr))),\n\t\t\"^=\" => mk(lexer,Binop(OpAssignOp(OpXor))),\n\t\t\"+=\" => mk(lexer,Binop(OpAssignOp(OpAdd))),\n\t\t\"-=\" => mk(lexer,Binop(OpAssignOp(OpSub))),\n\t\t\"*=\" => mk(lexer,Binop(OpAssignOp(OpMult))),\n\t\t\"/=\" => mk(lexer,Binop(OpAssignOp(OpDiv))),\n\t\t\"<<=\" => mk(lexer,Binop(OpAssignOp(OpShl))),\n\t\t\"==\" => mk(lexer,Binop(OpEq)),\n\t\t\"!=\" => mk(lexer,Binop(OpNotEq)),\n\t\t\"<=\" => mk(lexer,Binop(OpLte)),\n\t\t\"&&\" => mk(lexer,Binop(OpBoolAnd)),\n\t\t\"|\\\\|\" => mk(lexer,Binop(OpBoolOr)),\n\t\t\"<<\" => mk(lexer,Binop(OpShl)),\n\t\t\"->\" => mk(lexer,Arrow),\n\t\t\"\\\\.\\\\.\\\\.\" => mk(lexer,Binop(OpInterval)),\n\t\t\"=>\" => mk(lexer,Binop(OpArrow)),\n\t\t\"!\" => mk(lexer,Unop(OpNot)),\n\t\t\"<\" => mk(lexer,Binop(OpLt)),\n\t\t\">\" => mk(lexer,Binop(OpGt)),\n\t\t\";\" => mk(lexer, Semicolon),\n\t\t\":\" => mk(lexer, DblDot),\n\t\t\",\" => mk(lexer, Comma),\n\t\t\"\\\\.\" => mk(lexer, Dot),\n\t\t\"%\" => mk(lexer,Binop(OpMod)),\n\t\t\"&\" => mk(lexer,Binop(OpAnd)),\n\t\t\"|\" => mk(lexer,Binop(OpOr)),\n\t\t\"^\" => mk(lexer,Binop(OpXor)),\n\t\t\"+\" => mk(lexer,Binop(OpAdd)),\n\t\t\"*\" => mk(lexer,Binop(OpMult)),\n\t\t\"/\" => mk(lexer,Binop(OpDiv)),\n\t\t\"-\" => mk(lexer,Binop(OpSub)),\n\t\t\"=\" => mk(lexer,Binop(OpAssign)),\n\t\t\"[\" => mk(lexer, BkOpen),\n\t\t\"]\" => mk(lexer, BkClose),\n\t\t\"{\" => mk(lexer, BrOpen),\n\t\t\"}\" => mk(lexer, BrClose),\n\t\t\"\\\\(\" => mk(lexer, POpen),\n\t\t\"\\\\)\" => mk(lexer, PClose),\n\t\t\"?\" => mk(lexer, Question),\n\t\t\"@\" => mk(lexer, At),\n\t\t'\"' => {\n\t\t\tbuf = new StringBuf();\n\t\t\tvar pmin = lexer.curPos();\n\t\t\tvar pmax = try lexer.token(string) catch (e:haxe.io.Eof) throw new LexerError(UnterminatedString, mkPos(pmin));\n\t\t\tvar token = mk(lexer, Const(CString(unescape(buf.toString(), mkPos(pmin)))));\n\t\t\ttoken.pos.min = pmin.pmin; token;\n\t\t},\n\t\t\"'\" => {\n\t\t\tbuf = new StringBuf();\n\t\t\tvar pmin = lexer.curPos();\n\t\t\tvar pmax = try lexer.token(string2) catch (e:haxe.io.Eof) throw new LexerError(UnterminatedString, mkPos(pmin));\n\t\t\tvar token = mk(lexer, Const(CString(unescape(buf.toString(), mkPos(pmin)))));\n\t\t\ttoken.pos.min = pmin.pmin; token;\n\t\t},\n\t\t'~/' => {\n\t\t\tbuf = new StringBuf();\n\t\t\tvar pmin = lexer.curPos();\n\t\t\tvar info = try lexer.token(regexp) catch (e:haxe.io.Eof) throw new LexerError(UnterminatedRegExp, mkPos(pmin));\n\t\t\tvar token = mk(lexer, Const(CRegexp(buf.toString(), info.opt)));\n\t\t\ttoken.pos.min = pmin.pmin; token;\n\t\t},\n\t\t'/\\\\*' => {\n\t\t\tbuf = new StringBuf();\n\t\t\tvar pmin = lexer.curPos();\n\t\t\tvar pmax = try lexer.token(comment) catch (e:haxe.io.Eof) throw new LexerError(UnclosedComment, mkPos(pmin));\n\t\t\tvar token = mk(lexer, Comment(buf.toString()));\n\t\t\ttoken.pos.min = pmin.pmin; token;\n\t\t},\n\t\t\"#\" + ident => mk(lexer, Sharp(lexer.current.substr(1))),\n\t\t\"$[_a-zA-Z0-9]*\" => mk(lexer, Dollar(lexer.current.substr(1))),\n\t\tident => {\n\t\t\tvar kwd = keywords.get(lexer.current);\n\t\t\tif (kwd != null)\n\t\t\t\tmk(lexer, Kwd(kwd));\n\t\t\telse\n\t\t\t\tmk(lexer, Const(CIdent(lexer.current)));\n\t\t},\n\t\tidtype => mk(lexer, Const(CIdent(lexer.current))),\n\t];\n\t\n\tpublic static var string = @:rule [\n\t\t\"\\\\\\\\\\\\\\\\\" => {\n\t\t\tbuf.add(\"\\\\\\\\\");\n\t\t\tlexer.token(string);\n\t\t},\n\t\t\"\\\\\\\\\" => {\n\t\t\tbuf.add(\"\\\\\");\n\t\t\tlexer.token(string);\n\t\t},\n\t\t\"\\\\\\\\\\\"\" => {\n\t\t\tbuf.add('\"');\n\t\t\tlexer.token(string);\n\t\t},\n\t\t'\"' => lexer.curPos().pmax,\n\t\t\"[^\\\\\\\\\\\"]+\" => {\n\t\t\tbuf.add(lexer.current);\n\t\t\tlexer.token(string);\n\t\t}\n\t];\n\t\n\tpublic static var string2 = @:rule [\n\t\t\"\\\\\\\\\\\\\\\\\" => {\n\t\t\tbuf.add(\"\\\\\\\\\");\n\t\t\tlexer.token(string2);\n\t\t},\n\t\t\"\\\\\\\\\" => {\n\t\t\tbuf.add(\"\\\\\");\n\t\t\tlexer.token(string2);\n\t\t},\n\t\t'\\\\\\\\\\'' => {\n\t\t\tbuf.add(\"'\");\n\t\t\tlexer.token(string2);\n\t\t},\n\t\t\"'\" => lexer.curPos().pmax,\n\t\t'[^\\\\\\\\\\']+' => {\n\t\t\tbuf.add(lexer.current);\n\t\t\tlexer.token(string2);\n\t\t}\n\t];\n\t\n\tpublic static var comment = @:rule [\n\t\t\"*/\" => lexer.curPos().pmax,\n\t\t\"*\" => {\n\t\t\tbuf.add(\"*\");\n\t\t\tlexer.token(comment);\n\t\t},\n\t\t\"[^\\\\*]+\" => {\n\t\t\tbuf.add(lexer.current);\n\t\t\tlexer.token(comment);\n\t\t}\n\t];\n\n\tpublic static var regexp = @:rule [\n\t\t\"\\\\\\\\/\" => {\n\t\t\tbuf.add(\"/\");\n\t\t\tlexer.token(regexp);\n\t\t},\n\t\t\"\\\\\\\\r\" => {\n\t\t\tbuf.add(\"\\r\");\n\t\t\tlexer.token(regexp);\n\t\t},\n\t\t\"\\\\\\\\n\" => {\n\t\t\tbuf.add(\"\\n\");\n\t\t\tlexer.token(regexp);\n\t\t},\n\t\t\"\\\\\\\\t\" => {\n\t\t\tbuf.add(\"\\t\");\n\t\t\tlexer.token(regexp);\n\t\t},\n\t\t\"\\\\\\\\[\\\\\\\\$\\\\.*+\\\\^|{}\\\\[\\\\]()?\\\\-0-9]\" => {\n\t\t\tbuf.add(lexer.current);\n\t\t\tlexer.token(regexp);\n\t\t},\n\t\t\"\\\\\\\\[wWbBsSdDx]\" => {\n\t\t\tbuf.add(lexer.current);\n\t\t\tlexer.token(regexp);\n\t\t},\n\t\t\"/\" => {\n\t\t\tlexer.token(regexp_options);\n\t\t},\n\t\t\"[^\\\\\\\\/\\r\\n]+\" => {\n\t\t\tbuf.add(lexer.current);\n\t\t\tlexer.token(regexp);\n\t\t}\n\t];\n\n\tpublic static var regexp_options = @:rule [\n\t\t\"[gimsu]*\" => {\n\t\t\t{ pmax:lexer.curPos().pmax, opt:lexer.current };\n\t\t}\n\t];\n\t\n\tstatic inline function unescapePos(pos:Position, index:Int, length:Int) {\n\t\treturn {\n\t\t\tfile: pos.file,\n\t\t\tmin: pos.min + index,\n\t\t\tmax: pos.min + index + length\n\t\t}\n\t}\n\t\n\tstatic function unescape(s:String, pos:Position) {\n\t\tvar b = new StringBuf();\n\t\tvar i = 0;\n\t\tvar esc = false;\n\t\twhile (true) {\n\t\t\tif (s.length == i) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar c = s.charCodeAt(i);\n\t\t\tif (esc) {\n\t\t\t\tvar iNext = i + 1;\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'n'.code: b.add(\"\\n\");\n\t\t\t\t\tcase 'r'.code: b.add(\"\\r\");\n\t\t\t\t\tcase 't'.code: b.add(\"\\t\");\n\t\t\t\t\tcase '\"'.code | '\\''.code | '\\\\'.code: b.addChar(c);\n\t\t\t\t\tcase _ >= '0'.code && _ <= '3'.code => true:\n\t\t\t\t\t\tiNext += 2;\n\t\t\t\t\tcase 'x'.code:\n\t\t\t\t\t\tvar chars = s.substr(i + 1, 2);\n\t\t\t\t\t\tif (!(~/^[0-9a-fA-F]{2}$/.match(chars))) throw new LexerError(InvalidEscapeSequence(\"\\\\x\"+chars), unescapePos(pos, i, 1 + 2));\n\t\t\t\t\t\tvar c = Std.parseInt(\"0x\" + chars);\n\t\t\t\t\t\tb.addChar(c);\n\t\t\t\t\t\tiNext += 2;\n\t\t\t\t\tcase 'u'.code:\n\t\t\t\t\t\tvar c:Int;\n\t\t\t\t\t\tif (s.charAt(i + 1) == \"{\") {\n\t\t\t\t\t\t\tvar endIndex = s.indexOf(\"}\", i + 3);\n\t\t\t\t\t\t\tif (endIndex == -1) throw new LexerError(UnterminatedEscapeSequence, unescapePos(pos, i, 2));\n\t\t\t\t\t\t\tvar l = endIndex - (i + 2);\n\t\t\t\t\t\t\tvar chars = s.substr(i + 2, l);\n\t\t\t\t\t\t\tif (!(~/^[0-9a-fA-F]+$/.match(chars))) throw new LexerError(InvalidEscapeSequence(\"\\\\u{\"+chars+\"}\"), unescapePos(pos, i, 1 + 2 + l));\n\t\t\t\t\t\t\tc = Std.parseInt(\"0x\" + chars);\n\t\t\t\t\t\t\tif (c > 0x10FFFF) throw new LexerError(InvalidEscapeSequence(\"\\\\u{\"+chars+\"}\"), unescapePos(pos, i, 1 + 2 + l));\n\t\t\t\t\t\t\tiNext += 2 + l;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar chars = s.substr(i + 1, 4);\n\t\t\t\t\t\t\tif (!(~/^[0-9a-fA-F]{4}$/.match(chars))) throw new LexerError(InvalidEscapeSequence(\"\\\\u\"+chars), unescapePos(pos, i, 1 + 4));\n\t\t\t\t\t\t\tc = Std.parseInt(\"0x\" + chars);\n\t\t\t\t\t\t\tiNext += 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb.addChar(c);\n\t\t\t\t\tcase c:\n\t\t\t\t\t\tthrow new LexerError(UnknownEscapeSequence(\"\\\\\"+String.fromCharCode(c)), unescapePos(pos, i, 1));\n\t\t\t\t}\n\t\t\t\tesc = false;\n\t\t\t\ti = iNext;\n\t\t\t} else switch (c) {\n\t\t\t\tcase '\\\\'.code:\n\t\t\t\t\t++i;\n\t\t\t\t\tesc = true;\n\t\t\t\tcase _:\n\t\t\t\t\tb.addChar(c);\n\t\t\t\t\t++i;\n\t\t\t}\n\n\t\t}\n\t\treturn b.toString();\n\t}\n}","package hxparse;\n\n/**\n\tLexer matches a sequence of characters against a set of rule patterns.\n\n\tAn instance of Lexer is created once for each input and maintains state\n\tfor that input. Tokens can then be obtained by calling the `token` method,\n\tpassing an instance of `Ruleset`.\n\n\tRule sets can be created manually, or by calling the static `buildRuleset`\n\tmethod.\n**/\nclass Lexer {\n\n\t/**\n\t\tThe `String` that was matched by the most recent invocation of the\n\t\t`token` method.\n\t**/\n\tpublic var current(default, null):String;\n\n\tvar input:byte.ByteData;\n\tvar source:String;\n\tvar pos:Int;\n\n\t/**\n\t\tCreates a new Lexer for `input`.\n\n\t\tIf `sourceName` is provided, it is used in error messages to denote\n\t\tthe position of an error.\n\n\t\tIf `input` is null, the result is unspecified.\n\t**/\n\tpublic function new(input:byte.ByteData, sourceName:String = \"<null>\") {\n\t\tcurrent = \"\";\n\t\tthis.input = input;\n\t\tsource = sourceName;\n\t\tpos = 0;\n\t}\n\n\t/**\n\t\tReturns the current position of `this` Lexer.\n\t**/\n\tpublic inline function curPos():Position {\n\t\treturn new Position(source, pos - current.length, pos);\n\t}\n\n\t/**\n\t\tReturns the next token according to `ruleset`.\n\n\t\tThis method starts with `ruleset.state` and reads characters from `this`\n\t\tinput until no further state transitions are possible. It always returns\n\t\tthe longest match.\n\n\t\tIf a character is read which has no transition defined, an\n\t\t`UnexpectedChar` exception is thrown.\n\n\t\tIf the input is in the end of file state upon method invocation,\n\t\t`ruleset.eofFunction` is called with `this` Lexer as argument. If\n\t\t`ruleset` defines no `eofFunction` field, a `haxe.io.Eof` exception\n\t\tis thrown.\n\n\t\tIf `ruleset` is null, the result is unspecified.\n\t**/\n\tpublic function token<T>(ruleset:Ruleset<T>):T {\n\t\tif (pos == input.length) {\n\t\t\tif (ruleset.eofFunction != null) return ruleset.eofFunction(this);\n\t\t\telse throw new haxe.io.Eof();\n\t\t}\n\t\tvar state = ruleset.state;\n\t\tvar lastMatch = null;\n\t\tvar lastMatchPos = pos;\n\t\tvar start = pos;\n\n\t\t#if expose_lexer_state\n\t\tstateCallback(state, pos, -1);\n\t\t#end\n\n\t\twhile(true) {\n\t\t\tif (state.final > -1) {\n\t\t\t\tlastMatch = state;\n\t\t\t\tlastMatchPos = pos;\n\t\t\t}\n\t\t\tif (pos == input.length) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar i = input.readByte(pos);\n\t\t\t++pos;\n\t\t\tstate = state.trans.get(i);\n\n\t\t\t#if expose_lexer_state\n\t\t\tstateCallback(state, pos-1, i);\n\t\t\t#end\n\n\t\t\tif (state == null)\n\t\t\t\tbreak;\n\t\t}\n\t\tpos = lastMatchPos;\n\t\tcurrent = input.readString(start, pos - start);\n\t\tif (lastMatch == null || lastMatch.final == -1)\n\t\t\tthrow new UnexpectedChar(String.fromCharCode(input.readByte(pos)), curPos());\n\t\treturn ruleset.functions[lastMatch.final](this);\n\t}\n\n\t#if expose_lexer_state\n\t/**\n\n\t\t@param\tstate\t`null` if it's the last state visited\n\t\t@param\tposition\tPosition of the byte read\n\t\t@param\tinput\tTransition input byte, `-1` if initial state\n\t**/\n\tdynamic public function stateCallback(state:State, position:Int, input:Int) {}\n\t#end\n\n\t/**\n\t\tBuilds a `Ruleset` from the given `rules` `Array`.\n\n\t\tFor each element of `rules`, its `rule` `String` is parsed into a\n\t\t`Pattern` using `LexEngine.parse`.\n\n\t\tIf `rules` is null, the result is unspecified.\n\t**/\n\tstatic public function buildRuleset<Token>(rules:Array<{rule:String,func:Lexer->Token}>, name:String = \"\") {\n\t\tvar cases = [];\n\t\tvar functions = [];\n\t\tvar eofFunction = null;\n\t\tfor (rule in rules) {\n\t\t\tif (rule.rule == \"\") {\n\t\t\t\teofFunction = rule.func;\n\t\t\t} else {\n\t\t\t\tcases.push(LexEngine.parse(rule.rule));\n\t\t\t\tfunctions.push(rule.func);\n\t\t\t}\n\t\t}\n\t\treturn new Ruleset(new LexEngine(cases).firstState(), functions, eofFunction, name);\n\t}\n}","package hxparse;\n\n/**\n\tLexEngine handles pattern parsing and state transformation.\n\n\tThis class is used by the `Lexer` and rarely has to be interacted with\n\tdirectly.\n\n\tThe static `parse` method transforms a single `String` to a `Pattern`.\n\tMultiple patterns can then be passed to the constructor to generate the\n\tstate machine, which is obtainable from the `firstState` method.\n**/\nclass LexEngine {\n\n\tvar uid : Int;\n\tvar nodes : Array<Node>;\n\tvar finals : Array<Node>;\n\tvar states : Array<State>;\n\tvar hstates : Map<String,State>;\n\n\t/**\n\t\tCreates a new LexEngine from `patterns`.\n\n\t\tEach LexEngine maintains a state machine, whose initial state can be\n\t\tobtained from the `firstState` method. After this, `this` LexEngine can\n\t\tbe discarded.\n\n\t\tIf `patterns` is null, the result is unspecified.\n\t**/\n\tpublic function new( patterns : Array<Pattern> ) {\n\t\tnodes = [];\n\t\tfinals = [];\n\t\tstates = [];\n\t\thstates = new Map();\n\t\tuid = 0;\n\t\tvar pid = 0;\n\t\tfor ( p in patterns ) {\n\t\t\tvar id = pid++;\n\t\t\tvar f = node(id);\n\t\t\tvar n = initNode(p, f,id);\n\t\t\tnodes.push(n);\n\t\t\tfinals.push(f);\n\t\t}\n\t\tmakeState(addNodes([], nodes));\n\t}\n\n\t/**\n\t\tReturns the entry state of the state machine generated by `this`\n\t\tLexEngine.\n\t**/\n\tpublic function firstState() {\n\t\treturn states[0];\n\t}\n\n\tfunction makeState( nodes : Array<Node> ) {\n\t\tvar buf = new StringBuf();\n\t\tfor( n in nodes ) {\n\t\t\tbuf.add(n.id);\n\t\t\tbuf.addChar(\"-\".code);\n\t\t}\n\t\tvar key = buf.toString();\n\t\tvar s = hstates.get(key);\n\t\tif( s != null )\n\t\t\treturn s;\n\n\t\ts = new State();\n\t\tstates.push(s);\n\t\thstates.set(key, s);\n\n\t\tvar trans = getTransitions(nodes);\n\n\t\tfor ( t in trans ) {\n\t\t\tvar target = makeState(t.n);\n\t\t\tfor (chr in t.chars) {\n\t\t\t\tfor (i in chr.min...(chr.max + 1)) {\n\t\t\t\t\ts.trans.set(i, target);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction setFinal() {\n\t\t\tfor( f in finals )\n\t\t\t\tfor( n in nodes )\n\t\t\t\t\tif( n == f ) {\n\t\t\t\t\t\ts.final = n.pid;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t}\n\t\tif (s.final == -1)\n\t\t\tsetFinal();\n\t\treturn s;\n\t}\n\n\tfunction getTransitions( nodes : Array<Node> ) {\n\t\tvar tl = [];\n\t\tfor( n in nodes )\n\t\t\tfor( t in n.trans )\n\t\t\t\ttl.push(t);\n\n\t\t// Merge transition with the same target\n\t\ttl.sort(function(t1, t2) return t1.n.id - t2.n.id);\n\t\tvar t0 = tl[0];\n\t\tfor( i in 1...tl.length ) {\n\t\t\tvar t1 = tl[i];\n\t\t\tif( t0.n == t1.n ) {\n\t\t\t\ttl[i - 1] = null;\n\t\t\t\tt1 = { chars : cunion(t0.chars, t1.chars), n : t1.n };\n\t\t\t\ttl[i] = t1;\n\t\t\t}\n\t\t\tt0 = t1;\n\t\t}\n\t\twhile( tl.remove(null) ) {\n\t\t}\n\n\t\t// Split char sets to make them disjoint\n\t\tvar allChars = EMPTY;\n\t\tvar allStates = new List<{ chars : Charset, n : Array<Node> }>();\n\t\tfor( t in tl ) {\n\t\t\tvar states = new List();\n\t\t\tstates.push( { chars : cdiff(t.chars, allChars), n : [t.n] } );\n\t\t\tfor( s in allStates ) {\n\t\t\t\tvar nodes = s.n.copy();\n\t\t\t\tnodes.push(t.n);\n\t\t\t\tstates.push( { chars : cinter(s.chars,t.chars), n : nodes } );\n\t\t\t\tstates.push( { chars : cdiff(s.chars, t.chars), n : s.n } );\n\t\t\t}\n\t\t\tfor( s in states )\n\t\t\t\tif( s.chars.length == 0 )\n\t\t\t\t\tstates.remove(s);\n\t\t\tallChars = cunion(allChars, t.chars);\n\t\t\tallStates = states;\n\t\t}\n\n\t\t// Epsilon closure of targets\n\t\tvar states = [];\n\t\tfor( s in allStates )\n\t\t\tstates.push({ chars : s.chars, n : addNodes([], s.n) });\n\n\t\t// Canonical ordering\n\t\tstates.sort(function(s1, s2) {\n\t\t\tvar a = s1.chars.length;\n\t\t\tvar b = s2.chars.length;\n\t\t\tfor( i in 0...(a < b?a:b) ) {\n\t\t\t\tvar a = s1.chars[i];\n\t\t\t\tvar b = s2.chars[i];\n\t\t\t\tif( a.min != b.min )\n\t\t\t\t\treturn b.min - a.min;\n\t\t\t\tif( a.max != b.max )\n\t\t\t\t\treturn b.max - a.max;\n\t\t\t}\n\t\t\tif( a < b )\n\t\t\t\treturn b - a;\n\t\t\treturn 0;\n\t\t});\n\t\treturn states;\n\t}\n\n\tfunction addNode( nodes : Array<Node>, n : Node ) {\n\t\tfor( n2 in nodes )\n\t\t\tif( n == n2 )\n\t\t\t\treturn;\n\t\tnodes.push(n);\n\t\taddNodes(nodes, n.epsilon);\n\t}\n\n\tfunction addNodes( nodes : Array<Node>, add : Array<Node> ) {\n\t\tfor( n in add  )\n\t\t\taddNode(nodes, n);\n\t\treturn nodes;\n\t}\n\n\tinline function node(pid) {\n\t\treturn new Node(uid++, pid);\n\t}\n\n\tfunction initNode( p : Pattern, final : Node, pid : Int ) {\n\t\treturn switch( p ) {\n\t\tcase Empty:\n\t\t\tfinal;\n\t\tcase Match(c):\n\t\t\tvar n = node(pid);\n\t\t\tn.trans.push({ chars : c, n : final });\n\t\t\tn;\n\t\tcase Star(p):\n\t\t\tvar n = node(pid);\n\t\t\tvar an = initNode(p,n,pid);\n\t\t\tn.epsilon.push(an);\n\t\t\tn.epsilon.push(final);\n\t\t\tn;\n\t\tcase Plus(p):\n\t\t\tvar n = node(pid);\n\t\t\tvar an = initNode(p,n,pid);\n\t\t\tn.epsilon.push(an);\n\t\t\tn.epsilon.push(final);\n\t\t\tan;\n\t\tcase Next(a,b):\n\t\t\tinitNode(a, initNode(b, final,pid),pid);\n\t\tcase Choice(a,b):\n\t\t\tvar n = node(pid);\n\t\t\tn.epsilon.push(initNode(a,final,pid));\n\t\t\tn.epsilon.push(initNode(b,final,pid));\n\t\t\tn;\n\t\tcase Group(p):\n\t\t\tinitNode(p, final, pid);\n\t\t}\n\t}\n\n\t// ----------------------- PATTERN PARSING ---------------------------\n\n\tstatic inline var MAX_CODE = 255;\n\tstatic var EMPTY = [];\n\tstatic var ALL_CHARS = [ { min : 0, max : MAX_CODE } ];\n\n\tstatic inline function single( c : Int ) : Charset {\n\t\treturn [ { min : c, max : c } ];\n\t}\n\n\t/**\n\t\tParses the `pattern` `String` and returns an instance of `Pattern`.\n\n\t\tIf `pattern` is not a valid pattern string, an exception of `String` is\n\t\tthrown.\n\n\t\tThe following meta characters are supported:\n\n\t\t\t- `*`: zero or more\n\t\t\t- `+`: one or more\n\t\t\t- `?`: zero or one\n\t\t\t- `|`: or\n\t\t\t- `[`: begin char range\n\t\t\t- `]`: end char range\n\t\t\t- `(`: begin group\n\t\t\t- `)`: end group\n\t\t\t- `\\`: escape next char\n\n\t\tThese characters must be escaped if they are part of the pattern, by\n\t\tusing `\\\\*`, `\\\\]` etc.\n\t**/\n\tpublic static function parse( pattern : String ) : Pattern {\n\t\tvar p = parseInner(byte.ByteData.ofString(pattern));\n\t\tif( p == null ) throw \"Invalid pattern '\" + pattern + \"'\";\n\t\treturn p.pattern;\n\t}\n\n\tstatic function next( a, b ) {\n\t\treturn a == Empty ? b : Next(a, b);\n\t}\n\n\tstatic function plus(r) {\n\t\treturn switch( r ) {\n\t\tcase Next(r1, r2): Next(r1, plus(r2));\n\t\tdefault: Plus(r);\n\t\t}\n\t}\n\n\tstatic function star(r) {\n\t\treturn switch( r ) {\n\t\tcase Next(r1, r2): Next(r1, star(r2));\n\t\tdefault: Star(r);\n\t\t}\n\t}\n\n\tstatic function opt(r) {\n\t\treturn switch( r ) {\n\t\tcase Next(r1, r2): Next(r1, opt(r2));\n\t\tdefault: Choice(r, Empty);\n\t\t}\n\t}\n\n\tstatic function cinter(c1,c2) {\n\t\treturn ccomplement(cunion(ccomplement(c1), ccomplement(c2)));\n\t}\n\n\tstatic function cdiff(c1,c2) {\n\t\treturn ccomplement(cunion(ccomplement(c1), c2));\n\t}\n\n\tstatic function ccomplement( c : Charset ) {\n\t\tvar first = c[0];\n\t\tvar start = first != null && first.min == -1 ? c.shift().max + 1 : -1;\n\t\tvar out = [];\n\t\tfor( k in c ) {\n\t\t\tout.push( { min : start, max : k.min - 1 } );\n\t\t\tstart = k.max + 1;\n\t\t}\n\t\tif( start <= MAX_CODE )\n\t\t\tout.push( { min : start, max : MAX_CODE } );\n\t\treturn out;\n\t}\n\n\tstatic function cunion( ca : Charset, cb : Charset ) {\n\t\tvar i = 0, j = 0;\n\t\tvar out = [];\n\t\tvar a = ca[i++], b = cb[j++];\n\t\twhile( true ) {\n\t\t\tif( a == null ) {\n\t\t\t\tout.push(b);\n\t\t\t\twhile( j < cb.length )\n\t\t\t\t\tout.push(cb[j++]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif( b == null ) {\n\t\t\t\tout.push(a);\n\t\t\t\twhile( i < ca.length )\n\t\t\t\t\tout.push(ca[i++]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif( a.min <= b.min ) {\n\t\t\t\tif( a.max + 1 < b.min ) {\n\t\t\t\t\tout.push(a);\n\t\t\t\t\ta = ca[i++];\n\t\t\t\t} else if( a.max < b.max ) {\n\t\t\t\t\tb = { min : a.min, max : b.max };\n\t\t\t\t\ta = ca[i++];\n\t\t\t\t} else\n\t\t\t\t\tb = cb[j++];\n\t\t\t} else {\n\t\t\t\t// swap\n\t\t\t\tvar tmp = ca;\n\t\t\t\tca = cb;\n\t\t\t\tcb = tmp;\n\t\t\t\tvar tmp = j;\n\t\t\t\tj = i;\n\t\t\t\ti = tmp;\n\t\t\t\tvar tmp = a;\n\t\t\t\ta = b;\n\t\t\t\tb = tmp;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\n\tstatic function parseInner( pattern : byte.ByteData, i : Int = 0, pDepth : Int = 0 ) : { pattern: Pattern, pos: Int } {\n\t\tvar r = Empty;\n\t\tvar l = pattern.length;\n\t\twhile( i < l ) {\n\t\t\tvar c = pattern.readByte(i++);\n\t\t\tif (c > 255) throw c;\n\t\t\tswitch( c ) {\n\t\t\tcase '+'.code if (r != Empty):\n\t\t\t\tr = plus(r);\n\t\t\tcase '*'.code if (r != Empty):\n\t\t\t\tr = star(r);\n\t\t\tcase '?'.code if (r != Empty):\n\t\t\t\tr = opt(r);\n\t\t\tcase '|'.code if (r != Empty):\n\t\t\t\tvar r2 = parseInner(pattern, i);\n\t\t\t\treturn {pattern: Choice(r, r2.pattern), pos: r2.pos};\n\t\t\tcase '.'.code:\n\t\t\t\tr = next(r, Match(ALL_CHARS));\n\t\t\tcase '('.code:\n\t\t\t\tvar r2 = parseInner(pattern, i, pDepth + 1);\n\t\t\t\ti = r2.pos;\n\t\t\t\tr = next(r, r2.pattern);\n\t\t\tcase ')'.code:\n\t\t\t\tif (r == Empty) throw \"Empty group\";\n\t\t\t\treturn { pattern: Group(r), pos: i};\n\t\t\tcase '['.code if (pattern.length > 1):\n\t\t\t\tvar range = 0;\n\t\t\t\tvar acc = [];\n\t\t\t\tvar not = pattern.readByte(i) == '^'.code;\n\t\t\t\tif( not ) i++;\n\t\t\t\twhile( true ) {\n\t\t\t\t\tvar c = pattern.readByte(i++);\n\t\t\t\t\tif( c == ']'.code ) {\n\t\t\t\t\t\tif( range != 0 ) return null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if( c == '-'.code ) {\n\t\t\t\t\t\tif( range != 0 ) return null;\n\t\t\t\t\t\tvar last = acc.pop();\n\t\t\t\t\t\tif( last == null )\n\t\t\t\t\t\t\tacc.push( { min : c, max : c } );\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif( last.min != last.max ) return null;\n\t\t\t\t\t\t\trange = last.min;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( c == '\\\\'.code )\n\t\t\t\t\t\t\tc = pattern.readByte(i++);\n\t\t\t\t\t\tif( range == 0 )\n\t\t\t\t\t\t\tacc.push( { min : c, max : c } );\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tacc.push( { min : range, max : c } );\n\t\t\t\t\t\t\trange = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar g = [];\n\t\t\t\tfor( k in acc )\n\t\t\t\t\tg = cunion(g, [k]);\n\t\t\t\tif( not )\n\t\t\t\t\tg = cdiff(ALL_CHARS, g);\n\t\t\t\tr = next(r, Match(g));\n\t\t\tcase '\\\\'.code:\n\t\t\t\tc = pattern.readByte(i++);\n\t\t\t\tif ( StringTools.isEof(c) ) c = '\\\\'.code;\n\t\t\t\telse if (c >= \"0\".code && c <= \"9\".code) {\n\t\t\t\t\tvar v = c - 48;\n\t\t\t\t\twhile(true) {\n\t\t\t\t\t\tvar cNext = pattern.readByte(i);\n\t\t\t\t\t\tif (cNext >= \"0\".code && cNext <= \"9\".code) {\n\t\t\t\t\t\t\tv = v * 10 + (cNext - 48);\n\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tc = v;\n\t\t\t\t}\n\t\t\t\tr = next(r, Match(single(c)));\n\t\t\tdefault:\n\t\t\t\tr = next(r, Match(single(c)));\n\t\t\t}\n\t\t}\n\t\tif (pDepth != 0) throw 'Found unclosed parenthesis while parsing \"$pattern\"';\n\t\treturn {pattern:r, pos: i};\n\t}\n}\n\nprivate enum Pattern {\n\tEmpty;\n\tMatch( c : Charset );\n\tStar( p : Pattern );\n\tPlus( p : Pattern );\n\tNext( p1 : Pattern, p2 : Pattern );\n\tChoice( p1 : Pattern, p2 : Pattern );\n\tGroup ( p : Pattern );\n}\n\nprivate typedef Charset = Array<{ min : Int, max : Int }>;\n\nprivate class Node {\n\tpublic var id : Int;\n\tpublic var pid : Int;\n\tpublic var trans : Array<{ chars : Charset, n : Node }>;\n\tpublic var epsilon : Array<Node>;\n\tpublic function new(id, pid) {\n\t\tthis.id = id;\n\t\tthis.pid = pid;\n\t\ttrans = [];\n\t\tepsilon = [];\n\t}\n}\n\nprivate class Transition {\n\tpublic var chars : Charset;\n\tpublic function new(chars) {\n\t\tthis.chars = chars;\n\t}\n\tpublic function toString() {\n\t\treturn Std.string(chars);\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic inline function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse\n\t\t\treturn untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t}\n\n\t@:ifFeature(\"may_print_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n}\n","package hxparse;\n\n/**\n\tA Ruleset wraps an input state and the semantic callback functions for the\n\t`Lexer`.\n**/\nclass Ruleset<Token> {\n\n\t/**\n\t\tThe initial state.\n\t**/\n\tpublic var state:State;\n\n\t/**\n\t\tThe semantic functions.\n\t**/\n\tpublic var functions:Array<Lexer->Token>;\n\n\t/**\n\t\tThe callback function for when end of file state is reached.\n\t**/\n\tpublic var eofFunction:Lexer->Token;\n\n\t/**\n\t\tInformative name for the state, if any. Generated automatically from field name by RuleBuilder if @:rule is used.\n\t**/\n\tpublic var name:String;\n\n\t/**\n\t\tCreates a new Ruleset.\n\t**/\n\tpublic function new(state, functions, eofFunction, name = \"\") {\n\t\tthis.state = state;\n\t\tthis.functions = functions;\n\t\tthis.eofFunction = eofFunction;\n\t\tthis.name = name;\n\t}\n}","package hxparse;\n\n/**\n\tThe position information maintained by `Lexer`.\n**/\nclass Position {\n\t/**\n\t\tName of the source.\n\t**/\n\tpublic var psource : String;\n\n\t/**\n\t\tThe first character position, counting from the beginning of the input.\n\t**/\n\tpublic var pmin : Int;\n\n\t/**\n\t\tThe last character position, counting from the beginning of the input.\n\t**/\n\tpublic var pmax : Int;\n\n\t/**\n\t\tCreates a new `Position` from the given information.\n\t**/\n\tpublic function new(source, min, max) {\n\t\tpsource = source;\n\t\tpmin = min;\n\t\tpmax = max;\n\t}\n\n\t/**\n\t\tReturns a readable representation of `this` position;\n\t**/\n\tpublic function toString() {\n\t\treturn '$psource:characters $pmin-$pmax';\n\t}\n\n\tpublic function getLinePosition(input:byte.ByteData) {\n\t\tvar lineMin = 1;\n\t\tvar lineMax = 1;\n\t\tvar posMin = 0;\n\t\tvar posMax = 0;\n\t\tvar cur = 0;\n\t\twhile (cur < pmin) {\n\t\t\tif (input.readByte(cur) == \"\\n\".code) {\n\t\t\t\tlineMin++;\n\t\t\t\tposMin = cur;\n\t\t\t}\n\t\t\tcur++;\n\t\t}\n\t\tlineMax = lineMin;\n\t\tposMax = posMin;\n\t\tposMin = cur - posMin;\n\t\twhile (cur < pmax) {\n\t\t\tif (input.readByte(cur) == \"\\n\".code) {\n\t\t\t\tlineMax++;\n\t\t\t\tposMax = cur;\n\t\t\t}\n\t\t\tcur++;\n\t\t}\n\t\tposMax = cur - posMax;\n\t\treturn {\n\t\t\tlineMin: lineMin,\n\t\t\tlineMax: lineMax,\n\t\t\tposMin: posMin,\n\t\t\tposMax: posMax\n\t\t}\n\t}\n\n\t/**\n\t\tFormats `this` position by resolving line numbers within `input`.\n\n\t\tIf `input` is null, the result is unspecified.\n\t**/\n\tpublic function format(input:byte.ByteData) {\n\t\tvar linePos = getLinePosition(input);\n\t\tif (linePos.lineMin != linePos.lineMax) {\n\t\t\treturn '${psource}:lines ${linePos.lineMin}-${linePos.lineMax}';\n\t\t} else {\n\t\t\treturn '${psource}:line ${linePos.lineMin}:characters ${linePos.posMin}-${linePos.posMax}';\n\t\t}\n\t}\n\n\t/**\n\t\tUnifies two positions `p1` and `p2`, using the minimum `pmin` and\n\t\tmaximum `pmax` of both.\n\n\t\tThe resulting `psource` and `pline` are taken from `p1`.\n\n\t\tIf `p1` or `p2` are null, the result is unspecified.\n\t**/\n\tstatic public function union(p1:Position, p2:Position) {\n\t\treturn new Position(p1.psource, p1.pmin < p2.pmin ? p1.pmin : p2.pmin, p1.pmax > p2.pmax ? p1.pmax : p2.pmax);\n\t}\n}\n\nprivate typedef Position2 = {\n\tlineMin: Int,\n\tlineMax: Int,\n\tposMin: Int,\n\tposMax: Int\n}","package haxeparser;\n\nimport haxeparser.Data;\nimport haxe.macro.Expr;\nimport haxe.ds.Option;\nusing Lambda;\n\nenum ParserErrorMsg {\n\tMissingSemicolon;\n\tMissingType;\n\tDuplicateDefault;\n\tUnclosedMacro;\n\tCustom(s:String);\n}\n\nclass ParserError {\n\tpublic var msg: ParserErrorMsg;\n\tpublic var pos: Position;\n\tpublic function new(message:ParserErrorMsg, pos:Position) {\n\t\tthis.msg = message;\n\t\tthis.pos = pos;\n\t}\n}\n\nenum SmallType {\n\tSNull;\n\tSBool(b:Bool);\n\tSFloat(f:Float);\n\tSString(s:String);\n}\n\nclass HaxeCondParser extends hxparse.Parser<hxparse.LexerTokenSource<Token>, Token> implements hxparse.ParserBuilder {\n\tpublic function new(stream){\n\t\tsuper(stream);\n\t}\n\n\tpublic function parseMacroCond(allowOp:Bool):{tk:Option<Token>, expr:Expr}\n\t{\n\t\treturn switch stream {\n\t\t\tcase [{tok:Const(CIdent(t)), pos:p}]:\n\t\t\t\tparseMacroIdent(allowOp, t, p);\n\t\t\tcase [{tok:Const(CString(s)), pos:p}]:\n\t\t\t\t{tk:None, expr:{expr:EConst(CString(s)), pos:p}};\n\t\t\tcase [{tok:Const(CInt(s)), pos:p}]:\n\t\t\t\t{tk:None, expr:{expr:EConst(CInt(s)), pos:p}};\n\t\t\tcase [{tok:Const(CFloat(s)), pos:p}]:\n\t\t\t\t{tk:None, expr:{expr:EConst(CFloat(s)), pos:p}};\n\t\t\tcase [{tok:Kwd(k), pos:p}]:\n\t\t\t\tparseMacroIdent(allowOp, HaxeParser.keywordString(k), p);\n\t\t\tcase [{tok:POpen, pos:p1}, o = parseMacroCond(true), {tok:PClose, pos:p2}]:\n\t\t\t\tvar e = {expr:EParenthesis(o.expr), pos:HaxeParser.punion(p1, p2)};\n\t\t\t\tif (allowOp) parseMacroOp(e) else { tk:None, expr:e };\n\t\t\tcase [{tok:Unop(op), pos:p}, o = parseMacroCond(allowOp)]:\n\t\t\t\t{tk:o.tk, expr:HaxeParser.makeUnop(op, o.expr, p)};\n\t\t}\n\t}\n\n\tfunction parseMacroIdent(allowOp:Bool, t:String, p:Position):{tk:Option<Token>, expr:Expr}\n\t{\n\t\tvar e = {expr:EConst(CIdent(t)), pos:p};\n\t\treturn if (!allowOp) { tk:None, expr:e } else parseMacroOp(e);\n\t}\n\n\tfunction parseMacroOp(e:Expr):{tk:Option<Token>, expr:Expr}\n\t{\n\t\treturn switch peek(0) {\n\t\t\tcase {tok:Binop(op)}:\n\t\t\t\tjunk();\n\t\t\t\top = switch peek(0) {\n\t\t\t\t\tcase {tok:Binop(OpAssign)} if (op == OpGt):\n\t\t\t\t\t\tjunk();\n\t\t\t\t\t\tOpGte;\n\t\t\t\t\tcase _: op;\n\t\t\t\t}\n\t\t\t\tvar o = parseMacroCond(true);\n\t\t\t\t{tk:o.tk, expr:HaxeParser.makeBinop(op, e, o.expr)};\n\t\t\tcase tk:\n\t\t\t\t{tk:Some(tk), expr:e};\n\t\t}\n\t}\n}\n@:enum abstract SkipState(Int){\n\tvar Consume    = 0;       // consume current branch\n\tvar SkipBranch = 1;       // skip until next #elsif/#else\n\tvar SkipRest   = 2;       // skip until #end\n}\n\nclass HaxeTokenSource {\n\tvar lexer:HaxeLexer;\n\t@:allow(haxeparser.HaxeParser)\n\tvar mstack:Array<Position>;\n\t@:allow(haxeparser.HaxeParser)\n\tvar skipstates:Array<SkipState>;\n\t\n\tvar defines:Map<String, Dynamic>;\n\n\tvar rawSource:hxparse.LexerTokenSource<Token>;\n\tvar condParser:HaxeCondParser;\n\n\tpublic function new(lexer,defines){\n\t\tthis.lexer = lexer;\n\t\tthis.mstack = [];\n\t\tthis.defines = defines;\n\t\tthis.skipstates = [Consume];\n\t\tthis.rawSource = new hxparse.LexerTokenSource(lexer,HaxeLexer.tok);\n\t\tthis.condParser = new HaxeCondParser(this.rawSource);\n\t}\n\n\tfunction lexerToken() {\n\t\treturn lexer.token(HaxeLexer.tok);\n\t}\n\t\n\tinline function getSt() return skipstates[skipstates.length-1];\n\tinline function setSt(s:SkipState) skipstates[skipstates.length-1] = s;\n\tinline function pushSt(s:SkipState) skipstates.push(s);\n\tinline function popSt(){\n\t\treturn (skipstates.length>1) ? skipstates.pop() : throw('unexpected #end');\n\t}\n\t\n\t@:access(haxeparser.HaxeCondParser)\n\tpublic function token():Token{\n\t\twhile(true){\n\t\t\tvar tk    = lexerToken();\n\t\t\tvar state = getSt();\n\t\t\tswitch [tk.tok,state] {\n\t\t\t\tcase [CommentLine(_) | Comment(_) | Sharp(\"line\"),_]:\n\t\t\t\tcase [Sharp(\"error\"),_]:\n\t\t\t\t\ttk = condParser.peek(0);\n\t\t\t\t\tswitch tk.tok {case Const(CString(_)):tk = lexerToken();case _:}\n\t\t\t\tcase [Sharp(\"if\"),Consume]:\n\t\t\t\t\tmstack.push(tk.pos);\n\t\t\t\t\tpushSt( enterMacro() ? Consume : SkipBranch );\n\t\t\t\tcase [Sharp(\"if\"),SkipBranch|SkipRest]:\n\t\t\t\t\tdeepSkip(); // alternatively use push_st(SkipRest) here\n\t\t\t\tcase [Sharp(\"end\"),_]:\n\t\t\t\t\tmstack.pop();\n\t\t\t\t\tpopSt();\n\t\t\t\tcase [Sharp(\"elseif\"),Consume]:\n\t\t\t\t\tsetSt(SkipRest);\n\t\t\t\tcase [Sharp(\"elseif\"),SkipBranch]:\n\t\t\t\t\tsetSt( enterMacro() ? Consume : SkipBranch );\n\t\t\t\tcase [Sharp(\"else\"),SkipBranch]:\n\t\t\t\t\tsetSt(Consume);\n\t\t\t\tcase [Sharp(\"else\"),Consume]:\n\t\t\t\t\tsetSt(SkipRest);\n\t\t\t\tcase [Sharp(_),SkipRest]:\n\t\t\t\tcase [_,Consume]:\n\t\t\t\t\treturn tk;\n\t\t\t\tcase [Eof,_]:\n\t\t\t\t\treturn tk;\n\t\t\t\tcase [_,_]:\n\t\t\t}\n\t\t}\n\t}\n\t\n\tinline function enterMacro(){\n\t\tvar o = condParser.parseMacroCond(false);\n\t\treturn isTrue(eval(o.expr));\n\t}\n\t\n\tfunction deepSkip(){\n\t\tvar lvl = 1;\n\t\twhile(true){\n\t\t\tvar tk = lexerToken();\n\t\t\tswitch tk.tok {\n\t\t\t\tcase Sharp(\"if\"):\n\t\t\t\t\tlvl += 1;\n\t\t\t\tcase Sharp(\"end\"):\n\t\t\t\t\tlvl -= 1;\n\t\t\t\t\tif (lvl == 0)\n\t\t\t\t\t\treturn;\n\t\t\t\tcase Eof:\n\t\t\t\t\tthrow 'unclosed macro';\n\t\t\t\tcase _:\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction isTrue(a:SmallType)\n\t{\n\t\treturn switch a {\n\t\t\tcase SBool(false), SNull, SFloat(0.0), SString(\"\"): false;\n\t\t\tcase _: true;\n\t\t}\n\t}\n\n\tfunction compare(a:SmallType, b:SmallType)\n\t{\n\t\treturn switch [a, b] {\n\t\t\tcase [SNull, SNull]: 0;\n\t\t\tcase [SFloat(a), SFloat(b)]: Reflect.compare(a, b);\n\t\t\tcase [SString(a), SString(b)]: Reflect.compare(a, b);\n\t\t\tcase [SBool(a), SBool(b)]: Reflect.compare(a, b);\n\t\t\tcase [SString(a), SFloat(b)]: Reflect.compare(Std.parseFloat(a), b);\n\t\t\tcase [SFloat(a), SString(b)]: Reflect.compare(a, Std.parseFloat(b));\n\t\t\tcase _: 0;\n\t\t}\n\t}\n\n\tfunction eval(e:Expr)\n\t{\n\t\treturn switch (e.expr)\n\t\t{\n\t\t\tcase EConst(CIdent(s)): defines.exists(s) ? SString(s) : SNull;\n\t\t\tcase EConst(CString(s)): SString(s);\n\t\t\tcase EConst(CInt(f)), EConst(CFloat(f)): SFloat(Std.parseFloat(f));\n\t\t\tcase EBinop(OpBoolAnd, e1, e2): SBool(isTrue(eval(e1)) && isTrue(eval(e2)));\n\t\t\tcase EBinop(OpBoolOr, e1, e2): SBool(isTrue(eval(e1)) || isTrue(eval(e2)));\n\t\t\tcase EUnop(OpNot, _, e): SBool(!isTrue(eval(e)));\n\t\t\tcase EParenthesis(e): eval(e);\n\t\t\tcase EBinop(op, e1, e2):\n\t\t\t\tvar v1 = eval(e1);\n\t\t\t\tvar v2 = eval(e2);\n\t\t\t\tvar cmp = compare(v1, v2);\n\t\t\t\tvar val = switch (op)\n\t\t\t\t{\n\t\t\t\t\tcase OpEq: cmp == 0;\n\t\t\t\t\tcase OpNotEq: cmp != 0;\n\t\t\t\t\tcase OpGt: cmp > 0;\n\t\t\t\t\tcase OpGte: cmp >= 0;\n\t\t\t\t\tcase OpLt: cmp < 0;\n\t\t\t\t\tcase OpLte: cmp <= 0;\n\t\t\t\t\tcase _: throw \"Unsupported operation\";\n\t\t\t\t}\n\t\t\t\tSBool(val);\n\t\t\tcase _: throw \"Invalid condition expression\";\n\t\t}\n\t}\n\n\tpublic function curPos():hxparse.Position{\n\t\treturn lexer.curPos();\n\t}\n}\n\nclass HaxeParser extends hxparse.Parser<HaxeTokenSource, Token> implements hxparse.ParserBuilder {\n\n\tvar defines:Map<String, Dynamic>;\n\n\tvar doResume = false;\n\tvar doc:String;\n\tvar inMacro:Bool;\n\n\tpublic function new(input:byte.ByteData, sourceName:String) {\n\t\tdefines = new Map();\n\t\tdefines.set(\"true\", true);\n\n\t\tvar lexer = new HaxeLexer(input, sourceName);\n\t\tvar ts = new HaxeTokenSource(lexer, defines);\n\t\tsuper(ts);\n\n\t\tinMacro = false;\n\t\tdoc = \"\";\n\t}\n\n\tpublic function define(flag:String, ?value:Dynamic)\n\t{\n\t\tdefines.set(flag, value);\n\t}\n\n\tpublic function parse() {\n\t\tvar res = parseFile();\n\t\tif (stream.mstack.length != 0) throw new ParserError(UnclosedMacro, stream.mstack[stream.mstack.length-1]);\n\t\treturn res;\n\t}\n\n\t@:allow(haxeparser.HaxeCondParser)\n\tstatic function keywordString(k:Keyword)\n\t{\n\t\treturn Std.string(k).substr(3).toLowerCase();\n\t}\n\n\t@:allow(haxeparser.HaxeCondParser)\n\tstatic function punion(p1:Position, p2:Position) {\n\t\treturn {\n\t\t\tfile: p1.file,\n\t\t\tmin: p1.min < p2.min ? p1.min : p2.min,\n\t\t\tmax: p1.max > p2.max ? p1.max : p2.max,\n\t\t};\n\t}\n\n\tstatic function quoteIdent(s:String) {\n\t\t// TODO\n\t\treturn s;\n\t}\n\n\tstatic function isLowerIdent(s:String) {\n\t\tfunction loop(p) {\n\t\t\tvar c = s.charCodeAt(p);\n\t\t\treturn if (c >= 'a'.code && c <= 'z'.code)\n\t\t\t\ttrue\n\t\t\telse if (c == '_'.code) {\n\t\t\t\tif (p + 1 < s.length)\n\t\t\t\t\tloop(p + 1);\n\t\t\t\telse\n\t\t\t\t\ttrue;\n\t\t\t} else\n\t\t\t\tfalse;\n\t\t}\n\t\treturn loop(0);\n\t}\n\n\tstatic function isPostfix(e:Expr, u:Unop) {\n\t\treturn switch (u) {\n\t\t\tcase OpIncrement | OpDecrement:\n\t\t\t\tswitch(e.expr) {\n\t\t\t\t\tcase EConst(_) | EField(_) | EArray(_):\n\t\t\t\t\t\ttrue;\n\t\t\t\t\tcase _:\n\t\t\t\t\t\tfalse;\n\t\t\t\t}\n\t\t\tcase OpNot | OpNeg | OpNegBits: false;\n\t\t}\n\t}\n\n\tstatic function isPrefix(u:Unop) {\n\t\treturn switch(u) {\n\t\t\tcase OpIncrement | OpDecrement: true;\n\t\t\tcase OpNot | OpNeg | OpNegBits: true;\n\t\t}\n\t}\n\n\tstatic function precedence(op:Binop) {\n\t\tvar left = true;\n\t\tvar right = false;\n\t\treturn switch(op) {\n\t\t\tcase OpMod : {p: 0, left: left};\n\t\t\tcase OpMult | OpDiv : {p: 0, left: left};\n\t\t\tcase OpAdd | OpSub : {p: 0, left: left};\n\t\t\tcase OpShl | OpShr | OpUShr : {p: 0, left: left};\n\t\t\tcase OpOr | OpAnd | OpXor : {p: 0, left: left};\n\t\t\tcase OpEq | OpNotEq | OpGt | OpLt | OpGte | OpLte : {p: 0, left: left};\n\t\t\tcase OpInterval : {p: 0, left: left};\n\t\t\tcase OpBoolAnd : {p: 0, left: left};\n\t\t\tcase OpBoolOr : {p: 0, left: left};\n\t\t\tcase OpArrow : {p: 0, left: left};\n\t\t\tcase OpAssign | OpAssignOp(_) : {p:10, left:right};\n\t\t}\n\t}\n\n\tstatic function isNotAssign(op:Binop) {\n\t\treturn switch(op) {\n\t\t\tcase OpAssign | OpAssignOp(_): false;\n\t\t\tcase _: true;\n\t\t}\n\t}\n\n\tstatic function isDollarIdent(e:Expr) {\n\t\treturn switch (e.expr) {\n\t\t\tcase EConst(CIdent(n)) if (n.charCodeAt(0) == \"$\".code): true;\n\t\t\tcase _: false;\n\t\t}\n\t}\n\n\tstatic function swap(op1:Binop, op2:Binop) {\n\t\tvar i1 = precedence(op1);\n\t\tvar i2 = precedence(op2);\n\t\treturn i1.left && i1.p <= i2.p;\n\t}\n\n\t@:allow(haxeparser.HaxeCondParser)\n\tstatic function makeBinop(op:Binop, e:Expr, e2:Expr) {\n\t\treturn switch (e2.expr) {\n\t\t\tcase EBinop(_op,_e,_e2) if (swap(op,_op)):\n\t\t\t\tvar _e = makeBinop(op,e,_e);\n\t\t\t\t{expr: EBinop(_op,_e,_e2), pos:punion(_e.pos,_e2.pos)};\n\t\t\tcase ETernary(e1,e2,e3) if (isNotAssign(op)):\n\t\t\t\tvar e = makeBinop(op,e,e1);\n\t\t\t\t{expr:ETernary(e,e2,e3), pos:punion(e.pos, e3.pos)};\n\t\t\tcase _:\n\t\t\t\t{ expr: EBinop(op,e,e2), pos:punion(e.pos, e2.pos)};\n\t\t}\n\t}\n\n\t@:allow(haxeparser.HaxeCondParser)\n\tstatic function makeUnop(op:Unop, e:Expr, p1:Position) {\n\t\treturn switch(e.expr) {\n\t\t\tcase EBinop(bop,e,e2):\n\t\t\t\t{ expr: EBinop(bop, makeUnop(op,e,p1), e2), pos: punion(p1,e.pos)};\n\t\t\tcase ETernary(e1,e2,e3):\n\t\t\t\t{ expr: ETernary(makeUnop(op,e1,p1), e2, e3), pos:punion(p1,e.pos)};\n\t\t\tcase _:\n\t\t\t\t{ expr: EUnop(op,false,e), pos:punion(p1,e.pos)};\n\t\t}\n\t}\n\n\tstatic function makeMeta(name:String, params:Array<Expr>, e:Expr, p1:Position) {\n\t\treturn switch(e.expr) {\n\t\t\tcase EBinop(bop,e,e2):\n\t\t\t\t{ expr: EBinop(bop, makeMeta(name,params,e,p1), e2), pos: punion(p1,e.pos)};\n\t\t\tcase ETernary(e1,e2,e3):\n\t\t\t\t{ expr: ETernary(makeMeta(name,params,e1,p1), e2, e3), pos:punion(p1,e.pos)};\n\t\t\tcase _:\n\t\t\t\t{ expr: EMeta({name:name, params:params, pos:p1}, e), pos: punion(p1, e.pos) };\n\t\t}\n\t}\n\n\tstatic function aadd<T>(a:Array<T>, t:T) {\n\t\ta.push(t);\n\t\treturn a;\n\t}\n\n\tfunction psep<T>(sep:TokenDef, f:Void->T):Array<T> {\n\t\tvar acc = [];\n\t\twhile(true) {\n\t\t\ttry {\n\t\t\t\tacc.push(f());\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [{tok: sep2} && sep2 == sep]:\n\t\t\t\t}\n\t\t\t} catch(e:hxparse.NoMatch<Dynamic>) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn acc;\n\t}\n\n\tfunction ident() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Const(CIdent(i)),pos:p}]: { name: i, pos: p};\n\t\t}\n\t}\n\n\tfunction dollarIdent() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Const(CIdent(i)),pos:p}]: { name: i, pos: p};\n\t\t\tcase [{tok:Dollar(i), pos:p}]: { name: \"$\" + i, pos: p};\n\t\t}\n\t}\n\n\tfunction dollarIdentMacro(pack:Array<String>) {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Const(CIdent(i)),pos:p}]: { name: i, pos: p};\n\t\t\tcase [{tok:Dollar(i), pos:p}]: { name: \"$\" + i, pos: p};\n\t\t\tcase [{tok:Kwd(KwdMacro), pos: p} && pack.length > 0]: { name: \"macro\", pos: p };\n\t\t}\n\t}\n\n\tfunction lowerIdentOrMacro() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Const(CIdent(i))} && isLowerIdent(i)]: i;\n\t\t\tcase [{tok:Kwd(KwdMacro)}]: \"macro\";\n\t\t}\n\t}\n\n\tfunction anyEnumIdent() {\n\t\treturn switch stream {\n\t\t\tcase [i = ident()]: i;\n\t\t\tcase [{tok:Kwd(k), pos:p}]: {name:k.getName().toLowerCase(), pos:p};\n\t\t}\n\t}\n\n\tfunction propertyIdent() {\n\t\treturn switch stream {\n\t\t\tcase [i = ident()]: i.name;\n\t\t\tcase [{tok:Kwd(KwdDynamic)}]: \"dynamic\";\n\t\t\tcase [{tok:Kwd(KwdDefault)}]: \"default\";\n\t\t\tcase [{tok:Kwd(KwdNull)}]: \"null\";\n\t\t}\n\t}\n\n\tfunction getDoc() {\n\t\treturn \"\";\n\t}\n\n\tfunction comma() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Comma}]:\n\t\t}\n\t}\n\n\tfunction semicolon() {\n\t\treturn if (last.tok == BrClose) {\n\t\t\tswitch stream {\n\t\t\t\tcase [{tok: Semicolon, pos:p}]: p;\n\t\t\t\tcase _: last.pos;\n\t\t\t}\n\t\t} else switch stream {\n\t\t\tcase [{tok: Semicolon, pos:p}]: p;\n\t\t\tcase _:\n\t\t\t\tvar pos = last.pos;\n\t\t\t\tif (doResume)\n\t\t\t\t\tpos\n\t\t\t\telse\n\t\t\t\t\tthrow new ParserError(MissingSemicolon, pos);\n\t\t\t}\n\t}\n\n\tfunction parseFile() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Kwd(KwdPackage)}, p = parsePackage(), _ = semicolon(), l = parseTypeDecls(p,[]), {tok:Eof}]:\n\t\t\t\t{ pack: p, decls: l };\n\t\t\tcase [l = parseTypeDecls([],[]), {tok:Eof}]:\n\t\t\t\t{ pack: [], decls: l };\n\t\t}\n\t}\n\n\tfunction parseTypeDecls(pack:Array<String>, acc:Array<TypeDecl>) {\n\t\treturn switch stream {\n\t\t\tcase [ v = parseTypeDecl(), l = parseTypeDecls(pack,aadd(acc,v)) ]:\n\t\t\t\tl;\n\t\t\tcase _: acc;\n\t\t}\n\t}\n\n\tfunction parseTypeDecl() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Kwd(KwdImport), pos:p1}]:\n\t\t\t\tparseImport(p1);\n\t\t\tcase [{tok:Kwd(KwdUsing), pos: p1}, t = parseTypePath(), p2 = semicolon()]:\n\t\t\t\t{decl: EUsing(t), pos: punion(p1, p2)};\n\t\t\tcase [meta = parseMeta(), c = parseCommonFlags()]:\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [flags = parseEnumFlags(), doc = getDoc(), name = typeName(), tl = parseConstraintParams(), {tok:BrOpen}, l = parseRepeat(parseEnum), {tok:BrClose, pos: p2}]:\n\t\t\t\t\t\t{decl: EEnum({\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\tdoc: doc,\n\t\t\t\t\t\t\tmeta: meta,\n\t\t\t\t\t\t\tparams: tl,\n\t\t\t\t\t\t\tflags: c.map(function(i) return i.e).concat(flags.flags),\n\t\t\t\t\t\t\tdata: l\n\t\t\t\t\t\t}), pos: punion(flags.pos,p2)};\n\t\t\t\t\tcase [flags = parseClassFlags(), doc = getDoc(), name = typeName(), tl = parseConstraintParams(), hl = parseRepeat(parseClassHerit), {tok:BrOpen}, fl = parseClassFields(false,flags.pos)]:\n\t\t\t\t\t\t{decl: EClass({\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\tdoc: doc,\n\t\t\t\t\t\t\tmeta: meta,\n\t\t\t\t\t\t\tparams: tl,\n\t\t\t\t\t\t\tflags: c.map(function(i) return i.c).concat(flags.flags).concat(hl),\n\t\t\t\t\t\t\tdata: fl.fields\n\t\t\t\t\t\t}), pos: punion(flags.pos,fl.pos)};\n\t\t\t\t\tcase [{tok: Kwd(KwdTypedef), pos: p1}, doc = getDoc(), name = typeName(), tl = parseConstraintParams(), {tok:Binop(OpAssign), pos: p2}, t = parseComplexType()]:\n\t\t\t\t\t\tswitch stream {\n\t\t\t\t\t\t\tcase [{tok:Semicolon}]:\n\t\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ decl: ETypedef({\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\tdoc: doc,\n\t\t\t\t\t\t\tmeta: meta,\n\t\t\t\t\t\t\tparams: tl,\n\t\t\t\t\t\t\tflags: c.map(function(i) return i.e),\n\t\t\t\t\t\t\tdata: t\n\t\t\t\t\t\t}), pos: punion(p1,p2)};\n\t\t\t\t\tcase [{tok:Kwd(KwdAbstract), pos:p1}, name = typeName(), tl = parseConstraintParams(), st = parseAbstractSubtype(), sl = parseRepeat(parseAbstractRelations), {tok:BrOpen}, fl = parseClassFields(false, p1)]:\n\t\t\t\t\t\tvar flags = c.map(function(flag) return switch(flag.e) { case EPrivate: APrivAbstract; case EExtern: throw 'extern abstract is not allowed'; });\n\t\t\t\t\t\tif (st != null) {\n\t\t\t\t\t\t\tflags.push(AIsType(st));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ decl: EAbstract({\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\tdoc: doc,\n\t\t\t\t\t\t\tmeta: meta,\n\t\t\t\t\t\t\tparams: tl,\n\t\t\t\t\t\t\tflags: flags.concat(sl),\n\t\t\t\t\t\t\tdata: fl.fields\n\t\t\t\t\t\t}), pos: punion(p1, fl.pos)};\n\t\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseClass(meta:Metadata, cflags:Array<{fst: ClassFlag, snd:String}>, needName:Bool) {\n\t\tvar optName = if (needName) typeName else function() {\n\t\t\tvar t = parseOptional(typeName);\n\t\t\treturn t == null ? \"\" : t;\n\t\t}\n\t\treturn switch stream {\n\t\t\tcase [flags = parseClassFlags(), doc = getDoc(), name = optName(), tl = parseConstraintParams(), hl = psep(Comma,parseClassHerit), {tok: BrOpen}, fl = parseClassFields(false,flags.pos)]:\n\t\t\t\t{ decl: EClass({\n\t\t\t\t\tname: name,\n\t\t\t\t\tdoc: doc,\n\t\t\t\t\tmeta: meta,\n\t\t\t\t\tparams: tl,\n\t\t\t\t\tflags: cflags.map(function(i) return i.fst).concat(flags.flags).concat(hl),\n\t\t\t\t\tdata: fl.fields\n\t\t\t\t}), pos: punion(flags.pos,fl.pos)};\n\t\t}\n\t}\n\n\tfunction parseImport(p1:Position) {\n\t\tvar acc = switch stream {\n\t\t\tcase [{tok:Const(CIdent(name)), pos:p}]: [{pack:name, pos:p}];\n\t\t\tcase _: unexpected();\n\t\t}\n\t\twhile(true) {\n\t\t\tswitch stream {\n\t\t\t\tcase [{tok: Dot}]:\n\t\t\t\t\tswitch stream {\n\t\t\t\t\t\tcase [{tok:Const(CIdent(k)), pos: p}]:\n\t\t\t\t\t\t\tacc.push({pack:k,pos:p});\n\t\t\t\t\t\tcase [{tok:Kwd(KwdMacro), pos:p}]:\n\t\t\t\t\t\t\tacc.push({pack:\"macro\",pos:p});\n\t\t\t\t\t\tcase [{tok:Binop(OpMult)}, {tok:Semicolon, pos:p2}]:\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tdecl: EImport(acc, IAll),\n\t\t\t\t\t\t\t\tpos: p2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase _: unexpected();\n\t\t\t\t\t}\n\t\t\t\tcase [{tok:Semicolon, pos:p2}]:\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdecl: EImport(acc, INormal),\n\t\t\t\t\t\tpos: p2\n\t\t\t\t\t}\n\t\t\t\tcase [{tok:Kwd(KwdIn)}, {tok:Const(CIdent(name))}, {tok:Semicolon, pos:p2}]:\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdecl: EImport(acc, IAsName(name)),\n\t\t\t\t\t\tpos: p2\n\t\t\t\t\t}\n\t\t\t\tcase _: unexpected();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseAbstractRelations() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Const(CIdent(\"to\"))}, t = parseComplexType()]: AToType(t);\n\t\t\tcase [{tok:Const(CIdent(\"from\"))}, t = parseComplexType()]: AFromType(t);\n\t\t}\n\t}\n\n\tfunction parseAbstractSubtype() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:POpen}, t = parseComplexType(), {tok:PClose}]: t;\n\t\t\tcase _: null;\n\t\t}\n\t}\n\n\tfunction parsePackage() {\n\t\treturn psep(Dot, lowerIdentOrMacro);\n\t}\n\n\tfunction parseClassFields(tdecl:Bool, p1:Position):{fields:Array<Field>, pos:Position} {\n\t\tvar l = parseClassFieldResume(tdecl);\n\t\tvar p2 = switch stream {\n\t\t\tcase [{tok: BrClose, pos: p2}]:\n\t\t\t\tp2;\n\t\t\tcase _: unexpected();\n\t\t}\n\t\treturn {\n\t\t\tfields: l,\n\t\t\tpos: p2\n\t\t}\n\t}\n\n\tfunction parseClassFieldResume(tdecl:Bool):Array<Field> {\n\t\treturn parseRepeat(parseClassField);\n\t}\n\n\tfunction parseCommonFlags():Array<{c:ClassFlag, e:EnumFlag}> {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Kwd(KwdPrivate)}, l = parseCommonFlags()]: aadd(l, {c:HPrivate, e:EPrivate});\n\t\t\tcase [{tok:Kwd(KwdExtern)}, l = parseCommonFlags()]: aadd(l, {c:HExtern, e:EExtern});\n\t\t\tcase _: [];\n\t\t}\n\t}\n\n\tfunction parseMetaParams(pname:Position) {\n\t\treturn switch stream {\n\t\t\tcase [{tok: POpen, pos:p} && p.min == pname.max, params = psep(Comma, expr), {tok: PClose}]: params;\n\t\t\tcase _: [];\n\t\t}\n\t}\n\n\tfunction parseMetaEntry() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:At}, name = metaName(), params = parseMetaParams(name.pos)]: {name: name.name, params: params, pos: name.pos};\n\t\t}\n\t}\n\n\tfunction parseMeta() {\n\t\treturn switch stream {\n\t\t\tcase [entry = parseMetaEntry()]: aadd(parseMeta(), entry);\n\t\t\tcase _: [];\n\t\t}\n\t}\n\n\tfunction metaName() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Const(CIdent(i)), pos:p}]: {name: i, pos: p};\n\t\t\tcase [{tok:Kwd(k), pos:p}]: {name: k.getName().toLowerCase(), pos:p};\n\t\t\tcase [{tok:DblDot}]:\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [{tok:Const(CIdent(i)), pos:p}]: {name: ':$i', pos: p};\n\t\t\t\t\tcase [{tok:Kwd(k), pos:p}]: {name: \":\" +k.getName().toLowerCase(), pos:p};\n\t\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseEnumFlags() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Kwd(KwdEnum), pos:p}]: {flags: [], pos: p};\n\t\t}\n\t}\n\n\tfunction parseClassFlags() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Kwd(KwdClass), pos:p}]: {flags: [], pos: p};\n\t\t\tcase [{tok:Kwd(KwdInterface), pos:p}]: {flags: aadd([],HInterface), pos: p};\n\t\t}\n\t}\n\n\tfunction parseTypeOpt() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:DblDot}, t = parseComplexType()]: t;\n\t\t\tcase _: null;\n\t\t}\n\t}\n\n\tfunction parseComplexType() {\n\t\tvar t = parseComplexTypeInner();\n\t\treturn parseComplexTypeNext(t);\n\t}\n\n\tfunction parseComplexTypeInner():ComplexType {\n\t\treturn switch stream {\n\t\t\tcase [{tok:POpen}, t = parseComplexType(), {tok:PClose}]: TParent(t);\n\t\t\tcase [{tok:BrOpen, pos: p1}]:\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [l = parseTypeAnonymous(false)]: TAnonymous(l);\n\t\t\t\t\tcase [{tok:Binop(OpGt)}, t = parseTypePath(), {tok:Comma}]:\n\t\t\t\t\t\tswitch stream {\n\t\t\t\t\t\t\tcase [l = parseTypeAnonymous(false)]: TExtend([t],l);\n\t\t\t\t\t\t\tcase [fl = parseClassFields(true, p1)]: TExtend([t], fl.fields);\n\t\t\t\t\t\t\tcase _: unexpected();\n\t\t\t\t\t\t}\n\t\t\t\t\tcase [l = parseClassFields(true, p1)]: TAnonymous(l.fields);\n\t\t\t\t\tcase _: unexpected();\n\t\t\t\t}\n\t\t\tcase [{tok:Question}, t = parseComplexTypeInner()]:\n\t\t\t\tTOptional(t);\n\t\t\tcase [t = parseTypePath()]:\n\t\t\t\tTPath(t);\n\t\t}\n\t}\n\n\tfunction parseTypePath() {\n\t\treturn parseTypePath1([]);\n\t}\n\n\tfunction parseTypePath1(pack:Array<String>) {\n\t\treturn switch stream {\n\t\t\tcase [ident = dollarIdentMacro(pack)]:\n\t\t\t\tif (isLowerIdent(ident.name)) {\n\t\t\t\t\tswitch stream {\n\t\t\t\t\t\tcase [{tok:Dot}]:\n\t\t\t\t\t\t\tparseTypePath1(aadd(pack, ident.name));\n\t\t\t\t\t\tcase [{tok:Semicolon}]:\n\t\t\t\t\t\t\tthrow new ParserError(Custom(\"Type name should start with an uppercase letter\"), ident.pos);\n\t\t\t\t\t\tcase _: unexpected();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar sub = switch stream {\n\t\t\t\t\t\tcase [{tok:Dot}]:\n\t\t\t\t\t\t\tswitch stream {\n\t\t\t\t\t\t\t\tcase [{tok:Const(CIdent(name))} && !isLowerIdent(name)]: name;\n\t\t\t\t\t\t\t\tcase _: unexpected();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t\tnull;\n\t\t\t\t\t}\n\t\t\t\t\tvar params = switch stream {\n\t\t\t\t\t\tcase [{tok:Binop(OpLt)}, l = psep(Comma, parseTypePathOrConst), {tok:Binop(OpGt)}]: l;\n\t\t\t\t\t\tcase _: [];\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\tpack: pack,\n\t\t\t\t\t\tname: ident.name,\n\t\t\t\t\t\tparams: params,\n\t\t\t\t\t\tsub: sub\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t}\n\n\tfunction typeName() {\n\t\treturn switch stream {\n\t\t\tcase [{tok: Const(CIdent(name)), pos:p}]:\n\t\t\t\tif (isLowerIdent(name)) throw new ParserError(Custom(\"Type name should start with an uppercase letter\"), p);\n\t\t\t\telse name;\n\t\t}\n\t}\n\n\tfunction parseTypePathOrConst() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:BkOpen, pos: p1}, l = parseArrayDecl(), {tok:BkClose, pos:p2}]: TPExpr({expr: EArrayDecl(l), pos:punion(p1,p2)});\n\t\t\tcase [t = parseComplexType()]: TPType(t);\n\t\t\tcase [{tok:Const(c), pos:p}]: TPExpr({expr:EConst(c), pos:p});\n\t\t\tcase [e = expr()]: TPExpr(e);\n\t\t\tcase _: unexpected();\n\t\t}\n\t}\n\n\tfunction parseComplexTypeNext(t:ComplexType) {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Arrow}, t2 = parseComplexType()]:\n\t\t\t\tswitch(t2) {\n\t\t\t\t\tcase TFunction(args,r):\n\t\t\t\t\t\tTFunction(aadd(args,t),r);\n\t\t\t\t\tcase _:\n\t\t\t\t\t\tTFunction([t],t2);\n\t\t\t\t}\n\t\t\tcase _: t;\n\t\t}\n\t}\n\n\tfunction parseTypeAnonymous(opt:Bool):Array<Field> {\n\t\treturn switch stream {\n\t\t\tcase [id = ident(), {tok:DblDot}, t = parseComplexType()]:\n\t\t\t\tfunction next(p2,acc) {\n\t\t\t\t\tvar t = !opt ? t : switch(t) {\n\t\t\t\t\t\tcase TPath({pack:[], name:\"Null\"}): t;\n\t\t\t\t\t\tcase _: TPath({pack:[], name:\"Null\", sub:null, params:[TPType(t)]});\n\t\t\t\t\t}\n\t\t\t\t\treturn aadd(acc, {\n\t\t\t\t\t\tname: id.name,\n\t\t\t\t\t\tmeta: opt ? [{name:\":optional\",params:[], pos:id.pos}] : [],\n\t\t\t\t\t\taccess: [],\n\t\t\t\t\t\tdoc: null,\n\t\t\t\t\t\tkind: FVar(t,null),\n\t\t\t\t\t\tpos: punion(id.pos, p2)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [{tok:BrClose, pos:p2}]: next(p2, []);\n\t\t\t\t\tcase [{tok:Comma, pos:p2}]:\n\t\t\t\t\t\tswitch stream {\n\t\t\t\t\t\t\tcase [{tok:BrClose}]: next(p2, []);\n\t\t\t\t\t\t\tcase [l = parseTypeAnonymous(false)]: next(p2, l);\n\t\t\t\t\t\t\tcase _: unexpected();\n\t\t\t\t\t\t}\n\t\t\t\t\tcase _: unexpected();\n\t\t\t\t}\n\t\t\tcase [{tok:Question} && !opt]: parseTypeAnonymous(true);\n\t\t}\n\t}\n\n\tfunction parseEnum() {\n\t\tdoc = null;\n\t\tvar meta = parseMeta();\n\t\treturn switch stream {\n\t\t\tcase [name = anyEnumIdent(), doc = getDoc(), params = parseConstraintParams()]:\n\t\t\t\tvar args = switch stream {\n\t\t\t\t\tcase [{tok:POpen}, l = psep(Comma, parseEnumParam), {tok:PClose}]: l;\n\t\t\t\t\tcase _: [];\n\t\t\t\t}\n\t\t\t\tvar t = switch stream {\n\t\t\t\t\tcase [{tok:DblDot}, t = parseComplexType()]: t;\n\t\t\t\t\tcase _: null;\n\t\t\t\t}\n\t\t\t\tvar p2 = switch stream {\n\t\t\t\t\tcase [p = semicolon()]: p;\n\t\t\t\t\tcase _: unexpected();\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tname: name.name,\n\t\t\t\t\tdoc: doc,\n\t\t\t\t\tmeta: meta,\n\t\t\t\t\targs: args,\n\t\t\t\t\tparams: params,\n\t\t\t\t\ttype: t,\n\t\t\t\t\tpos: punion(name.pos, p2)\n\t\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseEnumParam() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Question}, name = ident(), {tok:DblDot}, t = parseComplexType()]: { name: name.name, opt: true, type: t};\n\t\t\tcase [name = ident(), {tok:DblDot}, t = parseComplexType()]: { name: name.name, opt: false, type: t };\n\t\t}\n\t}\n\n\tfunction parseClassField():Field {\n\t\tdoc = null;\n\t\treturn switch stream {\n\t\t\tcase [meta = parseMeta(), al = parseCfRights(true,[]), doc = getDoc()]:\n\t\t\t\tvar data = switch stream {\n\t\t\t\t\tcase [{tok:Kwd(KwdVar), pos:p1}, name = ident()]:\n\t\t\t\t\t\tswitch stream {\n\t\t\t\t\t\t\tcase [{tok:POpen}, i1 = propertyIdent(), {tok:Comma}, i2 = propertyIdent(), {tok:PClose}]:\n\t\t\t\t\t\t\t\tvar t = switch stream {\n\t\t\t\t\t\t\t\t\tcase [{tok:DblDot}, t = parseComplexType()]: t;\n\t\t\t\t\t\t\t\t\tcase _: null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar e = switch stream {\n\t\t\t\t\t\t\t\t\tcase [{tok:Binop(OpAssign)}, e = toplevelExpr(), p2 = semicolon()]: { expr: e, pos: p2 };\n\t\t\t\t\t\t\t\t\tcase [{tok:Semicolon, pos:p2}]: { expr: null, pos: p2 };\n\t\t\t\t\t\t\t\t\tcase _: unexpected();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: name.name,\n\t\t\t\t\t\t\t\t\tpos: punion(p1,e.pos),\n\t\t\t\t\t\t\t\t\tkind: FProp(i1,i2,t,e.expr)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase [t = parseTypeOpt()]:\n\t\t\t\t\t\t\t\tvar e = switch stream {\n\t\t\t\t\t\t\t\t\tcase [{tok:Binop(OpAssign)}, e = toplevelExpr(), p2 = semicolon()]: { expr: e, pos: p2 };\n\t\t\t\t\t\t\t\t\tcase [{tok:Semicolon, pos:p2}]: { expr: null, pos: p2 };\n\t\t\t\t\t\t\t\t\tcase _: unexpected();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: name.name,\n\t\t\t\t\t\t\t\t\tpos: punion(p1,e.pos),\n\t\t\t\t\t\t\t\t\tkind: FVar(t,e.expr)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tcase [{tok:Kwd(KwdFunction), pos:p1}, name = parseFunName(), pl = parseConstraintParams(), {tok:POpen}, al = psep(Comma, parseFunParam), {tok:PClose}, t = parseTypeOpt()]:\n\t\t\t\t\t\tvar e = switch stream {\n\t\t\t\t\t\t\tcase [e = toplevelExpr(), _ = semicolon()]:\n\t\t\t\t\t\t\t\t{ expr: e, pos: e.pos };\n\t\t\t\t\t\t\tcase [{tok: Semicolon,pos:p}]:\n\t\t\t\t\t\t\t\t{ expr: null, pos: p}\n\t\t\t\t\t\t\tcase _: unexpected();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar f = {\n\t\t\t\t\t\t\tparams: pl,\n\t\t\t\t\t\t\targs: al,\n\t\t\t\t\t\t\tret: t,\n\t\t\t\t\t\t\texpr: e.expr\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\tpos: punion(p1, e.pos),\n\t\t\t\t\t\t\tkind: FFun(f)\n\t\t\t\t\t\t}\n\t\t\t\t\tcase _:\n\t\t\t\t\t\tif (al.length == 0)\n\t\t\t\t\t\t\tthrow noMatch();\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tunexpected();\n\t\t\t\t}\n\t\t\t{\n\t\t\t\tname: data.name,\n\t\t\t\tdoc: doc,\n\t\t\t\tmeta: meta,\n\t\t\t\taccess: al,\n\t\t\t\tpos: data.pos,\n\t\t\t\tkind: data.kind\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseCfRights(allowStatic:Bool, l:Array<Access>) {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Kwd(KwdStatic)} && allowStatic, l = parseCfRights(false, aadd(l, AStatic))]: l;\n\t\t\tcase [{tok:Kwd(KwdMacro)} && !l.has(AMacro), l = parseCfRights(allowStatic, aadd(l, AMacro))]: l;\n\t\t\tcase [{tok:Kwd(KwdPublic)} && !(l.has(APublic) || l.has(APrivate)), l = parseCfRights(allowStatic, aadd(l, APublic))]: l;\n\t\t\tcase [{tok:Kwd(KwdPrivate)} && !(l.has(APublic) || l.has(APrivate)), l = parseCfRights(allowStatic, aadd(l, APrivate))]: l;\n\t\t\tcase [{tok:Kwd(KwdOverride)} && !l.has(AOverride), l = parseCfRights(false, aadd(l, AOverride))]: l;\n\t\t\tcase [{tok:Kwd(KwdDynamic)} && !l.has(ADynamic), l = parseCfRights(allowStatic, aadd(l, ADynamic))]: l;\n\t\t\tcase [{tok:Kwd(KwdInline)}, l = parseCfRights(allowStatic, aadd(l, AInline))]: l;\n\t\t\tcase _: l;\n\t\t}\n\t}\n\n\tfunction parseFunName() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Const(CIdent(name))}]: name;\n\t\t\tcase [{tok:Kwd(KwdNew)}]: \"new\";\n\t\t}\n\t}\n\n\tfunction parseFunParam() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Question}, id = ident(), t = parseTypeOpt(), c = parseFunParamValue()]: { name: id.name, opt: true, type: t, value: c};\n\t\t\tcase [id = ident(), t = parseTypeOpt(), c = parseFunParamValue()]: { name: id.name, opt: false, type: t, value: c};\n\n\t\t}\n\t}\n\n\tfunction parseFunParamValue() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Binop(OpAssign)}, e = toplevelExpr()]: e;\n\t\t\tcase _: null;\n\t\t}\n\t}\n\n\tfunction parseFunParamType() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Question}, id = ident(), {tok:DblDot}, t = parseComplexType()]: { name: id.name, opt: true, type: t};\n\t\t\tcase [ id = ident(), {tok:DblDot}, t = parseComplexType()]: { name: id.name, opt: false, type: t};\n\t\t}\n\t}\n\n\tfunction parseConstraintParams() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Binop(OpLt)}, l = psep(Comma, parseConstraintParam), {tok:Binop((OpGt))}]: l;\n\t\t\tcase _: [];\n\t\t}\n\t}\n\n\tfunction parseConstraintParam() {\n\t\treturn switch stream {\n\t\t\tcase [name = typeName()]:\n\t\t\t\tvar params = [];\n\t\t\t\tvar ctl = switch stream {\n\t\t\t\t\tcase [{tok:DblDot}]:\n\t\t\t\t\t\tswitch stream {\n\t\t\t\t\t\t\tcase [{tok:POpen}, l = psep(Comma, parseComplexType), {tok:PClose}]: l;\n\t\t\t\t\t\t\tcase [t = parseComplexType()]: [t];\n\t\t\t\t\t\t\tcase _: unexpected();\n\t\t\t\t\t\t}\n\t\t\t\t\tcase _: [];\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tname: name,\n\t\t\t\t\tparams: params,\n\t\t\t\t\tconstraints: ctl\n\t\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseClassHerit() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Kwd(KwdExtends)}, t = parseTypePath()]: HExtends(t);\n\t\t\tcase [{tok:Kwd(KwdImplements)}, t = parseTypePath()]: HImplements(t);\n\t\t}\n\t}\n\n\tfunction block1() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Const(CIdent(name)), pos:p}]: block2(name, CIdent(name), p);\n\t\t\tcase [{tok:Const(CString(name)), pos:p}]: block2(quoteIdent(name), CString(name), p);\n\t\t\tcase [b = block([])]: EBlock(b);\n\t\t}\n\t}\n\n\tfunction block2(name:String, ident:Constant, p:Position) {\n\t\treturn switch stream {\n\t\t\tcase [{tok:DblDot}, e = expr(), l = parseObjDecl()]:\n\t\t\t\tl.unshift({field:name, expr:e});\n\t\t\t\tEObjectDecl(l);\n\t\t\tcase _:\n\t\t\t\tvar e = exprNext({expr:EConst(ident), pos: p});\n\t\t\t\tvar _ = semicolon();\n\t\t\t\tvar b = block([e]);\n\t\t\t\tEBlock(b);\n\t\t}\n\t}\n\n\tfunction block(acc:Array<Expr>) {\n\t\ttry {\n\t\t\tvar e = parseBlockElt();\n\t\t\treturn block(aadd(acc,e));\n\t\t} catch(e:hxparse.NoMatch<Dynamic>) {\n\t\t\treturn acc;\n\t\t}\n\t}\n\n\tfunction parseBlockElt() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Kwd(KwdVar), pos:p1}, vl = psep(Comma, parseVarDecl), p2 = semicolon()]: { expr: EVars(vl), pos:punion(p1,p2)};\n\t\t\tcase [e = expr(), _ = semicolon()]: e;\n\t\t}\n\t}\n\n\tfunction parseObjDecl() {\n\t\tvar acc = [];\n\t\twhile(true) {\n\t\t\tswitch stream {\n\t\t\t\tcase [{tok:Comma}]:\n\t\t\t\t\tswitch stream {\n\t\t\t\t\t\tcase [id = ident(), {tok:DblDot}, e = expr()]:\n\t\t\t\t\t\t\tacc.push({field:id.name, expr: e});\n\t\t\t\t\t\tcase [{tok:Const(CString(name))}, {tok:DblDot}, e = expr()]:\n\t\t\t\t\t\t\t//aadd(l,{field:quoteIdent(name), expr: e});\n\t\t\t\t\t\t\tacc.push({field:quoteIdent(name), expr: e});\n\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase _:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn acc;\n\t}\n\n\tfunction parseArrayDecl() {\n\t\tvar acc = [];\n\t\tvar br = false;\n\t\twhile(true) {\n\t\t\tswitch stream {\n\t\t\t\tcase [e = expr()]:\n\t\t\t\t\tacc.push(e);\n\t\t\t\t\tswitch stream {\n\t\t\t\t\t\tcase [{tok: Comma}]:\n\t\t\t\t\t\tcase _: br = true;\n\t\t\t\t\t}\n\t\t\t\tcase _: br = true;\n\t\t\t}\n\t\t\tif (br) break;\n\t\t}\n\t\treturn acc;\n\t}\n\n\tfunction parseVarDecl() {\n\t\treturn switch stream {\n\t\t\tcase [id = dollarIdent(), t = parseTypeOpt()]:\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [{tok:Binop(OpAssign)}, e = expr()]: { name: id.name, type: t, expr: e};\n\t\t\t\t\tcase _: { name: id.name, type:t, expr: null};\n\t\t\t\t}\n\t\t}\n\t}\n\n\tfunction inlineFunction() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Kwd(KwdInline)}, {tok:Kwd(KwdFunction), pos:p1}]: { isInline: true, pos: p1};\n\t\t\tcase [{tok:Kwd(KwdFunction), pos: p1}]: { isInline: false, pos: p1};\n\t\t}\n\t}\n\n\tfunction reify(inMacro:Bool) {\n\t\tvar reificator = new Reificator(inMacro);\n\t\treturn {\n\t\t\ttoExpr: function(e:Expr):Expr{\n\t\t\t\treturn reificator.toExpr(e,e.pos);\n\t\t\t},\n\t\t\ttoType: reificator.toCType,\n\t\t\ttoTypeDef: reificator.toTypeDef\n\t\t};\n\t}\n\n\tfunction reifyExpr(e:Expr) {\n\t\tvar toExpr = reify(inMacro).toExpr;\n\t\tvar e = toExpr(e);\n\t\treturn { expr: ECheckType(e, TPath( {pack:[\"haxe\",\"macro\"], name:\"Expr\", sub:null, params: []})), pos: e.pos};\n\t}\n\n\tfunction parseMacroExpr(p:Position) {\n\t\treturn switch stream {\n\t\t\tcase [{tok:DblDot}, t = parseComplexType()]:\n\t\t\t\tvar toType = reify(inMacro).toType;\n\t\t\t\tvar t = toType(t,p);\n\t\t\t\t{ expr: ECheckType(t, TPath( {pack:[\"haxe\",\"macro\"], name:\"Expr\", sub:\"ComplexType\", params: []})), pos: p};\n\t\t\tcase [{tok:Kwd(KwdVar), pos:p1}, vl = psep(Comma, parseVarDecl)]:\n\t\t\t\treifyExpr({expr:EVars(vl), pos:p1});\n\t\t\tcase [d = parseClass([],[],false)]:\n\t\t\t\tvar toType = reify(inMacro).toTypeDef;\n\t\t\t\t{ expr: ECheckType(toType(d), TPath( {pack:[\"haxe\",\"macro\"], name:\"Expr\", sub:\"TypeDefinition\", params: []})), pos: p};\n\t\t\tcase [e = secureExpr()]:\n\t\t\t\treifyExpr(e);\n\t\t}\n\t}\n\n\tpublic function expr():Expr {\n\t\treturn switch stream {\n\t\t\tcase [meta = parseMetaEntry()]:\n\t\t\t\tmakeMeta(meta.name, meta.params, secureExpr(), meta.pos);\n\t\t\tcase [{tok:BrOpen, pos:p1}, b = block1(), {tok:BrClose, pos:p2}]:\n\t\t\t\tvar e = { expr: b, pos: punion(p1, p2)};\n\t\t\t\tswitch(b) {\n\t\t\t\t\tcase EObjectDecl(_): exprNext(e);\n\t\t\t\t\tcase _: e;\n\t\t\t\t}\n\t\t\tcase [{tok:Kwd(KwdMacro), pos:p}]:\n\t\t\t\tparseMacroExpr(p);\n\t\t\tcase [{tok:Kwd(KwdVar), pos: p1}, v = parseVarDecl()]: { expr: EVars([v]), pos: p1};\n\t\t\tcase [{tok:Const(c), pos:p}]: exprNext({expr:EConst(c), pos:p});\n\t\t\tcase [{tok:Kwd(KwdThis), pos:p}]: exprNext({expr: EConst(CIdent(\"this\")), pos:p});\n\t\t\tcase [{tok:Kwd(KwdTrue), pos:p}]: exprNext({expr: EConst(CIdent(\"true\")), pos:p});\n\t\t\tcase [{tok:Kwd(KwdFalse), pos:p}]: exprNext({expr: EConst(CIdent(\"false\")), pos:p});\n\t\t\tcase [{tok:Kwd(KwdNull), pos:p}]: exprNext({expr: EConst(CIdent(\"null\")), pos:p});\n\t\t\tcase [{tok:Kwd(KwdCast), pos:p1}]:\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [{tok:POpen}, e = expr()]:\n\t\t\t\t\t\tswitch stream {\n\t\t\t\t\t\t\tcase [{tok:Comma}, t = parseComplexType(), {tok:PClose, pos:p2}]: exprNext({expr:ECast(e,t), pos: punion(p1,p2)});\n\t\t\t\t\t\t\tcase [{tok:PClose, pos:p2}]: exprNext({expr:ECast(e,null),pos:punion(p1,p2)});\n\t\t\t\t\t\t\tcase _: unexpected();\n\t\t\t\t\t\t}\n\t\t\t\t\tcase [e = secureExpr()]: exprNext({expr:ECast(e,null), pos:punion(p1, e.pos)});\n\t\t\t\t}\n\t\t\tcase [{tok:Kwd(KwdThrow), pos:p}, e = expr()]: { expr: EThrow(e), pos: p};\n\t\t\tcase [{tok:Kwd(KwdNew), pos:p1}, t = parseTypePath(), {tok:POpen, pos:_}]:\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [al = psep(Comma, expr), {tok:PClose, pos:p2}]: exprNext({expr:ENew(t,al), pos:punion(p1, p2)});\n\t\t\t\t\tcase _: unexpected();\n\t\t\t\t}\n\t\t\tcase [{tok:POpen, pos: p1}, e = expr()]:\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [{tok:PClose, pos:p2}]: exprNext({expr:EParenthesis(e), pos:punion(p1, p2)});\n\t\t\t\t\tcase [{tok:DblDot}, t = parseComplexType(), {tok:PClose, pos:p2}]: exprNext({expr:ECheckType(e, t), pos:punion(p1, p2)});\n\t\t\t\t}\n\t\t\tcase [{tok:BkOpen, pos:p1}, l = parseArrayDecl(), {tok:BkClose, pos:p2}]: exprNext({expr: EArrayDecl(l), pos:punion(p1,p2)});\n\t\t\tcase [inl = inlineFunction(), name = parseOptional(dollarIdent), pl = parseConstraintParams(), {tok:POpen}, al = psep(Comma,parseFunParam), {tok:PClose}, t = parseTypeOpt()]:\n\t\t\t\tfunction make(e) {\n\t\t\t\t\tvar f = {\n\t\t\t\t\t\tparams: pl,\n\t\t\t\t\t\tret: t,\n\t\t\t\t\t\targs: al,\n\t\t\t\t\t\texpr: e\n\t\t\t\t\t};\n\t\t\t\t\treturn { expr: EFunction(name == null ? null : inl.isInline ? \"inline_\" + name.name : name.name, f), pos: punion(inl.pos, e.pos)};\n\t\t\t\t}\n\t\t\t\texprNext(make(secureExpr()));\n\t\t\tcase [{tok:Unop(op), pos:p1}, e = expr()]: makeUnop(op,e,p1);\n\t\t\tcase [{tok:Binop(OpSub), pos:p1}, e = expr()]:\n\t\t\t\tfunction neg(s:String) {\n\t\t\t\t\treturn s.charCodeAt(0) == '-'.code\n\t\t\t\t\t\t? s.substr(1)\n\t\t\t\t\t\t: \"-\" + s;\n\t\t\t\t}\n\t\t\t\tswitch (makeUnop(OpNeg,e,p1)) {\n\t\t\t\t\tcase {expr:EUnop(OpNeg,false,{expr:EConst(CInt(i))}), pos:p}:\n\t\t\t\t\t\t{expr:EConst(CInt(neg(i))), pos:p};\n\t\t\t\t\tcase {expr:EUnop(OpNeg,false,{expr:EConst(CFloat(j))}), pos:p}:\n\t\t\t\t\t\t{expr:EConst(CFloat(neg(j))), pos:p};\n\t\t\t\t\tcase e: e;\n\t\t\t\t}\n\t\t\tcase [{tok:Kwd(KwdFor), pos:p}, {tok:POpen}, it = expr(), {tok:PClose}]:\n\t\t\t\tvar e = secureExpr();\n\t\t\t\t{ expr: EFor(it,e), pos:punion(p, e.pos)};\n\t\t\tcase [{tok:Kwd(KwdIf), pos:p}, {tok:POpen}, cond = expr(), {tok:PClose}, e1 = expr()]:\n\t\t\t\tvar e2 = switch stream {\n\t\t\t\t\tcase [{tok:Kwd(KwdElse)}, e2 = expr()]: e2;\n\t\t\t\t\tcase _:\n\t\t\t\t\t\tswitch [peek(0),peek(1)] {\n\t\t\t\t\t\t\tcase [{tok:Semicolon}, {tok:Kwd(KwdElse)}]:\n\t\t\t\t\t\t\t\tjunk();\n\t\t\t\t\t\t\t\tjunk();\n\t\t\t\t\t\t\t\tsecureExpr();\n\t\t\t\t\t\t\tcase _: null;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t{ expr: EIf(cond,e1,e2), pos:punion(p, e2 == null ? e1.pos : e2.pos)};\n\t\t\tcase [{tok:Kwd(KwdReturn), pos:p}, e = parseOptional(expr)]: { expr: EReturn(e), pos: e == null ? p : punion(p,e.pos)};\n\t\t\tcase [{tok:Kwd(KwdBreak), pos:p}]: { expr: EBreak, pos: p };\n\t\t\tcase [{tok:Kwd(KwdContinue), pos:p}]: { expr: EContinue, pos: p};\n\t\t\tcase [{tok:Kwd(KwdWhile), pos:p1}, {tok:POpen}, cond = expr(), {tok:PClose}]:\n\t\t\t\tvar e = secureExpr();\n\t\t\t\t{ expr: EWhile(cond, e, true), pos: punion(p1, e.pos)};\n\t\t\tcase [{tok:Kwd(KwdDo), pos:p1}, e = expr(), {tok:Kwd(KwdWhile)}, {tok:POpen}, cond = expr(), {tok:PClose}]: { expr: EWhile(cond,e,false), pos:punion(p1, e.pos)};\n\t\t\tcase [{tok:Kwd(KwdSwitch), pos:p1}, e = expr(), {tok:BrOpen}, cases = parseSwitchCases(), {tok:BrClose, pos:p2}]:\n\t\t\t\t{ expr: ESwitch(e,cases.cases,cases.def), pos:punion(p1,p2)};\n\t\t\tcase [{tok:Kwd(KwdTry), pos:p1}, e = expr(), cl = parseRepeat(parseCatch)]:\n\t\t\t\t{ expr: ETry(e,cl), pos:p1};\n\t\t\tcase [{tok:IntInterval(i), pos:p1}, e2 = expr()]: makeBinop(OpInterval,{expr:EConst(CInt(i)), pos:p1}, e2);\n\t\t\tcase [{tok:Kwd(KwdUntyped), pos:p1}, e = expr()]: { expr: EUntyped(e), pos:punion(p1,e.pos)};\n\t\t\tcase [{tok:Dollar(v), pos:p}]: exprNext({expr:EConst(CIdent(\"$\" + v)), pos:p});\n\t\t}\n\t}\n\n\tfunction toplevelExpr():Expr {\n\t\treturn expr();\n\t}\n\n\tfunction exprNext(e1:Expr):Expr {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Dot, pos:p}]:\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [{tok:Dollar(v), pos:p2}]:\n\t\t\t\t\t\texprNext({expr:EField(e1, \"$\" + v), pos:punion(e1.pos, p2)});\n\t\t\t\t\tcase [{tok:Const(CIdent(f)), pos:p2} && p.max == p2.min]:\n\t\t\t\t\t\texprNext({expr:EField(e1,f), pos:punion(e1.pos,p2)});\n\t\t\t\t\tcase [{tok:Kwd(KwdMacro), pos:p2} && p.max == p2.min]:\n\t\t\t\t\t\texprNext({expr:EField(e1,\"macro\"), pos:punion(e1.pos,p2)});\n\t\t\t\t\tcase _:\n\t\t\t\t\t\tswitch(e1) {\n\t\t\t\t\t\t\tcase {expr: EConst(CInt(v)), pos:p2} if (p2.max == p.min):\n\t\t\t\t\t\t\t\texprNext({expr:EConst(CFloat(v + \".\")), pos:punion(p,p2)});\n\t\t\t\t\t\t\tcase _: unexpected();\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase [{tok:POpen, pos:_}]:\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [params = parseCallParams(), {tok:PClose, pos:p2}]:\n\t\t\t\t\t\texprNext({expr:ECall(e1,params),pos:punion(e1.pos,p2)});\n\t\t\t\t\tcase _: unexpected();\n\t\t\t\t}\n\t\t\tcase [{tok:BkOpen}, e2 = expr(), {tok:BkClose, pos:p2}]:\n\t\t\t\texprNext({expr:EArray(e1,e2), pos:punion(e1.pos,p2)});\n\t\t\tcase [{tok:Binop(OpGt)}]:\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [{tok:Binop(OpGt)}]:\n\t\t\t\t\t\tswitch stream {\n\t\t\t\t\t\t\tcase [{tok:Binop(OpGt)}]:\n\t\t\t\t\t\t\t\tswitch stream {\n\t\t\t\t\t\t\t\t\tcase [{tok:Binop(OpAssign)}, e2 = expr()]:\n\t\t\t\t\t\t\t\t\t\tmakeBinop(OpAssignOp(OpUShr),e1,e2);\n\t\t\t\t\t\t\t\t\tcase [e2 = secureExpr()]: makeBinop(OpUShr,e1,e2);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase [{tok:Binop(OpAssign)}, e2 = expr()]:\n\t\t\t\t\t\t\t\tmakeBinop(OpAssignOp(OpShr),e1,e2);\n\t\t\t\t\t\t\tcase [e2 = secureExpr()]:\n\t\t\t\t\t\t\t\tmakeBinop(OpShr,e1,e2);\n\t\t\t\t\t\t}\n\t\t\t\t\tcase [{tok:Binop(OpAssign)}]:\n\t\t\t\t\t\tmakeBinop(OpGte,e1,secureExpr());\n\t\t\t\t\tcase [e2 = secureExpr()]:\n\t\t\t\t\t\tmakeBinop(OpGt,e1,e2);\n\t\t\t\t}\n\t\t\tcase [{tok:Binop(op)}, e2 = expr()]:\n\t\t\t\tmakeBinop(op,e1,e2);\n\t\t\tcase [{tok:Question}, e2 = expr(), {tok:DblDot}, e3 = expr()]:\n\t\t\t\t{ expr: ETernary(e1,e2,e3), pos: punion(e1.pos, e3.pos)};\n\t\t\tcase [{tok:Kwd(KwdIn)}, e2 = expr()]:\n\t\t\t\t{expr:EIn(e1,e2), pos:punion(e1.pos, e2.pos)};\n\t\t\tcase [{tok:Unop(op), pos:p} && isPostfix(e1,op)]:\n\t\t\t\texprNext({expr:EUnop(op,true,e1), pos:punion(e1.pos, p)});\n\t\t\tcase [{tok:BrOpen, pos:p1} && isDollarIdent(e1), eparam = expr(), {tok:BrClose,pos:p2}]:\n\t\t\t\tswitch (e1.expr) {\n\t\t\t\t\tcase EConst(CIdent(n)):\n\t\t\t\t\t\texprNext({expr: EMeta({name:n, params:[], pos:e1.pos},eparam), pos:punion(p1,p2)});\n\t\t\t\t\tcase _: throw false;\n\t\t\t\t}\n\t\t\tcase _: e1;\n\t\t}\n\t}\n\n\tfunction parseGuard() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Kwd(KwdIf)}, {tok:POpen}, e = expr(), {tok:PClose}]:\n\t\t\t\te;\n\t\t}\n\t}\n\n\tfunction parseSwitchCases() {\n\t\tvar cases = [];\n\t\tvar def = null;\n\t\tfunction caseBlock(b:Array<Expr>, p:Position) {\n\t\t\treturn if (b.length == 0) {\n\t\t\t\tnull;\n\t\t\t} else switch(b) {\n\t\t\t\tcase [e = macro $b{el}]: e;\n\t\t\t\tcase _: { expr: EBlock(b), pos: p};\n\t\t\t}\n\t\t}\n\t\twhile(true) {\n\t\t\tswitch stream {\n\t\t\t\tcase [{tok:Kwd(KwdDefault), pos:p1}, {tok:DblDot}]:\n\t\t\t\t\tvar b = block([]);\n\t\t\t\t\tvar e = caseBlock(b, p1);\n\t\t\t\t\tif (e == null) {\n\t\t\t\t\t\te = { expr: null, pos: p1 };\n\t\t\t\t\t}\n\t\t\t\t\tif (def != null) {\n\t\t\t\t\t\tthrow new ParserError(DuplicateDefault, p1);\n\t\t\t\t\t}\n\t\t\t\t\tdef = e;\n\t\t\t\tcase [{tok:Kwd(KwdCase), pos:p1}, el = psep(Comma,expr), eg = parseOptional(parseGuard), {tok:DblDot}]:\n\t\t\t\t\tvar b = block([]);\n\t\t\t\t\tvar e = caseBlock(b, p1);\n\t\t\t\t\tcases.push({values:el,guard:eg,expr:e});\n\t\t\t\tcase _:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tcases: cases,\n\t\t\tdef: def\n\t\t}\n\t}\n\n\tfunction parseCatch() {\n\t\treturn switch stream {\n\t\t\tcase [{tok:Kwd(KwdCatch), pos:p}, {tok:POpen}, id = ident(), ]:\n\t\t\t\tswitch stream {\n\t\t\t\t\tcase [{tok:DblDot}, t = parseComplexType(), {tok:PClose}]:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: id.name,\n\t\t\t\t\t\t\ttype: t,\n\t\t\t\t\t\t\texpr: secureExpr()\n\t\t\t\t\t\t}\n\t\t\t\t\tcase _:\n\t\t\t\t\t\tthrow new ParserError(MissingType, p);\n\t\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseCallParams() {\n\t\tvar ret = [];\n\t\tswitch stream {\n\t\t\tcase [e = expr()]: ret.push(e);\n\t\t\tcase _: return [];\n\t\t}\n\t\twhile(true) {\n\t\t\tswitch stream {\n\t\t\t\tcase [{tok: Comma}, e = expr()]: ret.push(e);\n\t\t\t\tcase _: break;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tfunction secureExpr() {\n\t\treturn expr();\n\t}\n}\n\nprivate class Reificator{\n\n\tvar curPos:Null<Expr>;\n\tvar inMacro:Bool;\n\n\tpublic function new(inMacro:Bool){\n\t\tthis.curPos = null;\n\t\tthis.inMacro = inMacro;\n\t}\n\n\tfunction mkEnum(ename:String, name:String, vl:Array<Expr>, p:Position):Expr{\n\t\tvar constr:Expr = {expr:EConst(CIdent(name)), pos:p};\n\t\tswitch (vl){\n\t\t\tcase []: return constr;\n\t\t\tcase _ : return {expr:ECall(constr, vl),pos:p};\n\t\t}\n\t}\n\n\tfunction toConst(c:Constant, p:Position):Expr{\n\t\tfunction cst(n:String, v:String):Expr{\n\t\t\treturn mkEnum(\"Constant\", n, [{expr:EConst(CString(v)),pos:p}], p);\n\t\t}\n\n\t\tswitch(c){\n\t\t\tcase CInt(i): return cst(\"CInt\", i);\n\t\t\tcase CString(s): return cst(\"CString\", s);\n\t\t\tcase CFloat(s): return cst(\"CFloat\", s);\n\t\t\tcase CIdent(s): return cst(\"CIdent\", s);\n\t\t\tcase CRegexp(r,o): return mkEnum(\"Constant\", \"CRegexp\", [{expr:EConst(CString(r)),pos:p},{expr:EConst(CString(o)),pos:p}], p);\n\t\t}\n\t}\n\n\tfunction toBinop(o:Binop,p:Position):Expr{\n\t\tfunction op(n:String):Expr{\n\t\t\treturn mkEnum(\"Binop\", n, [], p);\n\t\t}\n\n\t\tswitch(o){\n\t\t\tcase OpAdd: return op(\"OpAdd\");\n\t\t\tcase OpMult: return op(\"OpMult\");\n\t\t\tcase OpDiv: return op(\"OpDiv\");\n\t\t\tcase OpSub: return op(\"OpSub\");\n\t\t\tcase OpAssign: return op(\"OpAssign\");\n\t\t\tcase OpEq: return op(\"OpEq\");\n\t\t\tcase OpNotEq: return op(\"OpNotEq\");\n\t\t\tcase OpGt: return op(\"OpGt\");\n\t\t\tcase OpGte: return op(\"OpGte\");\n\t\t\tcase OpLt: return op(\"OpLt\");\n\t\t\tcase OpLte: return op(\"OpLte\");\n\t\t\tcase OpAnd: return op(\"OpAnd\");\n\t\t\tcase OpOr: return op(\"OpOr\");\n\t\t\tcase OpXor: return op(\"OpXor\");\n\t\t\tcase OpBoolAnd: return op(\"OpBoolAnd\");\n\t\t\tcase OpBoolOr: return op(\"OpBoolOr\");\n\t\t\tcase OpShl: return op(\"OpShl\");\n\t\t\tcase OpShr: return op(\"OpShr\");\n\t\t\tcase OpUShr: return op(\"OpUShr\");\n\t\t\tcase OpMod: return op(\"OpMod\");\n\t\t\tcase OpAssignOp(o): return mkEnum(\"Binop\", \"OpAssignOp\", [toBinop(o, p)], p);\n\t\t\tcase OpInterval: return op(\"OpInterval\");\n\t\t\tcase OpArrow: return op(\"OpArrow\");\n\t\t}\n\t}\n\n\tfunction toString(s:String, p:Position):Expr{\n\t\tvar len = s.length;\n\t\tif (len>1 && s.charAt(0) == '$') return {expr:EConst(CIdent(s.substr(1))),pos:p};\n\t\telse return {expr:EConst(CString(s)),pos:p};\n\t}\n\n\tfunction toArray<T>(f:T->Position->Expr, a:Array<T>, p:Position):Expr{\n\t\tvar vals = [];\n\t\tfor (v in a){\n\t\t\tvals.push(f(v,p));\n\t\t}\n\n\t\tvar e:Expr = {\n\t\tpos:p,\n\t\texpr:EArrayDecl(vals)\n\t\t};\n\t\treturn e;\n\t}\n\n\tfunction toNull(p:Position):Expr{\n\t\treturn {expr:EConst(CIdent(\"null\")),pos:p};\n\t}\n\n\tfunction toOpt<T>(f:T -> Position -> Expr, v:Null<T>, p:Position):Expr{\n\t\tif (v == null) return toNull(p);\n\t\telse return f(v, p);\n\t}\n\n\tfunction toBool(o:Bool, p:Position):Expr{\n\t\tvar s:String = o?\"true\":\"false\";\n\t\treturn {expr:EConst(CIdent(s)),pos:p};\n\t}\n\n\tfunction toObj(fields:Array<{field:String, expr:Expr}>, p:Position):Expr{\n\t\treturn {expr:EObjectDecl(fields),pos:p};\n\t}\n\n\tfunction toTParam(t:TypeParam, p:Position):Expr{\n\t\tvar n:String;\n\t\tvar v:Expr;\n\t\tswitch(t){\n\t\t\tcase TPType(t):\n\t\t\t\tn = \"TPType\";\n\t\t\t\tv = toCType(t, p);\n\t\t\tcase TPExpr(e):\n\t\t\t\tn = \"TPExpr\";\n\t\t\t\tv = toExpr(e, p);\n\t\t}\n\n\t\treturn mkEnum(\"TypeParam\", n, [v], p);\n\t}\n\n\tfunction toTPath(t:TypePath, p:Position):Expr{\n\t\tvar fields:Array<{field:String, expr:Expr}> = [\n\t\t{field:\"pack\",   expr:toArray(toString, t.pack, p)},\n\t\t{field:\"name\",   expr:toString(t.name, p)},\n\t\t{field:\"params\", expr:toArray(toTParam, t.params, p)}\n\t\t];\n\t\tif(t.sub != null){\n\t\t\tfields.push({field:\"sub\",expr:toString(t.sub, p)});\n\t\t}\n\t\treturn toObj(fields, p);\n\t}\n\n\tpublic function toCType(t:ComplexType, p:Position):Expr {\n\t\tfunction ct(n:String, vl:Array<Expr>):Expr {\n\t\t\treturn mkEnum(\"ComplexType\", n, vl, p);\n\t\t}\n\n\t\treturn switch(t){\n\t\t\tcase TPath({pack: [], params: [], sub: null, name: n }) if (n.charAt(0) == '$'):\n\t\t\t\ttoString(n, p);\n\t\t\tcase TPath(t): ct(\"TPath\", [toTPath(t, p)]);\n\t\t\tcase TFunction(args, ret): ct(\"TFunction\", [toArray(toCType, args, p), toCType(ret, p)]);\n\t\t\tcase TAnonymous(fields): ct(\"TAnonymous\", [toArray(toCField, fields, p)]);\n\t\t\tcase TParent(t): ct(\"TParent\", [toCType(t, p)]);\n\t\t\tcase TExtend(tl, fields): ct(\"TExtend\", [toArray(toTPath, tl, p), toArray(toCField, fields, p)]);\n\t\t\tcase TOptional(t): ct(\"TOptional\", [toCType(t, p)]);\n\t\t}\n\t}\n\n\tfunction toFun(f:Function, p:Position):Expr{\n\t\tfunction farg(vv:FunctionArg,p:Position):Expr{\n\t\t\tvar n = vv.name;\n\t\t\tvar o = vv.opt;\n\t\t\tvar t = vv.type;\n\t\t\tvar e = vv.value;\n\t\t\tvar fields:Array<{field:String, expr:Expr}> = [\n\t\t\t{field:\"name\", expr:toString(n, p)},\n\t\t\t{field:\"opt\",  expr:toBool(o, p)},\n\t\t\t{field:\"type\", expr:toOpt(toCType, t, p)}\n\t\t\t];\n\t\t\tif (e != null){\n\t\t\t\tfields.push({field:\"value\", expr:toExpr(e, p)});\n\t\t\t}\n\t\t\treturn toObj(fields, p);\n\t\t}\n\n\t\tfunction fparam(t:TypeParamDecl,p:Position):Expr{\n\t\t\tvar fields:Array<{field:String, expr:Expr}> = [\n\t\t\t{field:\"name\",        expr:toString(t.name, p)},\n\t\t\t{field:\"constraints\", expr:toArray(toCType, t.constraints, p)},\n\t\t\t{field:\"params\",      expr:toArray(fparam, t.params, p)}\n\t\t\t];\n\t\t\treturn toObj(fields, p);\n\t\t}\n\n\t\tvar fields:Array<{field:String, expr:Expr}> = [\n\t\t{field:\"args\",   expr:toArray(farg, f.args, p)},\n\t\t{field:\"ret\",    expr:toOpt(toCType, f.ret, p)},\n\t\t{field:\"expr\",   expr:toOpt(toExpr, f.expr, p)},\n\t\t{field:\"params\", expr:toArray(fparam, f.params, p)}\n\t\t];\n\n\t\treturn toObj(fields, p);\n\t}\n\n\tfunction toAccess(a:Access, p:Position):Expr {\n\t\tvar n:String;\n\t\tvar n = switch(a){\n\t\t\tcase APublic :   \"APublic\";\n\t\t\tcase APrivate :  \"APrivate\";\n\t\t\tcase AStatic :   \"AStatic\";\n\t\t\tcase AOverride : \"AOverride\";\n\t\t\tcase ADynamic :  \"ADynamic\";\n\t\t\tcase AInline :   \"AInline\";\n\t\t\tcase AMacro :    \"AMacro\";\n\t\t}\n\t\treturn mkEnum(\"Access\", n, [], p);\n\t}\n\n\tfunction toCField(f:Field, p:Position):Expr {\n\t\tvar p2:Position = f.pos;\n\n\t\tfunction toFType(k:FieldType):Expr {\n\t\t\tvar n:String;\n\t\t\tvar vl:Array<Expr>;\n\t\t\tswitch(k){\n\t\t\t\tcase FVar(ct, e): n = \"FVar\"; vl = [toOpt(toCType, ct, p), toOpt(toExpr, e, p)];\n\t\t\t\tcase FFun(f): n = \"FFun\"; vl = [toFun(f, p)];\n\t\t\t\tcase FProp(get, set, t, e): n = \"FProp\"; vl = [toString(get, p), toString(set, p), toOpt(toCType, t, p), toOpt(toExpr, e, p)];\n\t\t\t}\n\t\t\treturn mkEnum(\"FieldType\", n, vl, p);\n\t\t}\n\n\t\tvar fields:Array<{field:String, expr:Expr}> = [];\n\t\tfields.push({field:\"name\", expr:toString(f.name, p)});\n\t\tif (f.doc != null) fields.push({field:\"doc\", expr:toString(f.doc, p)});\n\t\tif (f.access != null) fields.push({field:\"access\", expr:toArray(toAccess, f.access, p)});\n\t\tfields.push({field:\"kind\", expr:toFType(f.kind)});\n\t\tfields.push({field:\"pos\",  expr:toPos(f.pos)});\n\t\tif (f.meta != null) fields.push({field:\"meta\", expr:toMeta(f.meta, p)});\n\n\t\treturn toObj(fields, p);\n\t}\n\n\tfunction toMeta(m:Metadata, p:Position):Expr {\n\t\treturn toArray(function(me:MetadataEntry, _:Position):Expr {\n\t\t\tvar fields:Array<{field:String, expr:Expr}> = [\n\t\t\t{field:\"name\",   expr:toString(me.name, me.pos)},\n\t\t\t{field:\"params\", expr:toExprArray(me.params, me.pos)},\n\t\t\t{field:\"pos\",    expr:toPos(me.pos)}\n\t\t\t];\n\t\t\treturn toObj(fields, me.pos);\n\t\t}, m, p);\n\t}\n\n\tfunction toPos(p:Position):Expr {\n\t\tif (curPos != null) return curPos;\n\n\t\tvar file:Expr = {expr:EConst(CString(p.file)),         pos:p};\n\t\tvar pmin:Expr = {expr:EConst(CInt(Std.string(p.min))), pos:p};\n\t\tvar pmax:Expr = {expr:EConst(CInt(Std.string(p.max))), pos:p};\n\t\tif (inMacro)\n\t\t\treturn {expr:EUntyped({expr:ECall({expr:EConst(CIdent(\"$mk_pos\")), pos:p}, [file, pmin, pmax]), pos:p}), pos:p};\n\t\telse\n\t\t\treturn toObj([{field:\"file\", expr:file}, {field:\"min\", expr:pmin}, {field:\"max\", expr:pmax}], p);\n\t}\n\n\tfunction toExprArray(a:Array<Expr>, p:Position):Expr {\n\t\tif (a.length > 0){\n\t\t\tswitch(a[0].expr){\n\t\t\tcase EMeta(md,e1):\n\t\t\t\tif (md.name == \"$a\" && md.params.length == 0){\n\t\t\t\t\tswitch(e1.expr){\n\t\t\t\t\tcase EArrayDecl(el): return toExprArray(el, p);\n\t\t\t\t\tdefault: return e1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t\treturn toArray(toExpr, a, p);\n\t}\n\n\tpublic function toExpr(e:Expr, _:Position):Expr {\n\t\tvar p = e.pos;\n\t\tfunction expr(n:String, vl:Array<Expr>):Expr {\n\t\t\tvar e = mkEnum(\"ExprDef\", n, vl, p);\n\t\t\treturn toObj([{field:\"expr\", expr:e}, {field:\"pos\", expr:toPos(p)}], p);\n\t\t}\n\t\tfunction loop(e:Expr):Expr {\n\t\t\treturn toExpr(e, e.pos);\n\t\t}\n\t\treturn switch(e.expr){\n\t\t\tcase EConst(CIdent(n)) if (n.charAt(0) == '$' && n.length > 1):\n\t\t\t\ttoString(n, p);\n\t\t\tcase EConst(c):\n\t\t\t\texpr(\"EConst\", [toConst(c, p)]);\n\t\t\tcase EArray(e1, e2):\n\t\t\t\texpr(\"EArray\", [loop(e1), loop(e2)]);\n\t\t\tcase EBinop(op, e1, e2):\n\t\t\t\texpr(\"EBinop\", [toBinop(op, p), loop(e1), loop(e2)]);\n\t\t\tcase EField(e, s):\n\t\t\t\texpr(\"EField\", [loop(e), toString(s, p)]);\n\t\t\tcase EParenthesis(e):\n\t\t\t\texpr(\"EParenthesis\", [loop(e)]);\n\t\t\tcase EObjectDecl(fl):\n\t\t\t\texpr(\"EObjectDecl\", [toArray(function(f:{field:String, expr:Expr}, p2:Position):Expr {return toObj([{field:\"field\", expr:toString(f.field, p)}, {field:\"expr\", expr:loop(f.expr)}], p2);}, fl, p)]);\n\t\t\tcase EArrayDecl(el):\n\t\t\t\texpr(\"EArrayDecl\", [toExprArray(el, p)]);\n\t\t\tcase ECall(e, el):\n\t\t\t\texpr(\"ECall\", [loop(e), toExprArray(el, p)]);\n\t\t\tcase ENew(t, el):\n\t\t\t\texpr(\"ENew\", [toTPath(t, p), toExprArray(el, p)]);\n\t\t\tcase EUnop(op, isPostfix, e):\n\t\t\t\tvar ops:String;\n\t\t\t\tswitch(op){\n\t\t\t\t\tcase OpIncrement: ops = \"OpIncrement\";\n\t\t\t\t\tcase OpDecrement: ops = \"OpDecrement\";\n\t\t\t\t\tcase OpNot: ops = \"OpNot\";\n\t\t\t\t\tcase OpNeg: ops = \"OpNeg\";\n\t\t\t\t\tcase OpNegBits: ops = \"OpNegBits\";\n\t\t\t\t}\n\t\t\t\tvar op2 = mkEnum(\"Unop\", ops, [], p);\n\t\t\t\texpr(\"EUnop\", [op2, toBool(isPostfix, p), loop(e)]);\n\t\t\tcase EVars(vl):\n\t\t\t\texpr(\"EVars\", [toArray(function(vv:Var, p:Position):Expr {\n\t\t\t\t\tvar name = vv.name;\n\t\t\t\t\tvar type = vv.type;\n\t\t\t\t\tvar expr = vv.expr;\n\t\t\t\t\tvar fields:Array<{field:String, expr:Expr}> = [\n\t\t\t\t\t\t{field:\"name\", expr:toString(name, p)},\n\t\t\t\t\t\t{field:\"type\", expr:toOpt(toCType, type, p)},\n\t\t\t\t\t\t{field:\"expr\", expr:toOpt(toExpr, expr, p)}\n\t\t\t\t\t];\n\t\t\t\t\treturn toObj(fields, p);\n\t\t\t\t}, vl, p)]);\n\t\t\tcase EFunction(name, f):\n\t\t\t\texpr(\"EFunction\", [toOpt(toString, name, p), toFun(f, p)]);\n\t\t\tcase EBlock(el):\n\t\t\t\texpr(\"EBlock\", [toExprArray(el, p)]);\n\t\t\tcase EFor(e1, e2):\n\t\t\t\texpr(\"EFor\", [loop(e1), loop(e2)]);\n\t\t\tcase EIn(e1, e2):\n\t\t\t\texpr(\"EIn\", [loop(e1), loop(e2)]);\n\t\t\tcase EIf(e1, e2, eelse):\n\t\t\t\texpr(\"EIf\", [loop(e1), loop(e2), toOpt(toExpr, eelse, p)]);\n\t\t\tcase EWhile(e1, e2, normalWhile):\n\t\t\t\texpr(\"EWhile\", [loop(e1), loop(e2), toBool(normalWhile, p)]);\n\t\t\tcase ESwitch(e1, cases, def):\n\t\t\t\tfunction scase(swc:Case, p:Position):Expr {\n\t\t\t\t\tvar el = swc.values;\n\t\t\t\t\tvar eg = swc.guard;\n\t\t\t\t\tvar e = swc.expr;\n\t\t\t\t\treturn toObj([{field:\"values\", expr:toExprArray(el, p)}, {field:\"guard\", expr:toOpt(toExpr, eg, p)}, {field:\"expr\", expr:toOpt(toExpr, e, p)}], p);\n\t\t\t\t}\n\t\t\t\texpr(\"ESwitch\", [loop(e1), toArray(scase, cases, p), toOpt(\n\t\t\t\t\tfunction(def2:Null<Expr>, p:Position):Expr {\n\t\t\t\t\t\treturn toOpt(function(def3:Expr, p:Position):Expr {\n\t\t\t\t\t\t\treturn toExpr(def3, p);\n\t\t\t\t\t\t}, def2, p);\n\t\t\t\t\t}, def, p)]);\n\t\t\tcase ETry(e1, catches):\n\t\t\t\tfunction scatch(c:Catch, p:Position):Expr {\n\t\t\t\t\tvar n = c.name;\n\t\t\t\t\tvar t = c.type;\n\t\t\t\t\tvar e = c.expr;\n\t\t\t\t\treturn toObj([{field:\"name\", expr:toString(n, p)}, {field:\"type\", expr:toCType(t, p)}, {field:\"expr\", expr:loop(e)}], p);\n\t\t\t\t}\n\t\t\t\texpr(\"ETry\", [loop(e1), toArray(scatch, catches, p)]);\n\t\t\tcase EReturn(eo):\n\t\t\t\texpr(\"EReturn\", [toOpt(toExpr, eo, p)]);\n\t\t\tcase EBreak:\n\t\t\t\texpr(\"EBreak\", []);\n\t\t\tcase EContinue:\n\t\t\t\texpr(\"EContinue\", []);\n\t\t\tcase EUntyped(e):\n\t\t\t\texpr(\"EUntyped\", [loop(e)]);\n\t\t\tcase EThrow(e):\n\t\t\t\texpr(\"EThrow\", [loop(e)]);\n\t\t\tcase ECast(e, ct):\n\t\t\t\texpr(\"ECast\", [loop(e), toOpt(toCType, ct, p)]);\n\t\t\tcase EDisplay(e, flag):\n\t\t\t\texpr(\"EDisplay\", [loop(e), toBool(flag, p)]);\n\t\t\tcase EDisplayNew(t):\n\t\t\t\texpr(\"EDisplayNew\", [toTPath(t, p)]);\n\t\t\tcase ETernary(e1, e2, e3):\n\t\t\t\texpr(\"ETernary\", [loop(e1), loop(e2), loop(e3)]);\n\t\t\tcase ECheckType(e1, ct):\n\t\t\t\texpr(\"ECheckType\", [loop(e1), toCType(ct, p)]);\n\t\t\tcase EMeta(md, e1):\n\t\t\t\tswitch(md.name){\n\t\t\t\tcase \"$\" | \"$e\":\n\t\t\t\t\te1;\n\t\t\t\tcase \"$a\":\n\t\t\t\t\tswitch(e1.expr){\n\t\t\t\t\tcase EArrayDecl(el): expr(\"EArrayDecl\", [toExprArray(el, p)]);\n\t\t\t\t\tdefault: expr(\"EArrayDecl\", [e1]);\n\t\t\t\t\t}\n\t\t\t\tcase \"$b\":\n\t\t\t\t\texpr(\"EBlock\", [e1]);\n\t\t\t\tcase \"$v\":\n\t\t\t\t\t{expr:ECall(\n\t\t\t\t\t\t{expr:EField(\n\t\t\t\t\t\t\t{expr:EField(\n\t\t\t\t\t\t\t\t{expr:EField(\n\t\t\t\t\t\t\t\t\t{expr:EConst(CIdent(\"haxe\")),\n\t\t\t\t\t\t\t\t\tpos:p},\n\t\t\t\t\t\t\t\t\t\"macro\"\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tpos:p},\n\t\t\t\t\t\t\t\t\"Context\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tpos:p},\n\t\t\t\t\t\t\t\"makeExpr\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpos:p},\n\t\t\t\t\t\t[e, toPos(e.pos)]\n\t\t\t\t\t),\n\t\t\t\t\tpos:p};\n\t\t\t\tcase \"$i\":\n\t\t\t\t\texpr(\"EConst\", [mkEnum(\"Constant\", \"CIdent\", [e1], e1.pos)]);\n\t\t\t\tcase \"$p\":\n\t\t\t\t\t{expr:ECall(\n\t\t\t\t\t\t{expr:EField(\n\t\t\t\t\t\t\t{expr:EField(\n\t\t\t\t\t\t\t\t{expr:EField(\n\t\t\t\t\t\t\t\t\t{expr:EConst(CIdent(\"haxe\")),\n\t\t\t\t\t\t\t\t\tpos:p},\n\t\t\t\t\t\t\t\t\t\"macro\"\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tpos:p},\n\t\t\t\t\t\t\t\t\"ExprTools\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tpos:p},\n\t\t\t\t\t\t\t\"toFieldExpr\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpos:p},\n\t\t\t\t\t\t[e]\n\t\t\t\t\t),\n\t\t\t\t\tpos:p};\n\t\t\t\tcase \":pos\" if (md.params.length == 1):\n\t\t\t\t\tvar old = curPos;\n\t\t\t\t\tcurPos = md.params[0];\n\t\t\t\t\tvar e = loop(e1);\n\t\t\t\t\tcurPos = old;\n\t\t\t\t\te;\n\t\t\t\tdefault: expr(\"EMeta\", [\n\t\t\t\t\t\ttoObj([\n\t\t\t\t\t\t\t{field:\"name\",expr:toString(md.name, p)},\n\t\t\t\t\t\t\t{field:\"params\",expr:toExprArray(md.params, p)},\n\t\t\t\t\t\t\t{field:\"pos\",expr:toPos(p)}\n\t\t\t\t\t\t], p),\n\t\t\t\t\t\tloop(e1)\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t}\n\t}\n\n\tfunction toTParamDecl(t:TypeParamDecl, p:Position):Expr{\n\t\tvar params = [];\n\t\tfor (tp in t.params){\n\t\t\tparams.push(toTParamDecl(tp,p));\n\t\t}\n\n\t\tvar constraints = [];\n\t\tfor (c in t.constraints){\n\t\t\tconstraints.push(toCType(c,p));\n\t\t}\n\n\t\treturn toObj([\n\t\t\t{field:\"name\", expr:toString(t.name,p)},\n\t\t\t{field:\"params\", expr:{expr:EArrayDecl(params),pos:p}},\n\t\t\t{field:\"constraints\", expr:{expr:EArrayDecl(constraints),pos:p}}\n\t\t],p);\n\t}\n\n\tpublic function toTypeDef(td:TypeDecl):Expr{\n\t\tvar p = td.pos;\n\n\t\tswitch(td.decl){\n\t\tcase EClass(d):\n\t\t\tvar ext = null;\n\t\t\tvar impl = [];\n\t\t\tvar interf = false;\n\n\t\t\tfor (f in d.flags){\n\t\t\t\tswitch(f){\n\t\t\t\t\tcase HExtern | HPrivate:\n\t\t\t\t\tcase HInterface: interf = true;\n\t\t\t\t\tcase HExtends(t): ext = toTPath(t, td.pos);\n\t\t\t\t\tcase HImplements(i): impl.push(toTPath(i, td.pos));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar params = [];\n\t\t\tfor (par in d.params){\n\t\t\t\tparams.push(toTParamDecl(par,p));\n\t\t\t}\n\n\t\t\tvar isExtern = false;\n\t\t\tfor (f in d.flags){\n\t\t\t\tswitch(f){\n\t\t\t\tcase HExtern: isExtern = true; break;\n\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar kindParams = [];\n\n\t\t\tif (ext == null){\n\t\t\t\tkindParams.push({expr:EConst(CIdent(\"null\")),pos:p});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tkindParams.push(ext);\n\t\t\t}\n\n\t\t\tkindParams.push({expr:EArrayDecl(impl),pos:p});\n\t\t\tkindParams.push(toBool(interf, p));\n\n\t\t\tvar fields = [];\n\t\t\tfor (d in d.data){\n\t\t\t\tfields.push(toCField(d,p));\n\t\t\t}\n\n\t\t\treturn toObj([\n\t\t\t\t{field:\"pack\", expr:{expr:EArrayDecl([]),pos:p}},\n\t\t\t\t{field:\"name\", expr:toString(d.name, p)},\n\t\t\t\t{field:\"pos\", expr:(toPos(p))},\n\t\t\t\t{field:\"meta\", expr:toMeta(d.meta, p)},\n\t\t\t\t{field:\"params\", expr:{expr:EArrayDecl(params),pos:p}},\n\t\t\t\t{field:\"isExtern\", expr:toBool(isExtern, p)},\n\t\t\t\t{field:\"kind\", expr:mkEnum(\"TypeDefKind\", \"TDClass\", kindParams, p)},\n\t\t\t\t{field:\"fields\", expr:{expr:EArrayDecl(fields), pos:p}}\n\t\t\t], td.pos);\n\t\tdefault: throw \"Invalid type for reification\";\n\t\t}\n\t}\n}\n","package hxparse;\n\n/**\n\tParser is the base class for all custom parsers.\n\n\tThe intended usage is to extend it and utilize its method as an API where\n\trequired.\n */\n@:generic\nclass Parser<S:TokenSource<Token>, Token> {\n\n\t/**\n\t\tReturns the last matched token.\n\n\t\tThis is a convenience property for accessing `cache[offset - 1]`.\n\t**/\n\tpublic var last(default, null):Token;\n\n\tvar stream:S;\n\tvar token:haxe.ds.GenericStack.GenericCell<Token>;\n\n\t/**\n\t\tCreates a new Parser instance over `TokenSource` `stream`\n\t**/\n\tpublic function new(stream:S) {\n\t\tthis.stream = stream;\n\t}\n\n\t/**\n\t\tReturns the `n`th token without consuming it.\n\t**/\n\t@:dox(show)\n\tfunction peek(n:Int):Token {\n\t\tif (token == null) {\n\t\t\ttoken = new haxe.ds.GenericStack.GenericCell<Token>(stream.token(), null);\n\t\t\tn--;\n\t\t}\n\t\tvar tok = token;\n\t\twhile (n > 0) {\n\t\t\tif (tok.next == null) tok.next = new haxe.ds.GenericStack.GenericCell<Token>(stream.token(), null);\n\t\t\ttok = tok.next;\n\t\t\tn--;\n\t\t}\n\t\treturn tok.elt;\n\t}\n\n\t/**\n\t\tConsumes the current token.\n\n\t\tThis method is automatically called after a successful match.\n\t**/\n\t@:dox(show)\n\tinline function junk() {\n\t\tlast = token.elt;\n\t\ttoken = token.next;\n\t}\n\n\t/**\n\t\tReturns the current lexer position.\n\t**/\n\t@:dox(show)\n\tpublic inline function curPos() {\n\t\treturn stream.curPos();\n\t}\n\n\t/**\n\t\tInvokes `f` and then `separatorFunc` with the current token until the\n\t\tresult of that call is `false`.\n\n\t\tThe result is an Array containing the results of all calls to `f`.\n\n\t\tA typical use case is parsing function arguments which are separated by\n\t\ta comma.\n\t**/\n\t@:dox(show)\n\tfunction parseSeparated<T>(separatorFunc:Token->Bool, f:Void->T):Array<T> {\n\t\tvar acc:Array<T> = [];\n\t\twhile(true) {\n\t\t\tacc.push(f());\n\t\t\tif (separatorFunc(peek(0))) {\n\t\t\t\tjunk();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn acc;\n\t}\n\n\t/**\n\t\tReturns the result of calling `f()` if a match is made, or `null`\n\t\totherwise`.\n\t**/\n\t@:dox(show)\n\tfunction parseOptional<T>(f:Void->T) {\n\t\ttry {\n\t\t\treturn f();\n\t\t} catch(e:hxparse.NoMatch<Dynamic>) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t\tCalls `f` until no match can be made.\n\n\t\tThe result is an Array containing the results of all calls to `f`.\n\t**/\n\t@:dox(show)\n\tfunction parseRepeat<T>(f:Void->T) {\n\t\tvar acc = [];\n\t\twhile(true) {\n\t\t\ttry {\n\t\t\t\tacc.push(f());\n\t\t\t} catch(e:hxparse.NoMatch<Dynamic>) {\n\t\t\t\treturn acc;\n\t\t\t}\n\t\t}\n\t}\n\n\tinline function noMatch() {\n\t\treturn new NoMatch(stream.curPos(), peek(0));\n\t}\n\n\tinline function unexpected():Dynamic {\n\t\treturn throw new Unexpected(peek(0), stream.curPos());\n\t}\n}","package hxparse;\n\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\n\nusing haxe.macro.Tools;\nusing Lambda;\n\nprivate typedef ParserCase = {\n\texpr: Expr,\n\thead: Expr,\n\ttail: Array<Expr>\n}\n\nprivate enum CaseGroup {\n\tSimple(group:Array<ParserCase>);\n\tComplex(c:ParserCase);\n}\n\nclass ParserBuilderImpl {\n\tstatic public function build():Array<haxe.macro.Field> {\n\t\tvar fields = Context.getBuildFields();\n\t\tfor (field in fields) {\n\t\t\tswitch(field.kind) {\n\t\t\t\tcase FFun(fun) if (fun.expr != null):\n\t\t\t\t\tfun.expr = map(true, fun.expr);\n\t\t\t\tcase _:\n\t\t\t}\n\t\t}\n\t\treturn fields;\n\t}\n\n\tstatic function punion(p1:Position, p2:Position) {\n\t\tvar p1 = Context.getPosInfos(p1);\n\t\tvar p2 = Context.getPosInfos(p2);\n\t\treturn Context.makePosition({\n\t\t\tfile: p1.file,\n\t\t\tmin: p1.min < p2.min ? p1.min : p2.min,\n\t\t\tmax: p1.max > p2.max ? p1.max : p2.max\n\t\t});\n\t}\n\n\tstatic function map(needVal:Bool, e:Expr) {\n\t\treturn switch(e.expr) {\n\t\t\tcase ESwitch({expr: EConst(CIdent(\"stream\"))}, cl, edef):\n\t\t\t\tif (edef != null)\n\t\t\t\t\tcl.push({values: [macro _], expr: edef, guard: null});\n\t\t\t\tvar ce = transformCases(needVal, cl);\n\t\t\t\tce;\n\t\t\tcase EBlock([]):\n\t\t\t\te;\n\t\t\tcase EBlock(el):\n\t\t\t\tvar elast = el.pop();\n\t\t\t\tvar el = el.map(map.bind(false));\n\t\t\t\tel.push(map(true, elast));\n\t\t\t\tmacro @:pos(e.pos) $b{el};\n\t\t\tcase _: e.map(map.bind(true));\n\t\t}\n\t}\n\n\tstatic function transformCases(needVal:Bool, cl:Array<Case>) {\n\t\tvar groups = [];\n\t\tvar group = [];\n\t\tvar def = noMatch;\n\t\tfor (c in cl) {\n\t\t\tswitch(c.values) {\n\t\t\t\tcase [{expr:EArrayDecl(el)}]:\n\t\t\t\t\tvar head = el.shift();\n\t\t\t\t\tvar chead = {head:head, tail: el, expr:c.expr == null ? macro null : map(true,c.expr)};\n\t\t\t\t\tswitch(head.expr) {\n\t\t\t\t\t\tcase EBinop(_):\n\t\t\t\t\t\t\tif (group.length > 0) groups.push(Simple(group));\n\t\t\t\t\t\t\tgroups.push(Complex(chead));\n\t\t\t\t\t\t\tgroup = [];\n\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t\tgroup.push(chead);\n\t\t\t\t\t}\n\t\t\t\tcase [{expr:EConst(CIdent(\"_\"))}]:\n\t\t\t\t\tdef = c.expr == null ? macro null : map(true, c.expr);\n\t\t\t\tcase [e]:\n\t\t\t\t\tContext.error(\"Expected [ patterns ]\", e.pos);\n\t\t\t\tcase _:\n\t\t\t\t\tContext.error(\"Comma notation is not allowed while matching streams\", punion(c.values[0].pos, c.values[c.values.length - 1].pos));\n\t\t\t}\n\t\t}\n\t\tif (group.length > 0)\n\t\t\tgroups.push(Simple(group));\n\n\t\tvar last = groups.pop();\n\t\tvar elast = makeCase(last,def);\n\t\twhile (groups.length > 0) {\n\t\t\telast = makeCase(groups.pop(), elast);\n\t\t}\n\t\treturn elast;\n\t}\n\n\tstatic var unexpected = macro unexpected();\n\tstatic var noMatch = macro throw noMatch();\n\n\tstatic function makeCase(g:CaseGroup, def:Expr) {\n\t\treturn switch(g) {\n\t\t\tcase Simple(group):\n\t\t\t\tvar cl = group.map(makeInner);\n\t\t\t\tcl.iter(function(c) {\n\t\t\t\t\tc.expr = macro @:pos(c.expr.pos) { junk(); ${c.expr}; };\n\t\t\t\t});\n\t\t\t\t{\n\t\t\t\t\tpos: def.pos,\n\t\t\t\t\texpr: ESwitch(macro peek(0), cl, def)\n\t\t\t\t}\n\t\t\tcase Complex(c):\n\t\t\t\tvar inner = makeInner(c);\n\t\t\t\tmakePattern(c.head, inner.expr, def);\n\t\t}\n\t}\n\n\tstatic function makeInner(c:ParserCase) {\n\t\tvar last = c.tail.pop();\n\t\tif (last == null) {\n\t\t\treturn {values:[c.head], guard:null, expr: c.expr};\n\t\t}\n\t\tvar elast = makePattern(last, c.expr, unexpected);\n\t\twhile (c.tail.length > 0)\n\t\t\telast = makePattern(c.tail.pop(), elast, unexpected);\n\t\treturn {values: [c.head], guard: null, expr: elast};\n\t}\n\n\tstatic function makePattern(pat:Expr, e:Expr, def:Expr) {\n\t\treturn switch(pat.expr) {\n\t\t\tcase EBinop(OpAssign, {expr: EConst(CIdent(s))}, e2):\n\t\t\t\tif (def == unexpected || def == noMatch) {\n\t\t\t\t\tvar e1 = s == \"_\" ? e2 : macro var $s = $e2;\n\t\t\t\t\tmacro {\n\t\t\t\t\t\t$e1;\n\t\t\t\t\t\t$e;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbuildExtractor(pat, e, e2, s, def);\n\t\t\t\t}\n\t\t\tcase EBinop(OpBoolAnd, e1, e2):\n\t\t\t\tmacro @:pos(pat.pos) {\n\t\t\t\t\tfunction def() return $def;\n\t\t\t\t\tswitch peek(0) {\n\t\t\t\t\t\tcase $e1 if ($e2):\n\t\t\t\t\t\t\tjunk();\n\t\t\t\t\t\t\t$e;\n\t\t\t\t\t\tcase _: def();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase EBinop(OpBoolOr, e1, e2):\n\t\t\t\tmakePattern(e1, e, macro throw stream.curPos() + \": \" +$e2);\n\t\t\tcase _:\n\t\t\t\tmacro @:pos(pat.pos) switch peek(0) {\n\t\t\t\t\tcase $pat:\n\t\t\t\t\t\tjunk();\n\t\t\t\t\t\t$e;\n\t\t\t\t\tcase _: $def;\n\t\t\t\t}\n\t\t}\n\t}\n\n\tstatic function buildExtractor(pat, e, e2, s, def) {\n\t\tvar e1 = s == \"_\" ? e2 : macro var $s = $e2;\n\t\treturn macro @:pos(pat.pos) {\n\t\t\ttry {\n\t\t\t\t$e1;\n\t\t\t\t$e;\n\t\t\t} catch (_:hxparse.NoMatch<Dynamic>) {\n\t\t\t\t$def;\n\t\t\t}\n\t\t}\n\t}\n}","package haxeprinter;\n\nimport haxeparser.Data;\nimport haxe.macro.Expr;\nusing haxe.macro.Tools;\n\nclass Printer\n{\n\tpublic var config:Dynamic;\n\n\tvar buf:StringBuf;\n\tvar line:StringBuf;\n\tvar lineLen:Int;\n\tvar indentLevel:Int;\n\tvar indent:String;\n\tvar col:Int;\n\n\tpublic function new()\n\t{\n\t\tconfig = haxe.Json.parse(haxe.Resource.getString('config'));\n\t}\n\t\n\tfunction setIndent(level:Int)\n\t{\n\t\tindentLevel = level;\n\t\tif (config.indent_with_tabs) indent = StringTools.lpad('', '\\t', indentLevel);\n\t\telse indent = StringTools.lpad('', ' ', Std.int(indentLevel * config.tab_width));\n\t}\n\n\tfunction newline()\n\t{\n\t\tbuf.add(line.toString() + '\\n');\n\t\tline = new StringBuf();\n\t\tcol = 0;\n\t\tlineLen = 0;\n\t}\n\n\tfunction print(s:String, ?style:Style)\n\t{\n\t\tif (style == null) style = SNormal;\n\n\t\tlineLen += s.length;\n\t\t#if (js && !noStyle)\n\t\tvar style = Std.string(style).substr(1).toLowerCase();\n\t\tline.add('<span class=\"$style\">$s</span>');\n\t\t#else\n\t\tline.add(s);\n\t\t#end\n\t}\n\n\tfunction breakPoint(force:Bool=false)\n\t{\n\t\tif (col > 0 && (force || col + lineLen > config.maximum_line_length))\n\t\t{\n\t\t\tbuf.add('\\n');\n\t\t\tsetIndent(indentLevel + 1);\n\t\t\tbuf.add(indent);\n\t\t\tcol = indent.length;\n\t\t\tsetIndent(indentLevel - 1);\n\t\t}\n\t\t\n\t\tcol += lineLen;\n\t\tbuf.add(line.toString());\n\t\tline = new StringBuf();\n\t\tlineLen = 0;\n\t}\n\n\n\tpublic function printAST(ast:{pack:Array<String>, decls:Array<TypeDecl>})\n\t{\n\t\tindentLevel = 0;\n\t\tindent = '';\n\t\tcol = 0;\n\t\tbuf = new StringBuf();\n\t\tline = new StringBuf();\n\t\tlineLen = 0;\n\n\t\tprintPackage(ast.pack);\n\t\tfor (type in ast.decls) printType(type.decl);\n\n\t\treturn buf.toString();\n\t}\n\n\tfunction printPackage(pack:Array<String>)\n\t{\n\t\tif (pack.length == 0 && !config.print_root_package) return;\n\n\t\tprint('package', SDirective);\n\t\tfor (i in 0...pack.length)\n\t\t{\n\t\t\tif (i == 0) print(' ');\n\t\t\tprint(pack[i], SType);\n\t\t\tif (i < pack.length - 1) print('.');\n\t\t}\n\n\t\tprint(';');\n\t\tnewline();\n\t\tif (config.empty_line_after_package) newline();\n\t}\n\n\tfunction printType(type:TypeDef)\n\t{\n\t\tswitch (type)\n\t\t{\n\t\t\tcase EImport(sl, mode): printImport(sl, mode);\n\t\t\tcase EUsing(path): printUsing(path);\n\n\t\t\tcase EAbstract(data): printAbstract(data);\n\t\t\tcase EClass(data): printClass(data);\n\t\t\tcase EEnum(data): printEnum(data);\n\t\t\tcase ETypedef(data): printTypedef(data);\n\t\t}\n\t}\n\n\tfunction printImport(path:Array<{pack:String, pos:Position}>, mode:ImportMode)\n\t{\n\t\tprint('import', SDirective);\n\t\tfor (i in 0...path.length)\n\t\t{\n\t\t\tif (i == 0) print(' ');\n\t\t\tprint(path[i].pack, SType);\n\t\t\tif (i < path.length - 1) print('.');\n\t\t}\n\n\t\tswitch (mode)\n\t\t{\n\t\t\tcase IAll:\n\t\t\t\tprint('.');\n\t\t\t\tprint('*', SOperator);\n\t\t\tcase IAsName(s):\n\t\t\t\tprint(' ');\n\t\t\t\tprint('in', SKeyword);\n\t\t\t\tprint(' ');\n\t\t\t\tprint(s);\n\t\t\tcase o:\n\t\t}\n\n\t\tprint(';');\n\t\tnewline();\n\t\tif (config.empty_line_after_import) newline();\n\t}\n\n\tfunction printUsing(path:TypePath)\n\t{\n\t\tprint('using', SDirective);\n\t\tprint(' ');\n\t\tprintTypePath(path);\n\t\tprint(';');\n\t\tnewline();\n\t\tif (config.empty_line_after_import) newline();\n\t}\n\n\tfunction printAbstract(data:Definition<AbstractFlag, Array<Field>>)\n\t{\n\t\ttrace(data);\n\t}\n\n\tfunction printClass(type:Definition<ClassFlag, Array<Field>>)\n\t{\n\t\tif (buf.length > 0 && config.empty_line_before_type) newline();\n\n\t\tvar isInterface = false;\n\t\tvar modifiers = [];\n\t\tvar ext = null;\n\t\tvar impls = [];\n\n\t\tfor (flag in type.flags) switch flag\n\t\t{\n\t\t\tcase HInterface: isInterface = true;\n\t\t\tcase HExtern: modifiers.push('extern');\n\t\t\tcase HPrivate: modifiers.push('private');\n\t\t\tcase HExtends(t): ext = t;\n\t\t\tcase HImplements(t): impls.push(t);\n\t\t}\n\n\t\tprintModifiers(modifiers);\n\t\tprint(isInterface ? 'interface' : 'class', SDirective);\n\t\tprint(' ');\n\t\tprint(type.name, SType);\n\n\t\t// type params\n\t\tprintTypeParamDecls(type.params);\n\n\t\t// extends\n\t\tif (ext != null)\n\t\t{\n\t\t\tprint(' ');\n\t\t\tbreakPoint();\n\t\t\tprint('extends', SKeyword);\n\t\t\tprint(' ');\n\t\t\tprintTypePath(ext);\n\t\t\tbreakPoint(config.extends_on_newline);\n\t\t}\n\n\t\t// implements\n\t\tif (impls.length > 0)\n\t\t{\n\t\t\tfor (impl in impls)\n\t\t\t{\n\t\t\t\tprint(' ');\n\t\t\t\tbreakPoint();\n\t\t\t\tprint('implements', SKeyword);\n\t\t\t\tprint(' ');\n\t\t\t\tprintTypePath(impl);\n\t\t\t\tbreakPoint(config.implements_on_newline);\n\t\t\t}\n\t\t}\n\n\t\t// if empty type just print {}\n\t\tif (type.data.length == 0 && config.inline_empty_braces)\n\t\t{\n\t\t\tprint(' {}');\n\t\t\tnewline();\n\t\t\treturn;\n\t\t}\n\n\t\tif (config.cuddle_type_braces)\n\t\t{\n\t\t\tprint(' {');\n\t\t\tnewline();\n\t\t\tbreakPoint();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreakPoint();\n\t\t\tnewline();\n\t\t\tprint('{');\n\t\t\tnewline();\n\t\t}\n\n\t\tsetIndent(indentLevel + 1);\n\t\tfor (i in 0...type.data.length)\n\t\t{\n\t\t\tprintClassField(type.data[i]);\n\t\t\tif (i < type.data.length - 1 && config.empty_line_between_fields) newline();\n\t\t}\n\t\tsetIndent(indentLevel - 1);\n\n\t\tprint('}');\n\t\tnewline();\n\t}\n\n\tfunction printClassField(field:Field)\n\t{\n\t\tprint(indent);\n\n\t\tvar modifiers = field.access.map(function(a) return Std.string(a).substr(1).toLowerCase());\n\t\tif (config.remove_private_field_modifier) modifiers.remove('private');\n\t\tprintModifiers(modifiers);\n\n\t\tswitch (field.kind)\n\t\t{\n\t\t\tcase FFun(f): printFunction(field, f);\n\t\t\tcase FVar(t, e): printProp(field, null, null, t, e);\n\t\t\tcase FProp(get, set, t, e): printProp(field, get, set, t, e);\n\t\t}\n\t}\n\n\tfunction printEnum(type:Definition<EnumFlag, Array<EnumConstructor>>)\n\t{\n\t\tif (config.empty_line_before_type) newline();\n\n\t\t// modifiers\n\t\tvar modifiers = type.flags.map(function(flag) return Std.string(flag).substr(1).toLowerCase());\n\t\tprintModifiers(modifiers);\n\n\t\t// declaration\n\t\tprint('enum', SDirective);\n\t\tprint(' ');\n\t\tprint(type.name, SType);\n\n\t\t// type params\n\t\tprintTypeParamDecls(type.params);\n\n\t\t// if empty type just print {}\n\t\tif (type.data.length == 0 && config.inline_empty_braces)\n\t\t{\n\t\t\tprint(' {}');\n\t\t\tnewline();\n\t\t\treturn;\n\t\t}\n\n\t\tif (config.cuddle_type_braces)\n\t\t{\n\t\t\tprint(' {');\n\t\t\tnewline();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnewline();\n\t\t\tprint('{');\n\t\t\tnewline();\n\t\t}\n\n\t\tsetIndent(indentLevel + 1);\n\t\tfor (i in 0...type.data.length)\n\t\t{\n\t\t\tprintEnumConstructor(type.data[i]);\n\t\t\tif (i < type.data.length - 1 && config.empty_line_between_enum_constructors) \n\t\t\t\tnewline();\n\t\t}\n\t\tsetIndent(indentLevel - 1);\n\n\t\tprint('}');\n\t\tnewline();\n\t}\n\n\tfunction printEnumConstructor(ctor:EnumConstructor)\n\t{\n\t\tprint(indent);\n\t\tprint(ctor.name, SType);\n\t\tprintTypeParamDecls(ctor.params);\n\t\tprintEnumConstructorArgs(ctor.args);\n\t\tprint(';');\n\t\tnewline();\n\t}\n\n\tfunction printEnumConstructorArgs(args:Array<{name:String, opt:Bool, type:ComplexType}>)\n\t{\n\t\tif (args.length == 0) return;\n\t\tprint('(');\n\t\tfor (i in 0...args.length)\n\t\t{\n\t\t\tvar arg = args[i];\n\n\t\t\tif (arg.opt) print('?');\n\t\t\tprint(arg.name, SIdent);\n\t\t\tprint(':');\n\t\t\tprintComplexType(arg.type);\n\t\t\t\n\t\t\tif (i < args.length - 1)\n\t\t\t{\n\t\t\t\tif (config.space_between_enum_constructor_args) print(', ');\n\t\t\t\telse print(',');\n\t\t\t}\n\t\t}\n\t\tprint(')');\n\t}\n\n\tfunction printTypedef(type:Definition<EnumFlag, ComplexType>)\n\t{\n\t\tif (config.empty_line_before_type) newline();\n\n\t\t// modifiers\n\t\tvar modifiers = type.flags.map(function(flag) return Std.string(flag).substr(1).toLowerCase());\n\t\tprintModifiers(modifiers);\n\n\t\t// declaration\n\t\tprint('typedef', SDirective);\n\t\tprint(' ');\n\t\tprint(type.name, SType);\n\t\tprintTypeParamDecls(type.params);\n\t\tprint(' = ');\n\n\t\tswitch (type.data)\n\t\t{\n\t\t\tcase TAnonymous(fields): printAnonFields(fields);\n\t\t\tcase TPath(path): printTypePath(path);\n\t\t\tcase _: throw 'todo: ' + type.data;\n\t\t}\n\n\t\tnewline();\n\t}\n\n\tfunction printAnonFields(fields:Array<Dynamic>)\n\t{\n\t\t// if empty type just print {}\n\t\tif (fields.length == 0 && config.inline_empty_braces)\n\t\t{\n\t\t\tprint(' {}');\n\t\t\treturn;\n\t\t}\n\n\t\tif (config.cuddle_type_braces)\n\t\t{\n\t\t\tprint(' {');\n\t\t\tnewline();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnewline();\n\t\t\tprint('{');\n\t\t\tnewline();\n\t\t}\n\n\t\tsetIndent(indentLevel + 1);\n\t\tfor (i in 0...fields.length)\n\t\t{\n\t\t\tvar field = fields[i];\n\t\t\t\n\t\t\tprint(indent);\n\t\t\tprint(field.name, SIdent);\n\t\t\tprint(':');\n\n\t\t\tswitch (field.kind)\n\t\t\t{\n\t\t\t\tcase FVar(t, _): printComplexType(t);\n\t\t\t\tcase _: throw 'todo: ' + field.kind;\n\t\t\t}\n\n\t\t\tif (i < fields.length - 1)\n\t\t\t{\n\t\t\t\tprint(',');\n\t\t\t\tif (config.empty_line_between_typedef_fields) newline();\n\t\t\t}\n\t\t\tnewline();\n\t\t}\n\t\tsetIndent(indentLevel - 1);\n\n\t\tprint('}');\n\t}\n\n\tfunction printFunction(field:Field, f:Function)\n\t{\n\t\tprint('function', SKeyword);\n\t\tprint(' ');\n\t\tprint(field.name, SIdent);\n\t\tprintTypeParamDecls(f.params);\n\t\tprintFunctionArgs(f.args);\n\n\t\tif (f.ret != null)\n\t\t{\n\t\t\tprint(':');\n\t\t\tprintComplexType(f.ret);\n\t\t}\n\n\t\tif (config.cuddle_method_braces)\n\t\t{\n\t\t\tprint(' ');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnewline();\n\t\t\tprint(indent);\n\t\t}\n\t\t\n\t\tprintExpr(f.expr);\n\t\tnewline();\n\t}\n\n\tfunction printProp(field:Field, get:Null<String>, set:Null<String>, type:Null<ComplexType>, expr:Null<Expr>)\n\t{\n\t\tprint('var', SKeyword);\n\t\tprint(' ');\n\t\tprint(field.name, SIdent);\n\t\t\n\t\tif (get != null && set != null)\n\t\t{\n\t\t\tprint('(');\n\t\t\tprint(get, SModifier);\n\t\t\t\n\t\t\tif (config.space_betwen_property_get_set) print(', ');\n\t\t\telse print(',');\n\n\t\t\tprint(set, SModifier);\n\t\t\tprint(')');\n\t\t}\n\n\t\tif (type != null)\n\t\t{\n\t\t\tprint(':');\n\t\t\tprintComplexType(type);\n\t\t}\n\n\t\tif (expr != null)\n\t\t{\n\t\t\tif (config.space_around_property_assign) print(' = ');\n\t\t\telse print('=');\n\t\t\tprintExpr(expr);\n\t\t}\n\n\t\tprint(';');\n\t\tnewline();\n\t}\n\n\tfunction printExpr(expr:Expr)\n\t{\n\t\tprint(expr.toString().split('\\n').join('\\n'+indent));\n\t}\n\n\tfunction printFunctionArgs(args:Array<FunctionArg>)\n\t{\n\t\tprint('(');\n\t\tbreakPoint(config.function_arg_on_newline);\n\n\t\tfor (i in 0...args.length)\n\t\t{\n\t\t\tbreakPoint(config.function_arg_on_newline);\n\n\t\t\tvar arg = args[i];\n\t\t\tif (arg.opt) print('?');\n\t\t\tprint(arg.name, SIdent);\n\t\t\t\n\t\t\tif (arg.type != null)\n\t\t\t{\n\t\t\t\tprint(':');\n\t\t\t\tprintComplexType(arg.type);\n\t\t\t}\n\n\t\t\tif (arg.value != null)\n\t\t\t{\n\t\t\t\tif (config.space_around_function_arg_assign) print(' = ');\n\t\t\t\telse print('=');\n\t\t\t\tprintExpr(arg.value);\n\t\t\t}\n\n\t\t\tif (i < args.length - 1)\n\t\t\t{\n\t\t\t\tprint(',');\n\t\t\t\tif (config.space_between_function_args) print(' ');\n\t\t\t\tbreakPoint();\n\t\t\t}\n\t\t}\n\t\tprint(')');\n\t\tbreakPoint();\n\t}\n\n\tfunction printModifiers(modifiers:Array<String>)\n\t{\n\t\tif (modifiers.length == 0) return;\n\t\tvar order:Array<String> = config.modifier_order;\n\t\tmodifiers.sort(function(a,b) return order.indexOf(a) - order.indexOf(b));\n\t\t\n\t\tfor (modifier in modifiers)\n\t\t{\n\t\t\tprint(modifier, SModifier);\n\t\t\tprint(' ');\n\t\t}\n\t}\n\n\tfunction printTypePath(path:TypePath)\n\t{\n\t\tvar pack = path.pack.concat([path.name]);\n\t\tfor (i in 0...pack.length)\n\t\t{\n\t\t\tprint(pack[i], SType);\n\t\t\tif (i < pack.length - 1) print('.');\n\t\t}\n\n\t\tvar params = path.params;\n\t\tif (params.length == 0) return;\n\t\t\n\t\tprint('<');\n\t\tfor (i in 0...params.length)\n\t\t{\n\t\t\tprintTypeParam(params[i]);\n\t\t\tif (i < params.length - 1)\n\t\t\t{\n\t\t\t\tif (config.space_between_type_params) print(', ');\n\t\t\t\telse print(',');\n\t\t\t}\n\t\t}\n\t\tprint('>');\n\t}\n\n\tfunction printTypeParamDecls(params:Array<TypeParamDecl>)\n\t{\n\t\tif (params.length == 0) return;\n\n\t\tprint('<');\n\t\tfor (i in 0...params.length)\n\t\t{\n\t\t\tprintTypeParamDecl(params[i]);\n\t\t\tif (i < params.length - 1)\n\t\t\t{\n\t\t\t\tif (config.space_between_type_params) print(', ');\n\t\t\t\telse print(',');\n\t\t\t}\n\t\t}\n\t\tprint('>');\n\t}\n\n\tfunction printTypeParamDecl(param:TypeParamDecl)\n\t{\n\t\tprint(param.name, SType);\n\t\t\n\t\tvar constraints = param.constraints;\n\t\tif (constraints.length == 0) return;\n\n\t\tprint(':');\n\t\tif (constraints.length > 1) print('(');\n\t\tfor (i in 0...constraints.length)\n\t\t{\n\t\t\tprintComplexType(constraints[i]);\n\t\t\tif (i < constraints.length - 1)\n\t\t\t{\n\t\t\t\tif (config.space_between_type_param_constraints) print(', ');\n\t\t\t\telse print(',');\n\t\t\t}\n\t\t}\n\t\tif (constraints.length > 1) print(')');\n\t}\n\n\tfunction printTypeParam(param:TypeParam)\n\t{\n\t\tswitch (param)\n\t\t{\n\t\t\tcase TPType(type): printComplexType(type);\n\t\t\tcase _: throw 'todo: $param';\n\t\t}\n\t}\n\n\tfunction printComplexType(type:ComplexType)\n\t{\n\t\tswitch (type)\n\t\t{\n\t\t\tcase TPath(path): printTypePath(path);\n\t\t\tcase TAnonymous(fields): printAnonType(fields);\n\t\t\tcase _: throw 'todo: $type';\n\t\t}\n\t}\n\n\tfunction printAnonType(fields:Array<Field>)\n\t{\n\t\tprint('{');\n\t\tfor (i in 0...fields.length)\n\t\t{\n\t\t\tvar field = fields[i];\n\t\t\tprint(field.name, SIdent);\n\t\t\tprint(':');\n\n\t\t\tswitch (field.kind)\n\t\t\t{\n\t\t\t\tcase FVar(t, _): printComplexType(t);\n\t\t\t\tcase _: throw 'todo: ' + field.kind;\n\t\t\t}\n\n\t\t\tif (i < fields.length - 1)\n\t\t\t{\n\t\t\t\tif (config.space_between_anon_type_fields) print(', ');\n\t\t\t\telse print(',');\n\t\t\t}\n\t\t}\n\t\tprint('}');\n\t}\n}\n\nenum Style\n{\n\tSNormal;\n\tSDirective;\n\tSOperator;\n\tSKeyword;\n\tSIdent;\n\tSString;\n\tSNumber;\n\tSType;\n\tSModifier;\n}\n","package haxeproject;\nimport js.npm.Mkdirp;\nimport js.node.Fs.FsReadFileOpt;\nimport js.node.Fs;\nimport js.node.Path;\nimport haxe.Template;\nimport newprojectdialog.NewProjectDialog.ProjectData;\nimport core.Utils;\nimport core.Splitter;\nimport filetree.FileTree;\nimport js.Browser;\nimport js.html.TextAreaElement;\nimport js.Node;\nimport newprojectdialog.NewProjectDialog;\nimport openproject.OpenProject;\nimport projectaccess.Project;\nimport projectaccess.ProjectAccess;\nimport projectaccess.ProjectOptions;\nimport tabmanager.TabManager;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass HaxeProject\n{\n\tvar code:String;\n\tvar indexPageCode:String;\n\t\n\tstatic var instance:HaxeProject;\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new HaxeProject();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\t//If this plugin is selected as active in HIDE, then HIDE will call this function once on load\t\n\tpublic function new():Void\n\t{\n\t\t\tNewProjectDialog.getCategory(\"Haxe\", 1).addItem(\"Flash Project\", createFlashProject);\t\t\t\n\t\t\tNewProjectDialog.getCategory(\"Haxe\").addItem(\"JavaScript Project\", createJavaScriptProject);\n\t\t\tNewProjectDialog.getCategory(\"Haxe\").addItem(\"Neko Project\", createNekoProject);\n\t\t\tNewProjectDialog.getCategory(\"Haxe\").addItem(\"PHP Project\", createPhpProject);\n\t\t\tNewProjectDialog.getCategory(\"Haxe\").addItem(\"C++ Project\", createCppProject);\n\t\t\tNewProjectDialog.getCategory(\"Haxe\").addItem(\"Java Project\", createJavaProject);\n\t\t\tNewProjectDialog.getCategory(\"Haxe\").addItem(\"C# Project\", createCSharpProject);\n\t\t\tNewProjectDialog.getCategory(\"Haxe\").addItem(\"Python Project\", createPythonProject);\n\t\t\t\n\t\t\tvar options:FsReadFileOpt = { };\n\t\t\toptions.encoding = \"utf8\";\n\t\t\t\n\t\t\tvar path:String = Path.join(\"core\", \"templates\", \"Main.tpl\");\n\t\t\t\n\t\t\tFs.readFile(path, options, function (error, data:String):Void\n\t\t\t{\n\t\t\t\tif (error == null) \n\t\t\t\t{\n\t\t\t\t\tcode = data;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttrace(error);\n\t\t\t\t\tAlertify.error(\"Can't load template \" + path);\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\tpath = Path.join(\"core\", \"templates\", \"index.tpl\");\n\t\t\t\n\t\t\tFs.readFile(path, options, function (error, data:String):Void\n\t\t\t{\n\t\t\t\tif (error == null) \n\t\t\t\t{\n\t\t\t\t\tindexPageCode = data;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\ttrace(error);\n\t\t\t\t\tAlertify.error(\"Can't load template \" + path);\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t}\n\t\n\tfunction createPythonProject(data:Dynamic):Void  \n\t{\n\t\tcreateHaxeProject(data, Project.PYTHON);\n\t}\n\t\n\tfunction createCSharpProject(data:Dynamic):Void \n\t{\n\t\tcreateHaxeProject(data, Project.CSHARP);\n\t}\n\t\n\tfunction createJavaProject(data:Dynamic):Void\n\t{\n\t\tcreateHaxeProject(data, Project.JAVA);\n\t}\n\t\n\tfunction createCppProject(data:Dynamic):Void\n\t{\n\t\tcreateHaxeProject(data, Project.CPP);\n\t}\n\t\n\tfunction createPhpProject(data:Dynamic):Void\n\t{\n\t\tcreateHaxeProject(data, Project.PHP);\n\t}\n\t\n\tfunction createNekoProject(data:Dynamic):Void\n\t{\n\t\tcreateHaxeProject(data, Project.NEKO);\n\t}\n\t\n\tfunction createFlashProject(data:Dynamic):Void\n\t{\n\t\tcreateHaxeProject(data, Project.FLASH);\n\t}\n\t\n\tfunction createJavaScriptProject(data:Dynamic):Void\n\t{\n\t\tcreateHaxeProject(data, Project.JAVASCRIPT);\n\t}\n\t\n\tfunction createHaxeProject(data:ProjectData, target:Int):Void\n\t{\n\t\tvar pathToSrc:String = Path.join(data.projectLocation, data.projectName, \"src\");\n\t\t\n\t\tMkdirp.mkdirp(pathToSrc, function (err:Dynamic, made:String):Void\n\t\t{\n\t\t\tvar pathToProject:String  = data.projectLocation;\n\t\t\t\n\t\t\tif (data.createDirectory)\n\t\t\t{\n\t\t\t\tpathToProject = Path.join(pathToProject, data.projectName);\n\t\t\t}\n\t\t\t\n\t\t\tvar project:Project = new Project();\n\t\t\tproject.name = data.projectName;\n\t\t\tproject.projectPackage = data.projectPackage;\n\t\t\tproject.company = data.projectCompany;\n\t\t\tproject.license = data.projectLicense;\n\t\t\tproject.url = data.projectURL;\n\t\t\tproject.type = Project.HAXE;\n\t\t\tproject.target = target;\n\t\t\tProjectAccess.path = pathToProject;\n\t\t\tProjectAccess.currentProject = project;\n\t\t\t\t\n\t\t\tvar pathToSrc = Path.join(pathToProject, \"src\");\n\t\t\t\n\t\t\tvar fullPackagePath = \"\";\n\t\t\t\n\t\t\tif (data.projectPackage != \"\")\n\t\t\t{\n\t\t\t\tfullPackagePath = StringTools.replace(data.projectPackage, \".\", Path.sep);\n\t\t\t\tMkdirp.mkdirpSync(Path.join(pathToSrc, fullPackagePath));\n\t\t\t}\n\t\t\t\n\t\t\tvar pathToMain:String;\n\t\t\t\n\t\t\tpathToMain = Path.join(pathToSrc, fullPackagePath, \"Main.hx\");\n\t\t\t\n\t\t\tvar tabManagerInstance = TabManager.get();\n\t\t\t\n\t\t\tvar fileTemplate:FileTemplate = {};\n\t\t\t\n\t\t\tfileTemplate = tabManagerInstance.generateTemplate(fileTemplate, data.projectPackage);\n\t\t\t\n\t\t\tvar templateCode = new Template(code).execute(fileTemplate);\n\t\t\t\n\t\t\tFs.writeFile(pathToMain, templateCode, function (error)\n\t\t\t{\n\t\t\t\tif (error != null)\n\t\t\t\t{\n\t\t\t\t\tAlertify.error(\"Write file error\" + error);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tFs.exists(pathToMain, function (exists:Bool):Void\n\t\t\t\t{\n\t\t\t\t\tif (exists)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tabManagerInstance = TabManager.get();\n\t\t\t\t\t\ttabManagerInstance.openFileInNewTab(pathToMain);\n\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\ttrace(pathToMain + \" file was not generated\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\tvar filenames = [\"flash\", \"javascript\", \"neko\", \"php\", \"cpp\", \"java\", \"csharp\", \"python\"];\n\t\t\t\n\t\t\tvar pathToProjectTemplates = Path.join(\"core\", \"templates\", \"project\");\n\t\t\t\n\t\t\tfor (i in 0...filenames.length) \n\t\t\t{\n\t\t\t\tvar targetData:TargetData = { };\n\t\t\t\ttargetData.pathToHxml = filenames[i] + \".hxml\";\n\t\t\t\t\n// \t\t\t\tvar options:NodeFsFileOptions = { };\n// \t\t\t\toptions.encoding = \"utf8\";\n\t\t\t\t\n\t\t\t\tvar templateCode:String = Fs.readFileSync(Path.join(pathToProjectTemplates, filenames[i] + \".tpl\"), \"utf8\");\n\t\t\t\t\n\t\t\t\tvar pathToFile:String;\n\t\t\t\t\n\t\t\t\tswitch (i)\n\t\t\t\t{\n\t\t\t\t\tcase Project.FLASH:\n\t\t\t\t\t\tpathToFile = \"bin/\" + project.name + \".swf\";\n\t\t\t\t\t\ttargetData.runActionType = Project.FILE;\n\t\t\t\t\t\ttargetData.runActionText = pathToFile;\n\t\t\t\t\tcase Project.JAVASCRIPT:\n\t\t\t\t\t\tpathToFile = \"bin/\" +  project.name + \".js\";\n\t\t\t\t\t\t\n\t\t\t\t\t\ttargetData.runActionType = Project.FILE;\n\t\t\t\t\t\ttargetData.runActionText = Path.join(\"bin\", \"index.html\");\n\t\t\t\t\tcase Project.NEKO:\n\t\t\t\t\t\tpathToFile  = \"bin/\" + project.name + \".n\";\n\t\t\t\t\t\t\n\t\t\t\t\t\ttargetData.runActionType = Project.COMMAND;\n\t\t\t\t\t\ttargetData.runActionText = \"neko \" + pathToFile;\n\t\t\t\t\tcase Project.PHP:\n\t\t\t\t\t\tpathToFile = \"bin/\" + project.name + \".php\";\n\t\t\t\t\tcase Project.CPP:\n\t\t\t\t\t\tpathToFile = \"bin\";\n\t\t\t\t\t\t\n\t\t\t\t\t\ttargetData.runActionType = Project.COMMAND;\n\t\t\t\t\t\ttargetData.runActionText = \"bin/\" + \"Main\" + \"-debug\";\n                        \n                        if (Utils.os == Utils.WINDOWS)\n                        {\n                            targetData.runActionText += \".exe\";\n                        }\n\t\t\t\t\tcase Project.JAVA:\n\t\t\t\t\t\tpathToFile = \"bin/\" + project.name + \".jar\";\n\t\t\t\t\tcase Project.CSHARP:\n\t\t\t\t\t\tpathToFile = \"bin/\" + project.name + \".exe\";\n\t\t\t\t\tcase Project.PYTHON:\n\t\t\t\t\t\tpathToFile = \"bin/\" + project.name + \".py\";\n\t\t\t\t\t\t\n\t\t\t\t\t\ttargetData.runActionType = Project.COMMAND;\n\t\t\t\t\t\ttargetData.runActionText = \"python \" + pathToFile;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow \"Path to file is null\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar templateCode = new Template(templateCode).execute({ file: pathToFile, pack: data.projectPackage });\n\t\t\t\t\n// \t\t\t\tCpp.generateHxml(pathToFile);\n\t\t\t\t// templateCode = Mustache.render(templateCode, { file: pathToFile } );\n\t\t\t\tFs.writeFileSync(Path.join(pathToProject, targetData.pathToHxml), templateCode, \"utf8\");\n\t\t\t\t\n\t\t\t\tproject.targetData.push(targetData);\n\t\t\t}\n\t\t\t\n\t\t\tFs.mkdir(Path.join(pathToProject, \"bin\"), null, function (error):Void \n\t\t\t{\n\t\t\t\tif (error == null) \n\t\t\t\t{\n\t\t\t\t\t//JavaScript template from \"templates/index.html\"\n\t\t\t\t\tvar updatedPageCode:String = new Template(indexPageCode).execute({ title: project.name, script: project.name + \".js\" });\n// \t\t\t\t\tvar updatedPageCode:String = Mustache.render(indexPageCode, { title: project.name, script: project.name + \".js\" } );\n\t\t\t\t\tvar pathToWebPage:String = Path.join(pathToProject, \"bin\", \"index.html\");\n\t\t\t\t\t\n\t\t\t\t\tFs.writeFile(pathToWebPage, updatedPageCode, \"utf8\", function (error):Void\n\t\t\t\t\t{\n\t\t\t\t\t\tif (error != null) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttrace(error);\n\t\t\t\t\t\t\tAlertify.error(\"Generate web page error: \" + error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tAlertify.error(\"Folder creation error: \" + error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tvar path:String = Path.join(pathToProject, \"project.hide\");\n\t\t\tProjectAccess.save(OpenProject.openProject.bind(path));\n\t\t}\n\t\t);\n\t}\n\t\n}","package hxparse;\n\nclass LexerTokenSource<Token> {\n\tvar lexer:Lexer;\n\tpublic var ruleset:Ruleset<Token>;\n\n\tpublic function new(lexer, ruleset){\n\t\tthis.lexer = lexer;\n\t\tthis.ruleset = ruleset;\n\t}\n\n\tpublic function token():Token{\n\t\treturn lexer.token(ruleset);\n\t}\n\n\tpublic function curPos():Position{\n\t\treturn lexer.curPos();\n\t}\n}","package hxparse;\n\n/**\n\tA NoMatch exception is thrown if an outer token matching fails.\n\n\tMatching can continue because no tokens have been consumed.\n**/\nclass NoMatch<T> {\n\n\t/**\n\t\tThe position where no matching could be made.\n\t**/\n\tpublic var pos(default, null):Position;\n\n\t/**\n\t\tThe token which was encountered and could not be matched.\n\t**/\n\tpublic var token(default, null):T;\n\n\t/**\n\t\tCreates a new NoMatch exception.\n\t**/\n\tpublic function new(pos:hxparse.Position, token:T) {\n\t\tthis.pos = pos;\n\t\tthis.token = token;\n\t}\n\n\tpublic function toString() {\n\t\treturn '$pos: No match: $token';\n\t}\n}","package hxparse;\n\n/**\n\tRepresents a state in the state machine generated by the `LexEngine`.\n**/\nclass State {\n\t/**\n\t\tThe transition vector, where the index corresponds to a char code.\n\t**/\n\tpublic var trans:haxe.ds.Vector<State>;\n\n\t/**\n\t\tThe ids of the final states.\n\t**/\n\tpublic var final:Int;\n\n\t/**\n\t\tCreates a new State.\n\t**/\n\tpublic function new() {\n\t\tfinal = -1;\n\t\ttrans = new haxe.ds.Vector(256);\n\t}\n}","package hxparse;\n\n/**\n\tUnexpected is thrown by `Parser.serror`, which is invoked when an inner\n\ttoken matching fails.\n\n\tUnlike `NoMatch`, this exception denotes that the stream is in an\n\tirrecoverable state because tokens have been consumed.\n**/\nclass Unexpected<Token> {\n\n\t/**\n\t\tThe token which was found.\n\t**/\n\tpublic var token:Token;\n\n\t/**\n\t\tThe position in the input where `this` exception occured.\n\t**/\n\tpublic var pos:Position;\n\n\t/**\n\t\tCreates a new instance of Unexpected.\n\t**/\n\tpublic function new(token:Token, pos) {\n\t\tthis.token = token;\n\t\tthis.pos = pos;\n\t}\n\n\t/**\n\t\tReturns a readable representation of `this` exception.\n\t**/\n\tpublic function toString() {\n\t\treturn 'Unexpected $token at $pos';\n\t}\n}","package hxparse;\n\n/**\n\tUnexpectedChar is thrown by `Lexer.token` if it encounters a character for\n\twhich no state transition is defined.\n**/\nclass UnexpectedChar {\n\n\t/**\n\t\tThe character which caused `this` exception.\n\t**/\n\tpublic var char:String;\n\n\t/**\n\t\tThe position in the input where `this` exception occured.\n\t**/\n\tpublic var pos:Position;\n\n\t/**\n\t\tCreates a new instance of UnexpectedChar.\n\t**/\n\tpublic function new(char, pos) {\n\t\tthis.char = char;\n\t\tthis.pos = pos;\n\t}\n\n\t/**\n\t\tReturns a readable representation of `this` exception.\n\t**/\n\tpublic function toString() {\n\t\treturn '$pos: Unexpected $char';\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\tpublic static var window(get, never):js.html.DOMWindow;\n\tinline static function get_window() return untyped __js__(\"window\");\n\n\tpublic static var document(get, never):js.html.Document;\n\tinline static function get_document() return untyped __js__(\"window.document\");\n\n\tpublic static var location(get, never):js.html.Location;\n\tinline static function get_location() return untyped __js__(\"window.location\");\n\n\tpublic static var navigator(get, never):js.html.Navigator;\n\tinline static function get_navigator() return untyped __js__(\"window.navigator\");\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\tpublic static function get_supported() return untyped __js__(\"typeof window != \\\"undefined\\\"\");\n\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest() : XMLHttpRequest\n\t{\n\t\tif( untyped __js__(\"typeof XMLHttpRequest\") != \"undefined\" ) {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif( untyped __js__(\"typeof ActiveXObject\") != \"undefined\" ) {\n\t\t\treturn untyped __new__(\"ActiveXObject\",\"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nclass Lib {\n\n\tpublic static var arguments (get,null) : Array<Dynamic>;\n\tpublic static var self (get,null) : Dynamic;\n\n\t/**\n\t\tInserts a 'debugger' statement that will make a breakpoint if a debugger is available.\n\t**/\n\tpublic static inline function debug() {\n\t\tuntyped __js__(\"debugger\");\n\t}\n\n\tpublic static inline function eval( code : String ) : Dynamic {\n\t\treturn untyped __js__(\"eval\")(code);\n\t}\n\n\tstatic inline function get_arguments(){\n\t\treturn untyped __js__(\"arguments\");\n\t}\n\n\tstatic inline function get_self(){\n\t\treturn untyped __js__(\"this\");\n\t}\n\n}","package kha;\nimport newprojectdialog.NewProjectDialog;\n\n/**\n* @author \n */\nclass KhaProject\n{\n\tstatic var instance:KhaProject = null;\n\t\n\tpublic function new()\n\t{\n\t\t\t\n\t}\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new KhaProject();\n\t\t}\n\t\t\n\t\treturn instance;\n\t}\n\t\n    public function load()\n    {\n//         NewProjectDialog.getCategory(\"Kha\", 3).addItem(\"Empty project\", null, false, false);\n    }\n    \n    function cloneKhaEmptyProject(data:ProjectData)\n    {\n\t\t\n    }\n\n\n}","package menu;\nimport jQuery.JQuery;\nimport haxe.ds.StringMap.StringMap;\nimport js.Browser;\nimport js.html.AnchorElement;\nimport js.html.DivElement;\nimport js.html.UListElement;\nimport js.html.Element;\nimport watchers.LocaleWatcher;\n\n/**\n * ...\n * @author AS3Boyan\n */\n\n//@:expose makes this class available in global scope\n//@:keepSub prevents -dce full from deleting unused functions, so they still can be used in other plugins\n//more info about meta tags can be obtained at Haxe website: \n//http://haxe.org/manual/tips_and_tricks\nclass BootstrapMenu\n{\n\tstatic var menus:StringMap<Menu> = new StringMap();\n\tstatic var menuArray:Array<Menu> = new Array();\n\t\t\n\tpublic static function createMenuBar():Void\n\t{\n\t\t//We use overflow: hidden; to hide window scrollbars\n\t\tBrowser.document.body.style.overflow = \"hidden\";\n\t\t\t\n\t\tvar navbar:DivElement = Browser.document.createDivElement();\n\t\tnavbar.className = \"navbar navbar-default navbar-inverse navbar-fixed-top\";\n\t\t\n\t\tvar navbarHeader:DivElement = Browser.document.createDivElement();\n\t\tnavbarHeader.className = \"navbar-header\";\n\t\tnavbar.appendChild(navbarHeader);\n\t\t\n\t\tvar a:AnchorElement = Browser.document.createAnchorElement();\n\t\ta.className = \"navbar-brand\";\n\t\ta.href = \"#\";\n\t\ta.innerText = LocaleWatcher.getStringSync(\"HIDE\");\n\t\ta.setAttribute(\"localeString\", \"HIDE\");\n\t\t\n\t\tnavbarHeader.appendChild(a);\n\t\t\t\n\t\tvar div:DivElement = Browser.document.createDivElement();\n\t\tdiv.className = \"navbar-collapse collapse\";\n\t\t\n\t\tvar ul:UListElement = Browser.document.createUListElement();\n\t\tul.id = \"position-navbar\";\n\t\tul.className = \"nav navbar-nav\";\n\t\t\t\n\t\tdiv.appendChild(ul);\n\t\t\t\t\n\t\tnavbar.appendChild(div);\n\t\t\n\t\tBrowser.document.body.appendChild(navbar);\n\t}\n\t\n\tpublic static function getMenu(name:String, ?position:Int):Menu\n\t{\n\t\tvar menu:Menu;\n\n\t\tif (!menus.exists(name))\n\t\t{\n\t\t\tmenu = new Menu(name);\n\n\t\t\tmenu.setPosition(position);\n\n\t\t\taddMenuToDocument(menu);\n\n\t\t\tmenus.set(name, menu);\n\t\t\t\n\t\t\tnew JQuery(Browser.window.document).on(\"mouseenter\", \"#position-navbar .dropdown\", function (e)\n\t\t\t\t\t\t\t\t\t\t\t\t   {\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var self = untyped __js__(\"this\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t\t\t\t\t\t    var open = new JQuery(self).siblings(\".open\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (open.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\topen.removeClass(\"open\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew JQuery(self).addClass(\"open\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t\t\t\t\t  );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmenu = menus.get(name);\n\n\t\t\tif (position != null && menu.position != position)\t\n\t\t\t{\n\t\t\t\tmenu.removeFromDocument();\n\t\t\t\tmenus.remove(name);\n\n\t\t\t\tmenu.setPosition(position);\n\n\t\t\t\taddMenuToDocument(menu);\n\n\t\t\t\tmenus.set(name, menu);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn menu;\n\t}\n\n\tpublic static function addMenuToDocument(menu:Menu):Void\n\t{\n\t\tvar div:Element = cast(Browser.document.getElementById(\"position-navbar\"), Element);\n\n\t\tif (menu.position != null && menuArray.length > 0 && div.childNodes.length > 0)\n\t\t{\n\t\t\tvar currentMenu:Menu;\n\n\t\t\tvar added:Bool = false;\n\n\t\t\tfor (i in 0...menuArray.length)\n\t\t\t{\n\t\t\t\tcurrentMenu = menuArray[i];\n\n\t\t\t\tif (currentMenu != menu && currentMenu.position == null || menu.position < currentMenu.position)\n\t\t\t\t{\n\t\t\t\t\tdiv.insertBefore(menu.getElement(), currentMenu.getElement());\n\t\t\t\t\tmenuArray.insert(i, menu);\n\t\t\t\t\tadded = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added)\n\t\t\t{\n\t\t\t\tmenu.addToDocument();\n\t\t\t\tmenuArray.push(menu);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmenu.addToDocument();\n\t\t\tmenuArray.push(menu);\n\t\t}\n\t}\n}","package menu;\nimport core.Hotkeys;\nimport haxe.ds.StringMap.StringMap;\nimport js.Browser;\nimport js.html.AnchorElement;\nimport js.html.DivElement;\nimport js.html.Element;\nimport js.html.LIElement;\nimport js.html.LinkElement;\nimport js.html.MouseEvent;\nimport js.html.NodeList;\nimport js.html.SpanElement;\nimport js.html.UListElement;\nimport js.Node;\nimport watchers.LocaleWatcher;\n\n/**\n * ...\n * @author AS3Boyan\n */\n\ninterface MenuItem\n{\n\tpublic function getElement():Element;\n}\n\n//@:keepSub prevents -dce full from deleting unused functions, so they still can be used in other plugins\n//alternatively you can just remove -dce full flag from plugin.hxml\n//more info about meta tags can be obtained at Haxe website: \n//http://haxe.org/manual/tips_and_tricks\nclass MenuButtonItem implements MenuItem\n{\t\n\tvar li:LIElement;\n\tpublic var position:Int;\n\t\n\tpublic function new(_menu:String, _text:String, _onClickFunction:Dynamic, ?_hotkey:String = \"\", ?_submenu:Bool = false)\n\t{\t\t\n\t\tvar hotkeyText:String = _hotkey;\n\t\t\n\t\tvar menuItem:String = _menu + \"->\" + _text;\n\t\t\n\t\tvar span:SpanElement = Browser.document.createSpanElement();\n        span.className = \"hotkey\";\n\t\t\n\t\tif (!_submenu) \n\t\t{\n\t\t\tHotkeys.add(menuItem, hotkeyText, span, _onClickFunction);\n\t\t}\n\t\t\n\t\tli = Browser.document.createLIElement();\t\n\t\tli.classList.add(\"menu-item\");\n\t\t\n\t\tvar a:AnchorElement = Browser.document.createAnchorElement();\n\t\ta.style.left = \"0\";\n\t\t\n\t\t//Do not translate submenu items\n\t\tif (!_submenu)\n\t\t{\n\t\t\ta.textContent = LocaleWatcher.getStringSync(_text);\n\t\t\ta.setAttribute(\"localeString\", _text);\n\t\t}\n\t\telse \n\t\t{\n\t\t\ta.textContent = _text;\n\t\t}\n\t\t\n\t\tif (_onClickFunction != null) \n\t\t{\n\t\t\ta.onclick = function (e:js.html.MouseEvent)\n\t\t\t{                \n\t\t\t\tif (li.className != \"disabled\")\n\t\t\t\t{                    \n\t\t\t\t\t_onClickFunction();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\t\n\t\ta.innerText = _text;\n\n\t\ta.appendChild(span);\n\t\t\n\t\tli.appendChild(a);\n\t}\n\t\n\tpublic function getElement():LIElement\n\t{\n\t\treturn li;\n\t}\n}\n\n//@:keepSub prevents -dce full from deleting unused functions, so they still can be used in other plugins\nclass Separator implements MenuItem\n{\n\tvar li:LIElement;\n\t\n\tpublic function new()\n\t{\n\t\tli = Browser.document.createLIElement();\n\t\tli.className = \"divider\";\n\t}\n\t\n\tpublic function getElement():Element\n\t{\n\t\treturn li;\n\t}\n}\n\nclass Submenu\n{\n\tvar ul:UListElement;\n\tvar li:LIElement;\n\tvar name:String;\n\tvar parentMenu:String;\n\t\n\tpublic function new(_parentMenu:String, _name:String)\n\t{\n\t\tname = _name;\n\t\tparentMenu = _parentMenu;\n\t\t\n\t\t//http://stackoverflow.com/questions/18023493/bootstrap-3-dropdown-sub-menu-missing\n\t\t\n\t\tvar li2:LIElement = Browser.document.createLIElement();\n\t\tli2.classList.add(\"menu-item\");\n\t\tli2.classList.add(\"dropdown\");\n\t\tli2.classList.add(\"dropdown-submenu\");\n\t\t\n\t\tli = li2;\n\t\t\n\t\tul = Browser.document.createUListElement();\n\t\t\n\t\tvar a2:AnchorElement = Browser.document.createAnchorElement();\n\t\ta2.href = \"#\";\n\t\ta2.classList.add(\"dropdown-toggle\");\n\t\ta2.setAttribute(\"data-toggle\", \"dropdown\");\n\t\ta2.setAttribute(\"localeString\", name);\n\t\ta2.textContent = name;\n\t\ta2.onclick = function (event:MouseEvent)\n\t\t{\n            new jQuery.JQuery(\"li.menu-item.dropdown.dropdown-submenu.open\").removeClass(\"open\");\n            \n\t\t\t// Avoid following the href location when clicking\n\t\t\tevent.preventDefault(); \n\t\t\t// Avoid having the menu to close when clicking\n\t\t\tevent.stopPropagation(); \n\t\t\t// If a menu is already open we close it\n\t\t\t//$('ul.dropdown-menu [data-toggle=dropdown]').parent().removeClass('open');\n\t\t\t// opening the one you clicked on\n\t\t\t\t\n\t\t\tif (ul.childElementCount > 0) \n\t\t\t{\n\t\t\t\tli2.classList.add('open');\n\n\t\t\t\tvar menu:UListElement = ul;\n\t\t\t\tvar newpos:Int;\n\t\t\t\t\n\t\t\t\tif ((menu.offsetLeft + menu.clientWidth) + 30 > Browser.window.innerWidth) \n\t\t\t\t{\n\t\t\t\t\tnewpos = -menu.clientWidth;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tnewpos = li2.clientWidth;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmenu.style.left = Std.string(newpos) + \"px\";\n\t\t\t}\n\t\t}\n\t\t\n\t\tli2.appendChild(a2);\n\t\t\n\t\tul.classList.add(\"dropdown-menu\");\n\t\tli2.appendChild(ul);\n\t}\n\t\n\tpublic function addMenuItem(_text:String, _position:Int, _onClickFunction:Dynamic, ?_hotkey:String):Void\n\t{\n\t\tvar menuButtonItem:MenuButtonItem = new MenuButtonItem(parentMenu + \"->\" + name, _text, _onClickFunction, _hotkey, true);\n\t\tul.appendChild(menuButtonItem.getElement());\n\t}\n\t\n\tpublic function clear():Void \n\t{\n\t\twhile (ul.firstChild != null) \n\t\t{\n\t\t\tul.removeChild(ul.firstChild);\n\t\t}\n\t}\n\t\n\tpublic function getElement():Element\n\t{\n\t\treturn li;\n\t}\n}\n \n//@:expose makes this class available in global scope\n//@:keepSub prevents -dce full from deleting unused functions, so they still can be used in other plugins\nclass Menu\n{\n\tvar li:LIElement;\n\tvar ul:UListElement;\n\tvar items:Array<MenuButtonItem>;\n\tvar name:String;\n\tvar submenus:StringMap<Submenu>;\n\tpublic var position:Int;\n\t\n\tpublic function new(_text:String, ?_headerText:String) \n\t{\n\t\tname = _text;\n\t\t\n\t\tli = Browser.document.createLIElement();\n\t\tli.className = \"dropdown\";\n\t\t\n\t\tvar a:AnchorElement = Browser.document.createAnchorElement();\n\t\ta.href = \"#\";\n\t\ta.className = \"dropdown-toggle\";\n\t\ta.setAttribute(\"data-toggle\", \"dropdown\");\n\t\ta.innerText = LocaleWatcher.getStringSync(_text);\n\t\ta.setAttribute(\"localeString\", _text);\n\t\tli.appendChild(a);\n\t\t\n\t\tul = Browser.document.createUListElement();\n\t\tul.className = \"dropdown-menu\";\n\t\tul.classList.add(\"dropdown-menu-form\");\n\t\t\n\t\tif (_headerText != null)\n\t\t{\n\t\t\tvar li_header:LIElement = Browser.document.createLIElement();\n\t\t\tli_header.className = \"dropdown-header\";\n\t\t\tli_header.innerText = _headerText;\n\t\t\tul.appendChild(li_header);\n\t\t}\n\t\t\n\t\tli.appendChild(ul);\n\t\t\n\t\titems = new Array();\n\t\tsubmenus = new StringMap();\n\t}\n\t\n\tpublic function addMenuItem(_text:String, _position:Int, _onClickFunction:Dynamic, ?_hotkey:String):Void\n\t{\n\t\tvar menuButtonItem:MenuButtonItem = new MenuButtonItem(name, _text, _onClickFunction, _hotkey);\n\t\t\t\t\n\t\tmenuButtonItem.position = _position;\n\t\t\n\t\tif (menuButtonItem.position != null && items.length > 0 && ul.childNodes.length > 0)\n\t\t{\n\t\t\tvar currentMenuButtonItem:MenuButtonItem;\n\n\t\t\tvar added:Bool = false;\n\n\t\t\tfor (i in 0...items.length)\n\t\t\t{\n\t\t\t\tcurrentMenuButtonItem = items[i];\n\n\t\t\t\tif (currentMenuButtonItem != menuButtonItem && currentMenuButtonItem.position == null || menuButtonItem.position < currentMenuButtonItem.position)\n\t\t\t\t{\n\t\t\t\t\tul.insertBefore(menuButtonItem.getElement(), currentMenuButtonItem.getElement());\n\t\t\t\t\titems.insert(i, menuButtonItem);\n\t\t\t\t\tadded = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added)\n\t\t\t{\n\t\t\t\tul.appendChild(menuButtonItem.getElement());\n\t\t\t\titems.push(menuButtonItem);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tul.appendChild(menuButtonItem.getElement());\n\t\t\titems.push(menuButtonItem);\n\t\t}\n\t}\n\t\n\tpublic function addSeparator():Void\n\t{\n\t\tul.appendChild(new Separator().getElement());\n\t}\n\t\n\tpublic function addSubmenu(_text:String):Submenu\n\t{\n\t\tvar submenu = new Submenu(name, _text);\n\t\tul.appendChild(submenu.getElement());\n\t\tsubmenus.set(_text, submenu);\n\t\treturn submenu;\n\t}\n\t\n\tpublic function addToDocument():Void\n\t{\t\n\t\tvar div:Element = cast(Browser.document.getElementById(\"position-navbar\"), Element);\n\t\tdiv.appendChild(li);\n\t}\n\n\tpublic function removeFromDocument():Void\n\t{\n\t\tli.remove();\n\t}\n\n\tpublic function setPosition(_position:Int):Void\n\t{\n\t\tposition = _position;\n\t}\n\t\n\tpublic function setDisabled(menuItemNames:Array<String>):Void\n\t{\n\t\tvar childNodes:NodeList = ul.childNodes;\n\t\t\n\t\tfor (i in 0...childNodes.length)\n\t\t{\n\t\t\tvar child:Element = cast(childNodes[i], Element);\n\t\t\t\n\t\t\tif (child.className != \"divider\")\n\t\t\t{\t\t\t\t\n\t\t\t\tvar a:AnchorElement = cast(child.firstChild, AnchorElement);\n\t\t\t\t\t\t\t\t\n\t\t\t\tif (Lambda.indexOf(menuItemNames, a.getAttribute(\"text\")) == -1)\n\t\t\t\t{\n\t\t\t\t\tchild.className = \"\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tchild.className = \"disabled\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic function setMenuEnabled(enabled:Bool):Void\n\t{\n\t\tvar childNodes:NodeList = ul.childNodes;\n\t\t\n\t\tfor (i in 0...childNodes.length)\n\t\t{\n\t\t\tvar child:Element = cast(childNodes[i], Element);\n\t\t\t\n\t\t\tif (child.className != \"divider\")\n\t\t\t{\n\t\t\t\tif (enabled)\n\t\t\t\t{\n\t\t\t\t\tchild.className = \"\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tchild.className = \"disabled\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\t\n\tpublic function getSubmenu(name:String):Submenu\n\t{\n\t\tif (!submenus.exists(name)) \n\t\t{\n\t\t\tsubmenus.set(name, addSubmenu(name));\n\t\t}\n\t\t\n\t\treturn submenus.get(name);\n\t}\n\t\n\tpublic function getElement():Element\n\t{\n\t\treturn li;\n\t}\n}","package newprojectdialog;\nimport haxe.ds.StringMap.StringMap;\nimport js.html.AnchorElement;\nimport js.html.LIElement;\nimport jQuery.JQuery;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass Category\n{\n\tpublic var element:LIElement;\n\tpublic var items:Array<Item>;\n\tpublic var subcategories:StringMap<Category>;\n\tpublic var position:Int;\n\tpublic var name:String;\n\tpublic var parent:Category;\n\t\n\tpublic function new(_name:String, _element:LIElement) \n\t{\n\t\telement = _element;\n\t\tsubcategories = new StringMap();\n\t\titems  = new Array();\n\t\tname = _name;\n\t}\n\t\n\tpublic function getCategory(name:String):Category\n\t{\n\t\tif (!subcategories.exists(name))\n\t\t{\n\t\t\tNewProjectDialog.createSubcategory(name, this);\n\t\t}\n\t\t\n\t\treturn subcategories.get(name);\n\t}\n\t\n\tpublic function addItem(name:String, ?createProjectFunction:Dynamic, ?showCreateDirectoryOption:Bool = true, ?nameLocked:Bool = false):Void\n\t{\n\t\titems.push(new Item(name, createProjectFunction, showCreateDirectoryOption, nameLocked));\n\t\tNewProjectDialog.loadProjectCategory();\n\t}\n\t\n\tpublic function getItems():Array<String>\n\t{\n\t\tvar itemNames:Array<String> = new Array();\n\t\t\t\t\n\t\tfor (item in items)\n\t\t{\n\t\t\titemNames.push(item.name);\n\t\t}\n\t\t\n\t\treturn itemNames;\n\t}\n\t\n\tpublic function select(?item:String):Void\n\t{\n\t\tNewProjectDialog.updateListItems(this, item);\n\t}\n\t\n\tpublic function getItem(name:String):Item\n\t{\n\t\tvar currentItem:Item = null;\n\t\t\n\t\tfor (item in items)\n\t\t{\n\t\t\tif (name == item.name)\n\t\t\t{\n\t\t\t\tcurrentItem = item;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn currentItem;\n\t}\n\t\n\tpublic function setPosition(_position:Int):Void\n\t{\n\t\tposition = _position;\n\t}\n\t\n\tpublic function getElement():LIElement\n\t{\n\t\treturn element;\n\t}\n}","package newprojectdialog;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass Item\n{\n\tpublic var name:String;\n\tpublic var showCreateDirectoryOption:Bool;\n\tpublic var nameLocked:Bool;\n\tpublic var createProjectFunction:Dynamic;\n\n\tpublic function new(_name:String, ?_createProjectFunction:Dynamic, ?_showCreateDirectoryOption:Bool = true, ?_nameLocked:Bool = false) \n\t{\n\t\tname = _name;\n\t\tshowCreateDirectoryOption = _showCreateDirectoryOption;\n\t\tnameLocked = _nameLocked;\n\t\tcreateProjectFunction = _createProjectFunction;\n\t}\n\t\n}","package newprojectdialog;\nimport haxe.Json;\nimport js.npm.Mkdirp;\nimport js.node.Fs;\nimport js.node.Path;\nimport bootstrap.ButtonManager;\nimport core.FileDialog;\nimport dialogs.ModalDialog;\nimport haxe.ds.StringMap;\nimport haxe.Timer;\nimport jQuery.JQuery;\nimport js.Browser;\nimport js.html.AnchorElement;\nimport js.html.ButtonElement;\nimport js.html.DivElement;\nimport js.html.Event;\nimport js.html.HeadingElement;\nimport js.html.InputElement;\nimport js.html.LabelElement;\nimport js.html.LIElement;\nimport js.html.MouseEvent;\nimport js.html.OptionElement;\nimport js.html.ParagraphElement;\nimport js.html.SelectElement;\nimport js.html.SpanElement;\nimport js.html.UListElement;\nimport watchers.LocaleWatcher;\n\n/**\n * ...\n * @author AS3Boyan\n */\ntypedef ProjectData = {\n    projectName:String,\n    projectCompany:String,\n    projectURL:String,\n    projectPackage:String,\n    projectLocation:String,\n    projectLicense:String,\n    createDirectory:Bool\n}\n\nclass NewProjectDialog\n{\n\tstatic var modalDialog:ModalDialog;\n\t\n\tstatic var list:SelectElement;\n\tstatic var selectedCategory:Category;\n\tstatic var description:ParagraphElement;\n\tstatic var helpBlock:ParagraphElement;\n\tstatic var projectName:InputElement;\n\tstatic var projectLocation:InputElement;\n\tstatic var createDirectoryForProject:InputElement;\n\tstatic var page1:DivElement;\n\tstatic var page2:DivElement;\n\tstatic var backButton:ButtonElement;\n\tstatic var textfieldsWithCheckboxes:StringMap<InputElement>;\n\tstatic var checkboxes:StringMap<InputElement>;\n\tstatic var nextButton:ButtonElement;\n\t\n\tstatic var categories:StringMap<Category> = new StringMap();\n\tstatic var tree:UListElement;\n\t\n\tstatic var categoriesArray:Array<Category> = new Array();\n\tstatic var lastProjectCategoryPath:String;\n\t\n\tpublic static function load():Void\n\t{\n\t\tmodalDialog = new ModalDialog(\"New Project\");\n\t\t\n\t\tvar button:ButtonElement = Browser.document.createButtonElement();\n\t\tbutton.type = \"button\";\n\t\tbutton.className = \"close\";\n\t\tbutton.setAttribute(\"data-dismiss\", \"modal\");\n\t\tbutton.setAttribute(\"aria-hidden\", \"true\");\n\t\tbutton.innerHTML = \"&times;\";\n\t\tmodalDialog.getHeader().appendChild(button);\n\t\t\n\t\ttextfieldsWithCheckboxes = new StringMap();\n\t\tcheckboxes = new StringMap();\n\t\t\n\t\tcreatePage1();\n\t\tmodalDialog.getBody().appendChild(page1);\n\t\t\n\t\tcreatePage2();\n\t\tpage2.style.display = \"none\";\n\t\tmodalDialog.getBody().appendChild(page2);\n\t\t\n\t\tvar buttonManager = ButtonManager.get();\n\t\t\n\t\tbackButton = buttonManager.createButton(\"Back\", true);\n\t\t\n\t\tmodalDialog.getFooter().appendChild(backButton);\n\t\t\n\t\tnextButton = buttonManager.createButton(\"Next\");\n\t\t\n\t\tbackButton.onclick = function (e:MouseEvent)\n\t\t{\n\t\t\tif (backButton.className.indexOf(\"disabled\") == -1)\n\t\t\t{\n\t\t\t\tshowPage1();\n\t\t\t}\n\t\t}\n\t\t;\n\t\t\n\t\tnextButton.onclick = function (e:MouseEvent)\n\t\t{\n\t\t\tif (nextButton.className.indexOf(\"disabled\") == -1)\n\t\t\t{\n\t\t\t\tshowPage2();\n\t\t\t}\n\t\t}\n\t\t;\n\t\t\n\t\tmodalDialog.getFooter().appendChild(nextButton);\n\t\t\n\t\tvar finishButton:ButtonElement = buttonManager.createButton(\"Finish\", false, false, true);\n\t\t\n\t\tfinishButton.onclick = function (e:MouseEvent)\n\t\t{\n\t\t\tif (projectLocation.value == \"\") \n\t\t\t{\n\t\t\t\tshowPage2();\n\t\t\t\tprojectLocation.focus();\n\t\t\t\tAlertify.log(\"Please specify location for your projects\");\n\t\t\t}\n\t\t\telse if (page1.style.display != \"none\" || projectName.value == \"\" )\n\t\t\t{\n\t\t\t\tgenerateProjectName(createProject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcreateProject();\n\t\t\t}\n\t\t}\n\t\t;\n\t\t\n\t\tmodalDialog.getFooter().appendChild(finishButton);\n\t\t\n\t\tvar cancelButton:ButtonElement = buttonManager.createButton(\"Cancel\", false, true);\n\t\t\n\t\tmodalDialog.getFooter().appendChild(cancelButton);\n\t\t\n\t\tvar location:String = Browser.getLocalStorage().getItem(\"Location\");\n\t\t\n\t\tif (location != null)\n\t\t{\n\t\t\tprojectLocation.value = location;\n\t\t}\n\t\t\n\t\tloadData(\"Package\");\n\t\tloadData(\"Company\");\n\t\tloadData(\"License\");\n\t\tloadData(\"URL\");\n\t\t\n\t\tloadCheckboxState(\"Package\");\n\t\tloadCheckboxState(\"Company\");\n\t\tloadCheckboxState(\"License\");\n\t\tloadCheckboxState(\"URL\");\n\t\tloadCheckboxState(\"CreateDirectory\");\n\t\t\n\t\tlastProjectCategoryPath = Browser.getLocalStorage().getItem(\"lastProject\");\n\t}\n\t\n\tstatic function showPage1() \n\t{\n\t\tnew JQuery(page1).show(300);\n\t\tnew JQuery(page2).hide(300);\n\t\tbackButton.className = \"btn btn-default disabled\";\n\t\tnextButton.className = \"btn btn-default\";\n\t}\n\t\n\tstatic function showPage2() \n\t{\n\t\tgenerateProjectName();\n\t\t\t\t\n\t\tnew JQuery(page1).hide(300);\n\t\tnew JQuery(page2).show(300);\n\t\tbackButton.className = \"btn btn-default\";\n\t\tnextButton.className = \"btn btn-default disabled\";\n\t}\n\t\n\tinline static function getCheckboxData(key:String):String\n\t{\n\t\tvar data:String = \"\";\n\t\t\n\t\tif (checkboxes.get(key).checked)\n\t\t{\n\t\t\tdata = textfieldsWithCheckboxes.get(key).value;\n\t\t}\n\t\t\n\t\treturn data;\n\t}\n\t\n\tstatic function createProject():Void\n\t{\t\t\n\t\tvar location = projectLocation.value;\n\t\t\n\t\tif (location != \"\" && projectName.value != \"\")\n\t\t{\n\t\t\tFs.exists(location, function (exists:Bool):Void\n\t\t\t{\n\t\t\t\tif (!exists)\n\t\t\t\t{\n\t\t\t\t\tMkdirp.mkdirpSync(location);\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tvar item:Item = selectedCategory.getItem(list.value);\n\t\t\t\t\t\n\t\t\t\tsaveProjectCategory();\n\n\t\t\t\tif (item.createProjectFunction != null)\n\t\t\t\t{\n\t\t\t\t\tvar projectPackage:String = getCheckboxData(\"Package\");\n\t\t\t\t\tvar projectCompany:String = getCheckboxData(\"Company\");\n\t\t\t\t\tvar projectLicense:String = getCheckboxData(\"License\");\n\t\t\t\t\tvar projectURL:String = getCheckboxData(\"URL\");\n\n\t\t\t\t\tvar data:ProjectData = { \n\t\t\t\t\t\tprojectName: projectName.value,\n\t\t\t\t\t\tprojectLocation: location,\n\t\t\t\t\t\tprojectPackage: projectPackage,\n\t\t\t\t\t\tprojectCompany: projectCompany,\n\t\t\t\t\t\tprojectLicense: projectLicense,\n\t\t\t\t\t\tprojectURL: projectURL,\n\t\t\t\t\t\tcreateDirectory: !selectedCategory.getItem(list.value).showCreateDirectoryOption || createDirectoryForProject.checked\n\t\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\titem.createProjectFunction(data);\n\n\t\t\t\t\tBrowser.getLocalStorage().setItem(\"Location\", location);\n\t\t\t\t}\n\n\t\t\t\t//switch (selectedCategory) \n\t\t\t\t//{\n\t\t\t\t\t//case \"Haxe\":\n\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//project.type = Project.HAXE;\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//switch (list.value) \n\t\t\t\t\t\t//{\n\t\t\t\t\t\t\t//case \"Flash Project\":\n\t\t\t\t\t\t\t\t//project.target = \"flash\";\n\t\t\t\t\t\t\t//case \"JavaScript Project\":\n\t\t\t\t\t\t\t\t//project.target = \"html5\";\n\t\t\t\t\t\t\t//case \"Neko Project\":\n\t\t\t\t\t\t\t\t//project.target = \"neko\";\n\t\t\t\t\t\t\t//case \"PHP Project\":\n\t\t\t\t\t\t\t\t//project.target = \"php\";\n\t\t\t\t\t\t\t//case \"C++ Project\":\n\t\t\t\t\t\t\t\t//project.target = \"cpp\";\n\t\t\t\t\t\t\t//case \"Java Project\":\n\t\t\t\t\t\t\t\t//project.target = \"java\";\n\t\t\t\t\t\t\t//case \"C# Project\":\n\t\t\t\t\t\t\t\t//project.target = \"csharp\";\n\t\t\t\t\t\t\t//default:\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t//}\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//var pathToMain:String  = Path.join(projectName.value, \"src\");\n\t\t\t\t\t\t//pathToMain = Path.join(pathToMain, \"Main.hx\");\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//project.main = pathToMain;\n\t\t\t\t\t//case \"OpenFL\":\n\t\t\t\t\t\t//switch (list.value) \n\t\t\t\t\t\t//{\n\t\t\t\t\t\t\t//case \"OpenFL Project\":\t\t\n\n\t\t\t\t\t\t\t//case \"OpenFL Extension\":\n\t\t\t\t\t\t\t\t//createOpenFLProject([\"extension\", projectName.value]);\n\t\t\t\t\t\t\t//default:\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t//}\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//project.type = Project.OPENFL;\n\t\t\t\t\t\t//project.target = \"html5\";\n\t\t\t\t\t\t//project.main = \"project.xml\";\n\t\t\t\t\t//case \"OpenFL/Samples\":\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//createOpenFLProject([list.value]);\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//project.type = Project.OPENFL;\n\t\t\t\t\t\t//project.target = \"html5\";\n\t\t\t\t\t\t//project.main = \"project.xml\";\n\t\t\t\t\t//default:\n\t\t\t\t\t\t//\n\t\t\t\t//}\n\n\t\t\t\t//Main.updateMenu();\n\n\t\t\t\tsaveData(\"Package\");\n\t\t\t\tsaveData(\"Company\");\n\t\t\t\tsaveData(\"License\");\n\t\t\t\tsaveData(\"URL\");\n\n\t\t\t\tsaveCheckboxState(\"Package\");\n\t\t\t\tsaveCheckboxState(\"Company\");\n\t\t\t\tsaveCheckboxState(\"License\");\n\t\t\t\tsaveCheckboxState(\"URL\");\n\t\t\t\tsaveCheckboxState(\"CreateDirectory\");\n\n\t\t\t\thide();\n\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\t\n\tstatic private function saveProjectCategory():Void\n\t{\n\t\tvar fullCategoryPath:String = \"\";\n\t\t\n\t\tvar root:Bool = false;\n\t\t\n\t\tvar parentCategory = selectedCategory;\n\t\t\n\t\twhile (!root)\n\t\t{\n\t\t\tfullCategoryPath = parentCategory.name + \"/\" + fullCategoryPath;\n\t\t\tif (parentCategory.parent != null)\n\t\t\t{\n\t\t\t\tparentCategory = parentCategory.parent;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\troot = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfullCategoryPath += list.value;\n\t\t\n\t\tBrowser.getLocalStorage().setItem(\"lastProject\", fullCategoryPath);\n\t}\n\t\n\tprivate static function generateProjectName(?onGenerated:Dynamic):Void\n\t{\t\t\n\t\tif (selectedCategory.getItem(list.value).nameLocked == false)\n\t\t{\n\t\t\tvar value:String = StringTools.replace(list.value, \"+\", \"p\");\n\t\t\tvalue = StringTools.replace(value, \"#\", \"sharp\");\n\t\t\tvalue = StringTools.replace(value, \" \", \"\");\n\t\t\t//\n\t\t\t//if (selectedCategory != \"OpenFL\")\n\t\t\t//{\n\t\t\t//\tvalue = StringTools.replace(selectedCategory, \"/\", \"\") + value;\n\t\t\t//}\n\t\t\t//\n\t\t\t\n\t\t\tgenerateFolderName(projectLocation.value, value, 1, onGenerated);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprojectName.value = list.value;\n\t\t\tupdateHelpBlock();\n\t\t\t\n\t\t\tif (onGenerated != null)\n\t\t\t{\n\t\t\t\tonGenerated();\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tif (selectedCategory.getItem(list.value).showCreateDirectoryOption)\n\t\t{\n\t\t\tcreateDirectoryForProject.parentElement.parentElement.style.display = \"block\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcreateDirectoryForProject.parentElement.parentElement.style.display = \"none\";\n\t\t}\n\t\t\n\t\tprojectName.disabled = selectedCategory.getItem(list.value).nameLocked;\n\t}\n\t\n\tpublic static function show():Void\n\t{\t\t\n\t\tif (page1.style.display == \"none\")\n\t\t{\n\t\t\tbackButton.click();\n\t\t}\n\t\t\n\t\tif (selectedCategory == null && categoriesArray.length > 0)\n\t\t{\n\t\t\tcategoriesArray[0].select();\n\t\t}\n\t\telse \n\t\t{\n\t\t\tselectedCategory.select(list.value);\n\t\t}\n\t\t\n\t\tmodalDialog.show();\n\t}\n\t\n\tpublic static function hide():Void\n\t{\n\t\tmodalDialog.hide();\n\t}\n\t\n\tpublic static function getCategory(name:String, ?position:Int):Category\n\t{\n\t\tvar category:Category;\n\t\t\n\t\tif (!categories.exists(name))\n\t\t{\n\t\t\tcategory = createCategory(name);\n\t\t\tcategories.set(name, category);\n\t\t\t\n\t\t\tcategory.setPosition(position);\n\t\t\taddCategoryToDocument(category);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tcategory = categories.get(name);\n\t\t\t\n\t\t\tif (position != null && category.position != position)\n\t\t\t{\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (position != null && category.position != position)\t\n\t\t{\n\t\t\tcategory.getElement().remove();\n\t\t\tcategories.remove(name);\n\n\t\t\tcategory.setPosition(position);\n\n\t\t\taddCategoryToDocument(category);\n\n\t\t\tcategories.set(name, category);\n\t\t}\n\t\t\n\t\treturn category;\n\t}\n\t\n\tpublic static function loadProjectCategory():Void\n\t{\n\t\tif (lastProjectCategoryPath != null)\n\t\t{\t\t\t\n\t\t\tvar categoryNames:Array<String> = lastProjectCategoryPath.split(\"/\");\n\t\t\t\n\t\t\t\tif (categories.exists(categoryNames[0]))\n\t\t\t\t{\n\t\t\t\t\tvar category:Category = categories.get(categoryNames[0]);\n\t\t\t\t\t\n\t\t\t\t\tif (categoryNames.length > 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (i in 1...categoryNames.length - 1)\n\t\t\t\t\t\t{\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (category.subcategories.exists(categoryNames[i]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcategory = category.subcategories.get(categoryNames[i]);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (Lambda.has(category.getItems(), categoryNames[categoryNames.length - 1]))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcategory.select(categoryNames[categoryNames.length - 1]);\n\t\t\t\t\t\t\t\t\tlastProjectCategoryPath = null;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tnew JQuery(category.element).children('ul.tree').show(300);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\tif (Lambda.has(category.getItems(), categoryNames[categoryNames.length - 1]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcategory.select(categoryNames[categoryNames.length - 1]);\n\t\t\t\t\t\t\tlastProjectCategoryPath = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tnew JQuery(category.element).children('ul.tree').show(300);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\t\n\t\t//for (category in categories.iterator())\n\t\t\t\t\t//{\n\t\t\t\t\t\t//if (Lambda.count(category.subcategories) > 0)\n\t\t\t\t\t\t//{\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t//}\n\t\t\t\t\t\t//trace(category);\n\t\t\t\t\t//}\n\t\t\t\t\t\n\t\t\t\t\t//trace(list.value);\n\t}\n\t\n\tpublic static function addCategoryToDocument(category:Category):Void\n\t{\n\t\tif (category.position != null && categoriesArray.length > 0 && tree.childNodes.length > 0)\n\t\t{\n\t\t\tvar currentCategory:Category;\n\n\t\t\tvar added:Bool = false;\n\n\t\t\tfor (i in 0...categoriesArray.length)\n\t\t\t{\n\t\t\t\tcurrentCategory = categoriesArray[i];\n\n\t\t\t\tif (currentCategory != category && currentCategory.position == null || category.position < currentCategory.position)\n\t\t\t\t{\n\t\t\t\t\ttree.insertBefore(category.getElement(), currentCategory.getElement());\n\t\t\t\t\tcategoriesArray.insert(i, category);\n\t\t\t\t\tadded = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added)\n\t\t\t{\n\t\t\t\ttree.appendChild(category.getElement());\n\t\t\t\tcategoriesArray.push(category);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttree.appendChild(category.getElement());\n\t\t\tcategoriesArray.push(category);\n\t\t}\n\t}\n\t\n\tprivate static function generateFolderName(path:String, folder:String, n:Int, ?onGenerated:Dynamic):Void\n\t{\t\t\n\t\tif (path != \"\" && folder != \"\")\n\t\t{\n\t\t\tFs.exists(Path.join(path, folder + Std.string(n)), function (exists:Bool):Void\n\t\t\t{\n\t\t\t\tif (exists)\n\t\t\t\t{\n\t\t\t\t\tgenerateFolderName(path, folder, n + 1, onGenerated);\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tprojectName.value = folder + Std.string(n);\n\t\t\t\t\tupdateHelpBlock();\n\t\t\t\t\t\n\t\t\t\t\tif (onGenerated != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tonGenerated();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprojectName.value = folder + Std.string(n);\n\t\t\tupdateHelpBlock();\n\t\t}\n\t}\n\t\n\tprivate static function loadData(_text:String):Void\n\t{\n\t\tvar text:String = Browser.getLocalStorage().getItem(_text);\n\t\t\n\t\tif (text != null)\n\t\t{\n\t\t\ttextfieldsWithCheckboxes.get(_text).value = text;\n\t\t}\n\t}\n\t\n\tprivate static function saveData(_text:String):Void\n\t{\n\t\tif (checkboxes.get(_text).checked)\n\t\t{\n\t\t\tvar value:String = textfieldsWithCheckboxes.get(_text).value;\n\t\t\t\n\t\t\tif (value != \"\")\n\t\t\t{\n\t\t\t\tBrowser.getLocalStorage().setItem(_text, value);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate static function loadCheckboxState(_text:String):Void\n\t{\n\t\tvar text:String = Browser.getLocalStorage().getItem(_text + \"Checkbox\");\n\t\t\n\t\tif (text != null)\n\t\t{\n\t\t\tcheckboxes.get(_text).checked = Json.parse(text);\n\t\t}\n\t}\n\t\n\tprivate static function saveCheckboxState(_text:String):Void\n\t{\n\t\tBrowser.getLocalStorage().setItem(_text + \"Checkbox\", Json.stringify(checkboxes.get(_text).checked));\n\t}\n\t\n\tprivate static function createPage1():DivElement\n\t{\n\t\tpage1 = Browser.document.createDivElement();\n\t\t\n\t\tvar well:DivElement = Browser.document.createDivElement();\n\t\twell.id = \"new-project-dialog-well\";\n\t\twell.className = \"well\";\n\t\t//well.style.overflow = \"auto\";\n\t\t//well.classList.add(\"pull-left\");\n\t\twell.style.float = \"left\";\n\t\twell.style.width = \"50%\";\n\t\twell.style.height = \"250px\";\n\t\twell.style.marginBottom = \"0\";\n\t\tpage1.appendChild(well);\n\t\t\n\t\ttree = Browser.document.createUListElement();\n\t\ttree.className = \"nav nav-list\";\n\t\twell.appendChild(tree);\n\t\t\n\t\tlist = createList();\n\t\tlist.style.float = \"left\";\n\t\tlist.style.width = \"50%\";\n\t\tlist.style.height = \"250px\";\n\t\t\n\t\tpage1.appendChild(list);\n\t\t\n\t\tpage1.appendChild(Browser.document.createBRElement());\n\t\t\n\t\tdescription = Browser.document.createParagraphElement();\n\t\tdescription.style.width = \"100%\";\n\t\tdescription.style.height = \"50px\";\n\t\tdescription.style.overflow = \"auto\";\n\t\tdescription.textContent = LocaleWatcher.getStringSync(\"Description\");\n\t\tdescription.setAttribute(\"localeString\", \"Description\");\n\t\t\n\t\tpage1.appendChild(description);\n\t\t\n\t\treturn page1;\n\t}\n\t\n\tprivate static function createPage2():DivElement\n\t{\n\t\tpage2 = Browser.document.createDivElement();\n\t\tpage2.style.padding = \"15px\";\n\t\t\n\t\tvar row:DivElement = Browser.document.createDivElement();\n\t\trow.className = \"row\";\n\t\t\n\t\tprojectName = Browser.document.createInputElement();\n\t\tprojectName.type = \"text\";\n\t\tprojectName.className = \"form-control\";\n\t\tprojectName.placeholder = LocaleWatcher.getStringSync(\"Name\");\n\t\tprojectName.style.width = \"100%\";\n\t\trow.appendChild(projectName);\n\t\t\n\t\tpage2.appendChild(row);\n\t\t\n\t\trow = Browser.document.createDivElement();\n\t\trow.className = \"row\";\n\t\t\n\t\tvar inputGroup:DivElement = Browser.document.createDivElement();\n\t\tinputGroup.className = \"input-group\";\n\t\tinputGroup.style.display = \"inline\";\n\t\trow.appendChild(inputGroup);\n\t\t\n\t\tprojectLocation = Browser.document.createInputElement();\n\t\tprojectLocation.type = \"text\";\n\t\tprojectLocation.className = \"form-control\";\n\t\tprojectLocation.placeholder = LocaleWatcher.getStringSync(\"Location\");\n\t\tprojectLocation.style.width = \"80%\";\n\t\tinputGroup.appendChild(projectLocation);\n\t\t\n\t\tvar browseButton:ButtonElement = Browser.document.createButtonElement();\n\t\tbrowseButton.type = \"button\";\n\t\tbrowseButton.className = \"btn btn-default\";\n\t\tbrowseButton.textContent = LocaleWatcher.getStringSync(\"Browse...\");\n\t\tbrowseButton.style.width = \"20%\";\n\t\t\n\t\tbrowseButton.onclick = function (e:MouseEvent)\n\t\t{\n\t\t\tFileDialog.openFolder(function (path:String):Void\n\t\t\t{\n\t\t\t\tprojectLocation.value = path;\n\t\t\t\tupdateHelpBlock();\n\t\t\t\t\n\t\t\t\tBrowser.getLocalStorage().setItem(\"Location\", path);\n\t\t\t}\n\t\t\t);\n\t\t};\n\t\t\n\t\tinputGroup.appendChild(browseButton);\n\t\t\n\t\tpage2.appendChild(row);\n\t\t\n\t\tcreateTextWithCheckbox(page2, \"Package\");\n\t\tcreateTextWithCheckbox(page2, \"Company\");\n\t\tcreateTextWithCheckbox(page2, \"License\");\n\t\tcreateTextWithCheckbox(page2, \"URL\");\n\t\t\n\t\trow = Browser.document.createDivElement();\n\t\trow.className = \"row\";\n\t\t\n\t\tvar checkboxDiv:DivElement = Browser.document.createDivElement();\n\t\tcheckboxDiv.className = \"checkbox\";\n\t\trow.appendChild(checkboxDiv);\n\t\t\n\t\tvar label:LabelElement = Browser.document.createLabelElement();\n\t\tcheckboxDiv.appendChild(label);\n\t\t\n\t\tcreateDirectoryForProject = Browser.document.createInputElement();\n\t\tcreateDirectoryForProject.type = \"checkbox\";\n\t\tcreateDirectoryForProject.checked = true;\n\t\tlabel.appendChild(createDirectoryForProject);\n\t\t\n\t\tcheckboxes.set(\"CreateDirectory\", createDirectoryForProject);\n\t\t\n\t\tcreateDirectoryForProject.onchange = function (e):Void\n\t\t{\n\t\t\tupdateHelpBlock();\n\t\t};\n\t\t\n\t\tlabel.appendChild(Browser.document.createTextNode(\"Create directory for project\"));\n\t\t\n\t\tpage2.appendChild(row);\n\t\t\n\t\trow = Browser.document.createDivElement();\n\t\t\n\t\thelpBlock = Browser.document.createParagraphElement();\n\t\thelpBlock.className = \"help-block\";\n\t\trow.appendChild(helpBlock);\n\t\t\n\t\tprojectLocation.onchange = function (e):Void\n\t\t{\n\t\t\tupdateHelpBlock();\n\t\t\tgenerateFolderName(projectLocation.value, projectName.value, 1);\n\t\t};\n\t\t\n\t\tprojectName.onchange = function (e):Void\n\t\t{\t\t\t\n\t\t\tprojectName.value = projectName.value.substr(0, 1).toUpperCase() + projectName.value.substr(1);\n\t\t\tupdateHelpBlock();\n\t\t}\n\t\t\n\t\tpage2.appendChild(row);\n\t\t\n\t\treturn page2;\n\t}\n\t\n\tprivate static function updateHelpBlock():Void\n\t{\n\t\tif (projectLocation.value != \"\")\n\t\t{\n\t\t\tvar str:String = \"\";\n\t\t\t\n\t\t\t//(selectedCategory != \"Haxe\" ||\n\t\t\tif ((!selectedCategory.getItem(list.value).showCreateDirectoryOption || createDirectoryForProject.checked == true) && projectName.value != \"\")\n\t\t\t{\n\t\t\t\tstr = projectName.value;\n\t\t\t}\n\t\t\t\n\t\t\thelpBlock.innerText = LocaleWatcher.getStringSync(\"Project will be created in: \") + Path.join(projectLocation.value, str);\n\t\t}\n\t\telse\n\t\t{\n\t\t\thelpBlock.innerText = \"\";\n\t\t}\n\t}\n\t\n\tprivate static function createTextWithCheckbox(_page2:DivElement, _text:String):Void\n\t{\n\t\tvar row:DivElement = Browser.document.createDivElement();\n\t\trow.className = \"row\";\n\t\t\n\t\tvar inputGroup:DivElement = Browser.document.createDivElement();\n\t\tinputGroup.className = \"input-group\";\n\t\trow.appendChild(inputGroup);\n\t\t\n\t\tvar inputGroupAddon:SpanElement = Browser.document.createSpanElement();\n\t\tinputGroupAddon.className = \"input-group-addon\";\n\t\tinputGroup.appendChild(inputGroupAddon);\n\t\t\n\t\tvar checkbox:InputElement = Browser.document.createInputElement();\n\t\tcheckbox.type = \"checkbox\";\n\t\tcheckbox.checked = true;\n\t\tinputGroupAddon.appendChild(checkbox);\n\t\t\n\t\tcheckboxes.set(_text, checkbox);\n\t\t\n\t\tvar text:InputElement = Browser.document.createInputElement();\n\t\ttext.type = \"text\";\n\t\ttext.className = \"form-control\";\n\t\ttext.placeholder = LocaleWatcher.getStringSync(_text);\n\t\t\n\t\ttextfieldsWithCheckboxes.set(_text, text);\n\t\t\n\t\tcheckbox.onchange = function (e)\n\t\t{\n\t\t\tif (checkbox.checked)\n\t\t\t{\n\t\t\t\ttext.disabled = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttext.disabled = true;\n\t\t\t}\n\t\t};\n\t\t\n\t\tinputGroup.appendChild(text);\n\t\t\n\t\t_page2.appendChild(row);\n\t}\n\t\n\tprivate static function createCategory(text:String):Category\n\t{\t\t\n\t\tvar li:LIElement = Browser.document.createLIElement();\n\t\t\n\t\tvar category:Category = new Category(text, li);\n\t\t\t\n\t\tvar a:AnchorElement = Browser.document.createAnchorElement();\n\t\ta.href = \"#\";\n\t\t\n\t\ta.addEventListener(\"click\", function (e:MouseEvent):Void\n\t\t{\n\t\t\tupdateListItems(category);\n\t\t}\n\t\t);\n\t\t\n\t\tvar span = Browser.document.createSpanElement();\n\t\tspan.className = \"glyphicon glyphicon-folder-open\";\n\t\ta.appendChild(span);\n\t\t\n\t\tspan = Browser.document.createSpanElement();\n\t\tspan.textContent = LocaleWatcher.getStringSync(text);\n\t\tspan.setAttribute(\"localeString\", text);\n\t\tspan.style.marginLeft = \"5px\";\n\t\ta.appendChild(span);\n\t\t\n\t\tli.appendChild(a);\n\t\t\n\t\treturn category;\n\t}\n\t\n\tpublic static function createSubcategory(text:String, category:Category):Void\n\t{\n\t\tvar a:AnchorElement = cast(category.element.getElementsByTagName(\"a\")[0], AnchorElement);\n\t\ta.className = \"tree-toggler nav-header\";\n\t\t\n\t\ta.onclick = function (e:MouseEvent):Void\n\t\t{\n\t\t\tnew JQuery(category.element).children('ul.tree').toggle(300);\n\t\t};\n\t\t\n\t\tvar ul:UListElement = Browser.document.createUListElement();\n\t\tul.className = \"nav nav-list tree\";\n\t\tcategory.element.appendChild(ul);\n\t\t\n\t\tcategory.element.onclick = function (e:MouseEvent):Void\n\t\t{\n\t\t\tfor (subcategory in category.subcategories.keys())\n\t\t\t{\n\t\t\t\tul.appendChild(category.subcategories.get(subcategory).element);\n\t\t\t}\n\t\t\t\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tcategory.element.onclick = null;\n\t\t\t\n\t\t\tnew JQuery(ul).show(300);\n\t\t};\n\t\t\n\t\tvar subcategory:Category = createCategory(text);\n\t\tsubcategory.parent = category;\n\t\tcategory.subcategories.set(text, subcategory);\n\t}\n\t\n\tpublic static function updateListItems(category:Category, ?item:String):Void\n\t{\t\t\n\t\tselectedCategory = category;\n\t\t\n\t\tnew JQuery(list).children().remove();\n\t\t\n\t\tsetListItems(list, category.getItems(), item);\n\t\t\n\t\tcheckSelectedOptions();\n\t}\n\t\n\tpublic static function createCategoryWithSubcategories(text:String, subcategories:Array<String>):LIElement\n\t{\n\t\tvar li:LIElement = Browser.document.createLIElement();\n\t\t\n\t\tvar category:Category = createCategory(text);\n\t\t\n\t\tvar a:AnchorElement = cast(li.getElementsByTagName(\"a\")[0], AnchorElement);\n\t\ta.className = \"tree-toggler nav-header\";\n\t\t\n\t\ta.onclick = function (e:MouseEvent):Void\n\t\t{\n\t\t\tnew JQuery(li).children('ul.tree').toggle(300);\n\t\t};\n\t\t\n\t\tvar ul:UListElement = Browser.document.createUListElement();\n\t\tul.className = \"nav nav-list tree\";\n\t\tli.appendChild(ul);\n\t\t\n\t\tli.onclick = function (e:MouseEvent):Void\n\t\t{\n\t\t\tfor (subcategory in subcategories)\n\t\t\t{\n\t\t\t\tul.appendChild(createCategory(subcategory).element);\n\t\t\t}\n\t\t\t\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tli.onclick = null;\n\t\t\t\n\t\t\tnew JQuery(ul).show(300);\n\t\t};\n\t\t\n\t\treturn li;\n\t}\n\t\n\tprivate static function createList():SelectElement\n\t{\n\t\tvar select:SelectElement = Browser.document.createSelectElement();\n\t\tselect.size = 10;\t\t\n\t\t\n\t\tselect.onchange = function (e):Void\n\t\t{\n\t\t\tcheckSelectedOptions();\n\t\t};\n\t\t\n\t\tselect.ondblclick = function (e):Void\n\t\t{\n\t\t\tshowPage2();\n\t\t};\n\t\t\n\t\treturn select;\n\t}\n\t\n\tprivate static function checkSelectedOptions():Void\n\t{\n\t\tif (list.selectedOptions.length > 0)\n\t\t{\n\t\t\tvar option:OptionElement = cast(list.selectedOptions[0], OptionElement);\n\t\t\t//updateDescription(selectedCategory, option.label);\n\t\t}\n\t}\n\t\n\tprivate static function updateDescription(category:String, selectedOption:String):Void\n\t{\n\t\t//switch (category) \n\t\t//{\n\t\t\t//case \"Haxe\":\n\t\t\t\t//switch (selectedOption) \n\t\t\t\t//{\n\t\t\t\t\t//[\"Flash Project\", \"JavaScript Project\", \"Neko Project\", \"PHP Project\", \"C++ Project\", \"Java Project\", \"C# Project\"]\n\t\t\t\t\t//case \"Flash Project\":\n\t\t\t\t\t\t//description.textContent = selectedOption;\n\t\t\t\t\t//default:\n\t\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t//case \"OpenFL\":\n\t\t\t//case \"OpenFL/Samples\":\n\t\t\t\t//\n\t\t\t//default:\n\t\t\t\t//\n\t\t//}\n\t\t\n\t\tdescription.textContent = selectedOption;\n\t}\n\t\n\tprivate static function setListItems(list:SelectElement, items:Array<String>, ?selectedItem:String):Void\n\t{\n\t\tfor (item in items)\n\t\t{\n\t\t\tlist.appendChild(createListItem(item));\n\t\t\t\n\t\t\t//if (items[i] == selectedItem)\n\t\t\t//{\n\t\t\t\t//list.selectedIndex = i;\n\t\t\t//}\n\t\t}\n\t\t\n\t\t//if (selectedItem == null)\n\t\t//{\n\t\t\tlist.selectedIndex = 0;\n\t\t//}\n\t\t\n\t\tcheckSelectedOptions();\n\t}\n\t\n\tprivate static function createListItem(text:String):OptionElement\n\t{\t\t\n\t\tvar option:OptionElement = Browser.document.createOptionElement();\n\t\toption.textContent = LocaleWatcher.getStringSync(text);\n\t\toption.setAttribute(\"localeString\", text);\n\t\toption.value = text;\n\t\treturn option;\n\t}\n\t\n}","package openflproject;\nimport core.HaxeHelper;\nimport core.ProcessHelper;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass CreateOpenFLProject\n{\n\tpublic static function createOpenFLProject(params:Array<String>, path:String, ?onComplete:Dynamic):Void\n\t{\t\n\t\tvar processParams = [\"run\", \"lime\", \"create\"].concat(params);\n\t\t\n\t\tvar processHelper = ProcessHelper.get();\n\t\t\n\t\tvar pathToHaxelib = HaxeHelper.getPathToHaxelib();\n\t\t\n\t\tprocessHelper.runProcess(pathToHaxelib, processParams, path, function (stdout, stderr)\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t \tif (stdout != \"\") \n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tAlertify.log(\"stdout:\\n\" + stdout);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (stderr != \"\") \n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tAlertify.log(\"stderr:\\n\" + stderr);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tonComplete();\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t }, function (code, stdout, stderr):Void \n\t\t{\n\t\t\tAlertify.error([pathToHaxelib].concat(processParams).join(\" \") + \" \" + Std.string(code));\n\t\t\t\n\t\t\tif (stdout != \"\") \n\t\t\t{\n\t\t\t\tAlertify.error(\"stdout:\\n\" + stdout);\n\t\t\t}\n\t\t\t\n\t\t\tif (stderr != \"\") \n\t\t\t{\n\t\t\t\tAlertify.error(\"stderr:\\n\" + stderr);\n\t\t\t}\n\t\t});\n\t}\n}","package openflproject;\nimport js.node.Path;\nimport core.Splitter;\nimport filetree.FileTree;\nimport js.Browser;\nimport js.html.TextAreaElement;\nimport newprojectdialog.NewProjectDialog;\nimport openproject.OpenProject;\nimport projectaccess.Project;\nimport projectaccess.ProjectAccess;\nimport projectaccess.ProjectOptions;\nimport tabmanager.TabManager;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass OpenFLProject\n{\n\tstatic var instance:OpenFLProject;\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new OpenFLProject();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function new():Void\n\t{\n\t\tNewProjectDialog.getCategory(\"OpenFL\", 2).addItem(\"OpenFL Project\", createOpenFLProject, false);\n\t\tNewProjectDialog.getCategory(\"OpenFL\").addItem(\"OpenFL Extension\", createOpenFLExtension, false);\n\t\t\n\t\tvar samples: Array<String> = [\n\t\t\"ActuateExample\",\n\t\t\"AddingAnimation\",\n\t\t\"AddingText\",\n\t\t\"DisplayingABitmap\",\n\t\t\"HandlingKeyboardEvents\",\n\t\t\"HandlingMouseEvent\",\n\t\t\"HerokuShaders\",\n\t\t\"PiratePig\",\n\t\t\"PlayingSound\",\n\t\t\"SimpleBox2D\",\n\t\t\"SimpleOpenGLView\",\n\t\t];\n\t\t\n\t\tfor (sample in samples)\n\t\t{\n\t\t\tNewProjectDialog.getCategory(\"OpenFL\").getCategory(\"Samples\").addItem(sample, function (data:ProjectData):Void\n\t\t\t{\n\t\t\t\t//data.projectName = sample;\n\t\t\t\tcreateOpenFLProject(data, true);\n\t\t\t}\n\t\t\t, false, true);\n\t\t}\n\t}\n\t\n\tpublic function createOpenFLProject(data:ProjectData, sample:Bool = false):Void\n\t{\t\n\t\tvar params:Array<String>;\n\t\t\n\t\tif (!sample)\n\t\t{\n\t\t\tvar str:String = \"\";\n\t\t\n\t\t\tif (data.projectPackage != \"\")\n\t\t\t{\n\t\t\t\tstr = data.projectPackage + \".\";\n\t\t\t}\n\t\t\t\n\t\t\tparams = [\"openfl:project\", \"\\\"\" + str + data.projectName + \"\\\"\"];\n\t\t\t\n// \t\t\tif (data.projectCompany != \"\")\n// \t\t\t{\n// \t\t\t\tparams.push(\"\\\"\" + data.projectCompany + \"\\\"\");\n// \t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tparams = [\"openfl:\" + data.projectName];\n\t\t}\n\t\t\t\t\n\t\tCreateOpenFLProject.createOpenFLProject(params, data.projectLocation, function ()\n\t\t{\t\n\t\t\tvar pathToProject:String = Path.join(data.projectLocation, data.projectName);\n\t\t\t\n\t\t\tcreateProject(data);\n\t\t\t\n\t\t\tvar tabManagerInstance = TabManager.get();\n\t\t\ttabManagerInstance.openFileInNewTab(Path.join(pathToProject, \"Source\", \"Main.hx\"));\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic function createOpenFLExtension(data:ProjectData):Void\n\t{\n\t\tCreateOpenFLProject.createOpenFLProject([\"extension\", data.projectName], data.projectLocation, function ()\n\t\t{\n\t\t\tcreateProject(data);\n\t\t}\n\t\t);\n\t}\n\t\n\tfunction createProject(data:ProjectData):Void\n\t{\n\t\tvar pathToProject:String = Path.join(data.projectLocation, data.projectName);\n\t\t\t\n\t\tvar project:Project = new Project();\n\t\tproject.name = data.projectName;\n\t\tproject.projectPackage = data.projectPackage;\n\t\tproject.company = data.projectCompany;\n\t\tproject.license = data.projectLicense;\n\t\tproject.url = data.projectURL;\n\t\tproject.type = Project.OPENFL;\n\t\t//project.target = target;\n\t\tproject.openFLTarget = \"flash\";\n\t\tProjectAccess.path = pathToProject;\n\t\tproject.buildActionCommand = [\"haxelib\", \"run\", \"lime\", \"build\", '\"%path%\"', project.openFLTarget, \"--connect\", \"5000\"].join(\" \");\n\t\tproject.runActionType = Project.COMMAND;\n\t\tproject.runActionText = [\"haxelib\", \"run\", \"lime\", \"run\", '\"%path%\"', project.openFLTarget].join(\" \");\n\t\t\n\t\tProjectAccess.currentProject = project;\n\t\t\n\t\tProjectAccess.save(function ():Void \n\t\t{\n\t\t\tvar path:String = Path.join(pathToProject, \"project.hide\");\n\t\t\tOpenProject.openProject(path);\n\t\t}\n\t\t);\n\t}\n\t\n}","package openflproject;\nimport core.HaxeHelper;\nimport core.ProcessHelper;\nimport js.Browser;\nimport js.html.TextAreaElement;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass OpenFLTools\n{\t\n\tpublic static function getParams(path:String, target:String, onLoaded:String->Void):Void\n\t{\n\t\tvar processHelper = ProcessHelper.get();\n\t\t\n\t\tprocessHelper.runProcess(HaxeHelper.getPathToHaxelib(), [\"run\", \"lime\", \"display\", target, \"-nocolor\"], path, function (stdout:String, stderr:String):Void \n\t\t{\n\t\t\t//onComplete\n\t\t\t\n\t\t\tif (onLoaded != null)\n\t\t\t{\n\t\t\t\tonLoaded(stdout);\n\t\t\t}\n\t\t\t\n\t\t\tprintStderr(stderr);\n\t\t\t\n\t\t}, function (code:Int, stdout:String, stderr:String):Void \n\t\t{\n\t\t\t//onFailed\n\t\t\t\n\t\t\tAlertify.error(\"OpenFL tools error. OpenFL may be not installed. Please update OpenFL.(haxelib upgrade)\");\n\t\t\tAlertify.error(\"OpenFL tools process exit code \" + code);\n\t\t\t\n\t\t\tprintStderr(stdout);\n\t\t\tprintStderr(stderr);\n\t\t}); \n\t}\n\t\n\tstatic function printStderr(stderr:String)\n\t{\n\t\tif (stderr != \"\")\n\t\t{\n\t\t\tAlertify.error(\"OpenFL tools stderr: \" + stderr, 15000);\n\t\t}\n\t}\n}","package openproject;\nimport js.node.Path;\nimport core.RecentProjectsList;\nimport core.Splitter;\nimport filetree.FileTree;\nimport js.Browser;\nimport js.Node;\nimport openflproject.OpenFLTools;\nimport projectaccess.Project;\nimport projectaccess.ProjectAccess;\nimport projectaccess.ProjectOptions;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass OpenFL\n{\n\tpublic static function open(path:String):Void\n\t{\n\t\tvar pathToProject:String = Path.dirname(path);\n\t\t\t\t\n\t\tvar project:Project = new Project();\n\t\tproject.name = pathToProject.substr(pathToProject.lastIndexOf(Path.sep));\n\t\tproject.type = Project.OPENFL;\n\t\tproject.openFLTarget = \"flash\";\n\t\tproject.openFLBuildMode = \"Debug\";\n\t\tProjectAccess.path = pathToProject;\n\t\tproject.buildActionCommand = [\"haxelib\", \"run\", \"lime\", \"build\", '\"%path%\"', project.openFLTarget, \"--connect\", \"5000\"].join(\" \");\n\t\tproject.runActionType = Project.COMMAND;\n\t\tproject.runActionText = [\"haxelib\", \"run\", \"lime\", \"run\", '\"%path%\"', project.openFLTarget].join(\" \");\n\t\t\n\t\tvar pathToProjectHide:String = Path.join(pathToProject, \"project.hide\");\n\t\t\n\t\tProjectAccess.currentProject = project;\n\t\t\n\t\tvar projectOptions = ProjectOptions.get();\n\t\tvar splitter = Splitter.get();\n\t\tvar fileTree = FileTree.get();\n\t\tvar recentProjectsList = RecentProjectsList.get();\n\t\t\n\t\tprojectOptions.updateProjectOptions();\n\t\t\n\t\tProjectAccess.save(fileTree.load.bind(project.name, pathToProject));\n\t\t\n\t\tsplitter.show();\n\t\t\n\t\tBrowser.getLocalStorage().setItem(\"pathToLastProject\", pathToProjectHide);\n\t\trecentProjectsList.add(pathToProjectHide);\n\t}\n\t\n\tpublic static function parseOpenFLDisplayParameters(pathToProject:String, target:String, onComplete:Array<String>->Void):Void\n\t{\n\t\tOpenFLTools.getParams(pathToProject, target, function (stdout:String)\n\t\t{\t\t\t\t\t\n\t\t\tvar args:Array<String> = [];\n\t\t\n\t\t\tvar currentLine:String;\n\t\t\t\n\t\t\tfor (line in stdout.split(\"\\n\"))\n\t\t\t{\n\t\t\t\tcurrentLine = StringTools.trim(line);\n\t\t\t\t\n\t\t\t\tif (!StringTools.startsWith(currentLine, \"#\"))\n\t\t\t\t{\n\t\t\t\t\targs.push(currentLine);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tonComplete(args);\n\t\t}\n\t\t);\n\t}\n}","package openproject;\nimport haxe.Json;\nimport js.node.Fs.FsReadFileOpt;\nimport js.node.Fs;\nimport js.node.Path;\nimport core.ProcessHelper;\nimport projectaccess.Project.FileData;\nimport core.OutlinePanel;\nimport core.FileDialog;\nimport core.RecentProjectsList;\nimport core.Splitter;\nimport filetree.FileTree;\nimport haxe.Serializer;\nimport haxe.Unserializer;\nimport haxe.xml.Fast;\nimport jQuery.JQuery;\nimport js.Browser;\nimport js.html.TextAreaElement;\nimport js.Node;\nimport openflproject.OpenFLTools;\nimport parser.ClasspathWalker;\nimport projectaccess.Project;\nimport projectaccess.ProjectAccess;\nimport projectaccess.ProjectOptions;\nimport tabmanager.TabManager;\nimport tjson.TJSON;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass OpenProject\n{\t\n\tpublic static function openProject(?pathToProject:String, ?project:Bool = false):Void\n\t{\n\t\tif (pathToProject == null)\n\t\t{\n\t\t\tif (project) \n\t\t\t{\n\t\t\t\tFileDialog.openFile(parseProject, \".hide,.lime,.xml,.hxml\");\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tFileDialog.openFile(parseProject);\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tcheckIfFileExists(pathToProject);\n\t\t}\n\t}\n\t\n\tstatic function checkIfFileExists(path:String):Void\n\t{\n\t\tFs.exists(path, function (exists:Bool)\n\t\t{\n\t\t\tif (exists) \n\t\t\t{\n\t\t\t\tparseProject(path);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\ttrace(\"previously opened project: \" + path + \" was not found\");\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tstatic function parseProject(path:String):Void\n\t{\t\n\t\ttrace(\"open: \" + path);\n        \n\t\tvar filename:String = Path.basename(path);\n\t\t\t\n\t\tvar outlinePanel = OutlinePanel.get();\n\t\tvar tabManagerInstance = TabManager.get();\n\t\tvar fileTree = FileTree.get();\n\t\tvar projectOptions = ProjectOptions.get();\n\t\tvar recentProjectsList = RecentProjectsList.get();\n\t\tvar splitter = Splitter.get();\n\t\t\n\t\tswitch (filename) \n\t\t{\n\t\t\tcase \"project.hide\":\t\n\t\t\t\tcloseProject(true);\n\t\t\t\t\n                outlinePanel.clearFields();\n                outlinePanel.update();\n                \n\t\t\t\tvar options:FsReadFileOpt = { };\n\t\t\t\toptions.encoding = \"utf8\";\n\t\t\t\t\n\t\t\t\tFs.readFile(path, options, function (error, data:String):Void\n\t\t\t\t{\n\t\t\t\t\tvar pathToProject:String = Path.dirname(path);\n\t\t\t\t\t\n\t\t\t\t\tProjectAccess.currentProject = parseProjectData(data);\n\t\t\t\t\tProjectAccess.path = pathToProject;\n\t\t\t\t\t\n\t\t\t\t\tvar project = ProjectAccess.currentProject;\n\t\t\t\t\t\n\t\t\t\t\tvar classpathWalker = ClasspathWalker.get();\n\t\t\t\t\t\n\t\t\t\t\tclasspathWalker.parseProjectArguments();\n\t\t\t\t\t\n                    var loadedFilesCount:Int = 0;\n                    var totalFilesCount:Int;\n                    \n\t\t\t\t\tif (project.files == null) \n\t\t\t\t\t{\n\t\t\t\t\t\tproject.files = [];\n\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t{\n                        totalFilesCount = project.files.length;\n                        \n\t\t\t\t\t\tfor (i in 0...totalFilesCount)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (Std.is(project.files[i], String))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tproject.files[i] = {path: untyped project.files[i]};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (file in project.files) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar fullPath:String = Path.join(pathToProject, file.path);\n                            \n\t\t\t\t\t\t\tFs.exists(fullPath, function (exists:Bool) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (exists) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttabManagerInstance.openFileInNewTab(fullPath, false, function ()\n                                                               {\n                                                                   loadedFilesCount++;\n                                                                   \n                                                                   if (loadedFilesCount == totalFilesCount)\n                                                                   {\n                                                                       \tvar activeFile = project.activeFile;\n                                                                       \n                                                                        if (activeFile != null) \n                                                                        {\n                                                                            var fullPathToActiveFile:String = Path.join(pathToProject, activeFile);\n                                                                            \n                                                                            Fs.exists(fullPathToActiveFile, function (exists:Bool)\n                                                                            {\n                                                                                if (exists) \n                                                                                {\n\t\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\ttrace(fullPathToActiveFile);\n                                                                                    tabManagerInstance.selectDoc(fullPathToActiveFile);\n                                                                                    cm.Editor.editor.focus();\n                                                                                }\n                                                                            }\n                                                                            );\n                                                                        }\n                                                                   }\n                                                               });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (project.hiddenItems == null) \n\t\t\t\t\t{\n\t\t\t\t\t\tproject.hiddenItems = [];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (project.showHiddenItems == null) \n\t\t\t\t\t{\n\t\t\t\t\t\tproject.showHiddenItems = false;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (project.type == Project.OPENFL)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (project.openFLBuildMode == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproject.openFLBuildMode = \"Debug\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tprojectOptions.updateProjectOptions();\n\t\t\t\t\tfileTree.load(project.name, pathToProject);\n\t\t\t\t\t\n\t\t\t\t\tsplitter.show();\n\t\t\t\t\t\n\t\t\t\t\tBrowser.getLocalStorage().setItem(\"pathToLastProject\", path);\n\t\t\t\t\trecentProjectsList.add(path);\n\t\t\t\t}\n\t\t\t\t);\n\t\t\tdefault:\t\t\t\t\n\t\t\t\tvar extension:String = Path.extname(filename);\n\t\t\n\t\t\t\tswitch (extension) \n\t\t\t\t{\n\t\t\t\t\tcase \".hxml\":\n\t\t\t\t\t\tcloseProject(true);\n\t\t\t\t\t\t\n                        outlinePanel.clearFields();\n                        outlinePanel.update();\n                        \n\t\t\t\t\t\tvar pathToProject:String = Path.dirname(path);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar project:Project = new Project();\n\t\t\t\t\t\tproject.name = pathToProject.substr(pathToProject.lastIndexOf(Path.sep));\n\t\t\t\t\t\tproject.type = Project.HXML;\n\t\t\t\t\t\tProjectAccess.path = pathToProject;\n\t\t\t\t\t\tproject.main = Path.basename(path);\n\t\t\t\t\t\t\n\t\t\t\t\t\tProjectAccess.currentProject = project;\n\t\t\t\t\t\tprojectOptions.updateProjectOptions();\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar pathToProjectHide:String = Path.join(pathToProject, \"project.hide\");\n\t\t\t\t\t\t\n\t\t\t\t\t\tProjectAccess.save(function ()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileTree.load(project.name, pathToProject);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\t\n\t\t\t\t\t\tsplitter.show();\n\t\t\t\t\t\t\n\t\t\t\t\t\tBrowser.getLocalStorage().setItem(\"pathToLastProject\", pathToProjectHide);\n\t\t\t\t\t\trecentProjectsList.add(pathToProjectHide);\n\t\t\t\t\tcase \".lime\", \".xml\":\n\t\t\t\t\t\tcloseProject(true);\n\t\t\t\t\t\t\n                        outlinePanel.clearFields();\n                \t\toutlinePanel.update();\n                        \n\t\t\t\t\t\tvar options:FsReadFileOpt = { };\n\t\t\t\t\t\toptions.encoding = \"utf8\";\n\t\t\t\t\t\t\n\t\t\t\t\t\tFs.readFile(path, options, function (error, data:String):Void \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (error == null) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar xml:Xml = Xml.parse(data);\n\t\t\t\t\t\t\t\tvar fast:Fast = new Fast(xml);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (fast.hasNode.project) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tOpenFL.open(path);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tAlertify.error(\"This is not an OpenFL project. OpenFL project xml should have 'project' node\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttrace(error);\n\t\t\t\t\t\t\t\tAlertify.error(\"Can't open file: \" + path + \"\\n\" + error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttabManagerInstance.openFileInNewTab(path);\n\t\t}\n\t}\n\t\n\tpublic static function searchForLastProject():Void\n\t{\n\t\tvar pathToLastProject:String = Browser.getLocalStorage().getItem(\"pathToLastProject\");\n\t\tif (pathToLastProject != null)\n\t\t{\n\t\t\topenProject(pathToLastProject);\n\t\t}\n\t}\n\t\n\tpublic static function closeProject(?sync:Bool = false):Void\n\t{\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n\t\tvar processHelper = ProcessHelper.get();\n\t\t\n\t\tif (ProjectAccess.path != null) \n\t\t{\n\t\t\tProjectAccess.save(updateProjectData, sync);\n            tabManagerInstance.closeAll();\n\t\t\tprocessHelper.clearErrors();\n\t\t}\n\t\telse \n\t\t{\n\t\t\tupdateProjectData();\n\t\t}\n\t}\n\t\n\tstatic function updateProjectData()\n\t{\n\t\tvar splitter = Splitter.get();\n\t\t\n\t\tProjectAccess.path = null;\n\t\tProjectAccess.currentProject = null;\n\t\tsplitter.hide();\n\t\tBrowser.getLocalStorage().removeItem(\"pathToLastProject\");\n\t}\n\t\n\tstatic function parseProjectData(data:String):Project\n\t{\t\t\n\t\tvar project:Project = null;\n\t\t\n\t\ttry \n\t\t{\n\t\t\tproject = TJSON.parse(data);\n\t\t}\n\t\tcatch (unknown:Dynamic)\n\t\t{\n\t\t\ttrace(unknown);\n\t\t\ttrace(data);\n\t\t\tproject = Json.parse(data);\n\t\t}\n\t\t\n\t\treturn project;\n\t}\n\t\n}\n","package parser;\nimport js.node.Path;\nimport haxeparser.Data.TypeDecl;\nimport byte.ByteData;\nimport cm.Editor;\nimport haxe.ds.StringMap.StringMap;\nimport haxe.macro.Expr.Access;\nimport haxe.macro.Expr.Field;\nimport haxe.macro.Expr.Function;\nimport haxeparser.Data.ClassFlag;\nimport haxeparser.Data.Definition;\nimport haxeparser.Data.TypeDef;\nimport haxeparser.HaxeParser;\nimport hxparse.NoMatch;\nimport hxparse.Unexpected;\nimport js.Node;\n\n/**\n * ...\n * @author \n */\n\ntypedef FileData =\n{\n    path: String, \n    directory:String,\n    filename: String,\n    displayText: String\n}\n\t\ntypedef ClassData =\n{\n\tfields: Array<String>\n}\n\nclass ClassParser\n{\n    public static var haxeStdTopLevelClassList:Array<String> = [\"Int\", \"Float\", \"String\", \"Void\", \"Std\", \"Bool\", \"Dynamic\", \"Array\", \"null\", \"this\", \"break\", \"continue\", \"extends\", \"implements\", \"in\", \"override\", \"package\", \"inline\", \"throw\", \"untyped\", \"using\", \"import\", \"return\", \"extern\"];\n\tpublic static var topLevelClassList:Array<String> = [];\n    \n    public static var haxeStdImports:Array<String> = [];\n\tpublic static var importsList:Array<String> = [];\n    \n\tpublic static var classCompletions:StringMap<ClassData> = new StringMap();\n    \n    public static var haxeStdFileList:Array<FileData> = [];\n    public static var filesList:Array<FileData> = [];\n\t\n\tpublic static function parse(data:String, path:String)\n\t{\n\t\tvar input = ByteData.ofString(data);\n\t\tvar parser = new HaxeParser(input, path);\n\t\tvar ast = null;\n\t\t\n\t\ttry \n\t\t{\n\t\t\tast = parser.parse();\n\t\t}\n\t\tcatch (e:NoMatch<Dynamic>) \n\t\t{\n// \t\t\ttrace(e.pos.format(input) + \": Unexpected \" + e.token.tok);\n\t\t}\n\t\tcatch (e:Unexpected<Dynamic>) \n\t\t{\n// \t\t\ttrace(e.pos.format(input) + \": Unexpected \" + e.token.tok);\n\t\t} \n\t\tcatch (e:Dynamic)\n\t\t{\t\t\t\n\t\t\t//trace(\"Unhandled parsing error: \");\n\t\t\t//trace(e);\n\t\t}\n\t\t\n\t\treturn ast;\n\t}\n\t\n\tpublic static function processFile(data:String, path:String, std:Bool):Void \n\t{\n\t\tvar ast = parse(data, path);\n\t\t\n        var mainClass = Path.basename(path, \".hx\");\n        \n\t\tif (ast != null) \n\t\t{\n\t\t\tparseDeclarations(ast, mainClass, std);\n\t\t}\n\t\telse \n\t\t{\n            var filePackage = RegexParser.getFilePackage(data);\n            var typeDeclarations = RegexParser.getTypeDeclarations(data);\n            \n            var packages;\n            \n            if (filePackage.filePackage != null)\n            {\n                packages = filePackage.filePackage.split(\".\");\n            }\n            else\n            {\n                packages = [];\n            }\n            \n            for (item in typeDeclarations)\n            {                 \n                var className:String = resolveClassName(packages, mainClass, item.name);\n                addClassName(className, std);\n\t\t\t}\n            \n\t\t\t//trace(\"ast for \" + path + \" is null\");\n\t\t}\n\t}\n\t\n\tstatic function parseDeclarations(ast:{decls:Array<TypeDecl>, pack:Array<String>}, mainClass:String, std:Bool) \n\t{\t\t\n\t\tfor (decl in ast.decls) switch (decl.decl) \n\t\t{\n\t\t\tcase EImport(sl, mode): \n\t\t\tcase EUsing(path): \n\t\t\tcase EAbstract(data): \n\t\t\t\tvar className:String = resolveClassName(ast.pack, mainClass, data.name);\n\t\t\t\taddClassName(className, std);\n\t\t\tcase EClass(data): \n\t\t\t\tvar className:String = resolveClassName(ast.pack, mainClass, data.name);\n\t\t\t\tprocessClass(className, data);\n\t\t\t\taddClassName(className, std);\n\t\t\t\t\n\t\t\t\t//\n\t\t\t\t\n\t\t\t\t//if (processClass(data, pos)) \n\t\t\t\t//{\n\t\t\t\t\t//break;\n\t\t\t\t//}\n\t\t\tcase EEnum(data): \n\t\t\t\tvar className:String = resolveClassName(ast.pack, mainClass, data.name);\n\t\t\t\taddClassName(className, std);\n\t\t\tcase ETypedef(data): \n\t\t\t\tvar className:String = resolveClassName(ast.pack, mainClass, data.name);\n\t\t\t\taddClassName(className, std);\n\t\t}\n\t}\n\t\n\tstatic function processClass(className:String, type:Definition<ClassFlag, Array<Field>>) \n\t{\n\t\tvar completions:Array<String> = [];\n\t\t\n\t\tfor (i in 0...type.data.length)\n\t\t{\n\t\t\tif (getScope(type.data[i]))\n\t\t\t{\n\t\t\t\tcompletions.push(type.data[i].name);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//switch (type.data[i].kind) \n\t\t//{\n\t\t\t//case FFun(f):\n\t\t\t\t//\n\t\t\t\t//currentFunctionScopeType = getFunctionScope(type.data[i], f);\n\t\t\t\t//\n\t\t\t\t//if (pos > f.expr.pos.min && pos < f.expr.pos.max) \n\t\t\t\t//{\n\t\t\t\t\t//if (processExpression(f.expr.expr, pos)) \n\t\t\t\t\t//{\n\t\t\t\t\t\t//break;\n\t\t\t\t\t//}\n\t\t\t\t//}\n\t\t\t//case FVar(t, e):\n\t\t\t\t//completions.push(type.data[i].name);\n\t\t\t\t//trace(e);\n\t\t\t\t//currentFunctionScopeType = SClass;\n\t\t\t//case FProp(get, set, t, e):\n\t\t\t\t//completions.push(type.data[i].name);\n\t\t\t\t//currentFunctionScopeType = SClass;\n\t\t//}\n\t\t\n\t\tif (completions.length > 0)\n\t\t{\n\t\t\tclassCompletions.set(className, {fields: completions});\n\t\t}\n\t}\n\t\n\tstatic function getScope(field:Field) \n\t{\n\t\tvar isPublic:Bool = false;\n\t\tvar access:Array<Access> = field.access;\n\t\t\n\t\tfor (accessType in access)\n\t\t{\n\t\t\tswitch (accessType) \n\t\t\t{\n\t\t\t\tcase APublic:\n\t\t\t\t\tisPublic = true;\n\t\t\t\tcase AStatic:\n\t\t\t\tcase AMacro:\n\t\t\t\tcase AInline:\n\t\t\t\tcase ADynamic:\n\t\t\t\tcase AOverride:\n\t\t\t\tcase APrivate:\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn isPublic;\n\t}\n\t\n\tstatic function resolveClassName(pack:Array<String>, mainClass:String, name:String):String \n\t{\n\t\tvar classPackage = pack.copy();\n\t\t\t\t\n\t\tif (name == mainClass) \n\t\t{\n\t\t\tclassPackage.push(name);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tclassPackage.push(mainClass);\n\t\t\tclassPackage.push(name);\n\t\t}\n\t\t\n\t\tvar className= classPackage.join(\".\");\n\t\treturn className;\n\t}\n\t\n\tstatic function addClassName(name:String, std:Bool):Void \n\t{\n        var list:Array<String>;\n        \n\t\tif (name.indexOf(\".\") == -1) \n\t\t{\n\t\t\tif (std) \n\t\t\t{\n                list = haxeStdTopLevelClassList;\n\t\t\t}\n            else\n            {\n                list = topLevelClassList;\n            }\n            \n\t\t\tif (list.indexOf(name) == -1)\n\t\t\t{\n\t\t\t\tlist.push(name);\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (std) \n\t\t\t{\n\t\t\t\tlist = haxeStdImports;\n\t\t\t}\n            else\n            {\n                list = importsList;\n            }\n\t\t\t\n\t\t\tif (list.indexOf(name) == -1)\n\t\t\t{\n\t\t\t\tlist.push(name);\n\t\t\t}\n\t\t}\n\t}\n}","package parser;\nimport js.node.fs.Stats;\nimport js.npm.Walkdir;\nimport js.node.Path;\nimport js.node.Fs.FsReadFileOpt;\nimport js.node.Fs;\nimport core.Completion;\nimport core.HaxeHelper;\nimport core.Hotkeys;\nimport core.ProcessHelper;\nimport core.Utils;\nimport dialogs.BrowseDirectoryDialog;\nimport dialogs.DialogManager;\nimport dialogs.ModalDialog;\nimport haxe.ds.StringMap.StringMap;\nimport js.Browser;\nimport js.Node;\nimport openflproject.OpenFLTools;\nimport projectaccess.Project;\nimport projectaccess.ProjectAccess;\nimport watchers.LocaleWatcher;\nimport watchers.SettingsWatcher;\nimport parser.ClassParser.FileData;\n\n/**\n * ...\n * @author \n */\ntypedef ClasspathAndLibs = \n{\n\tclasspaths: Array<String>,\n\tlibs: Array<LibClassPath>\n}\n\t\ntypedef LibClassPath = \n{\n\tpath: String,\n\tstd: Bool\n}\n\nclass ClasspathWalker\n{\n\tpublic var pathToHaxeStd:String;\n\tpublic var pathToHaxe:String;\n    \n\tstatic var instance:ClasspathWalker;\n\t\n\tpublic static function get():ClasspathWalker\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new ClasspathWalker();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function new():Void \n\t{\t\t\n\t\t\n\t}\n\t\n\tpublic function load()\n\t{\n\t\tvar localStorage2 = Browser.getLocalStorage();\n\t\t\n\t\tvar pathToHaxe2 = Node.process.env.HAXE_STD_PATH;\n\t\t\n\t\tif (pathToHaxe2 != null)\n\t\t{\n\t\t\tpathToHaxe2 = Path.dirname(pathToHaxe2);\n\t\t}\n\t\t\n\t\tvar paths:Array<String> = [Node.process.env.HAXEPATH, pathToHaxe2, Node.process.env.HAXE_HOME];\n\t\t\n\t\tif (localStorage2 != null) \n\t\t{\n\t\t\tvar path = localStorage2.getItem(\"pathToHaxe\");\n\t\t\tpaths.insert(0, path);\n\t\t}\n\t\t\n\t\tswitch (Utils.os) \n\t\t{\n\t\t\tcase Utils.WINDOWS:\n\t\t\t\tpaths.push(\"C:/HaxeToolkit/haxe\");\n\t\t\tcase Utils.LINUX, Utils.MAC:\n\t\t\t\tpaths.push(\"/usr/lib/haxe\");\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t\tfor (envVar in paths)\n\t\t{\n\t\t\tif (envVar != null) \n\t\t\t{\n\t\t\t\tpathToHaxeStd = getHaxeStdFolder(envVar);\n\t\t\t\t\n\t\t\t\tif (pathToHaxeStd != null) \n\t\t\t\t{\n\t\t\t\t\tpathToHaxe = envVar;\n\t\t\t\t\tlocalStorage2.setItem(\"pathToHaxe\", pathToHaxe);\n\t\t\t\t\tHaxeHelper.updatePathToHaxe();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (pathToHaxeStd == null) \n\t\t{\n\t\t\tshowHaxeDirectoryDialog();\n\t\t}\n\t\telse \n\t\t{\n\t\t\tparseClasspath(pathToHaxeStd, true);\n\t\t}\n\t}\n\n\t\n\tpublic function showHaxeDirectoryDialog()\n\t{\n\t\tvar localStorage2 = Browser.getLocalStorage();\n\t\t\n\t\tvar currentLocation = \"\";\n\t\t\n\t\tvar pathToHaxe2 = localStorage2.getItem(\"pathToHaxe\");\n\t\t\n\t\tif (pathToHaxe2 != null) \n\t\t{\n\t\t\tcurrentLocation = pathToHaxe2;\n\t\t}\n\t\t\n\t\tDialogManager.showBrowseFolderDialog(\"Please specify path to Haxe compiler(parent folder of std): \", function (path:String):Void \n\t\t{\n\t\t\tpathToHaxeStd = getHaxeStdFolder(path);\n\t\t\t\n\t\t\tif (pathToHaxeStd != null)\n\t\t\t{\n\t\t\t\tparseClasspath(pathToHaxeStd, true);\n\t\t\t\tpathToHaxe = path;\n\t\t\t\tlocalStorage2.setItem(\"pathToHaxe\", pathToHaxe);\n\t\t\t\tHaxeHelper.updatePathToHaxe();\n\t\t\t\tDialogManager.hide();\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tAlertify.error(LocaleWatcher.getStringSync(\"Can't find 'std' folder in specified path\"));\n\t\t\t}\n\t\t}, currentLocation, \"Download Haxe\", \"http://haxe.org/download\");\n\t}\n\t\n\tfunction getHaxeStdFolder(path:String):String\n\t{\n\t\tvar pathToStd:String = null;\n\t\t\n\t\tvar fileName = \"haxe\";\n\t\t\n\t\tswitch (Utils.os)\n\t\t{\n\t\t\tcase Utils.WINDOWS:\n\t\t\t\tfileName += \".exe\";\n\t\t\tdefault:\n\n\t\t}\n\t\t\n\t\tif (Fs.existsSync(path)) \n\t\t{\n\t\t\tif (Fs.existsSync(Path.join(path, fileName)))\n\t\t\t{\n\t\t\t\tpath = Path.join(path, \"std\");\n\n\t\t\t\tif (Fs.existsSync(path))\n\t\t\t\t{\n\t\t\t\t\tpathToStd = path;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn pathToStd;\n\t}\n\n\tpublic function getProjectClasspaths(project:Project, onComplete:ClasspathAndLibs->Void)\n\t{\n\t\tvar classpathsAndLibs = null;\n\t\t\n\t\tswitch (project.type) \n\t\t{\n\t\t\tcase Project.HAXE, Project.HXML:\n\t\t\t\tvar path:String;\n\n\t\t\t\tif (project.type == Project.HAXE) \n\t\t\t\t{\n\t\t\t\t\tpath = Path.join(ProjectAccess.path, project.targetData[project.target].pathToHxml);\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tpath = Path.join(ProjectAccess.path, project.main);\n\t\t\t\t}\n\t\t\t\t\n// \t\t\t\tvar options:js.Node.NodeFsFileOptions = { };\n// \t\t\t\toptions.encoding = \"utf8\";\n\n\t\t\t\tvar data:String = Fs.readFileSync(path, \"utf8\");\n\t\t\t\tclasspathsAndLibs = getClasspaths(data.split(\"\\n\"));\n\t\t\t\t\n\t\t\t\tprocessHaxelibs(classpathsAndLibs.libs, function (libs)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar classpathsAndLibs2 = {classpaths: classpathsAndLibs.classpaths, libs: libs};\n\t\t\t\t\t\t\t\t\tonComplete(classpathsAndLibs2);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t   );\n\t\t\tcase Project.OPENFL:\n\t\t\t\tOpenFLTools.getParams(ProjectAccess.path, project.openFLTarget, function (stdout:String):Void \n\t\t\t\t{\n\t\t\t\t\tclasspathsAndLibs = getClasspaths(stdout.split(\"\\n\"));\n\t\t\t\t\t\n\t\t\t\t\tprocessHaxelibs(classpathsAndLibs.libs, function (libs)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar classpathsAndLibs2 = {classpaths: classpathsAndLibs.classpaths, libs: libs};\n\t\t\t\t\t\t\t\t\tonComplete(classpathsAndLibs2);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t   );\n\t\t\t\t});\n\t\t\tdefault:\n\n\t\t}\n\t}\n\n\tpublic function parseProjectArguments():Void \n\t{\n\t\tClassParser.classCompletions = new StringMap();\n\t\tClassParser.filesList = [];\n\t\t\n\t\tClassParser.topLevelClassList = [];\n\t\tClassParser.importsList = [];\n\t\t\n\t\tif (ProjectAccess.path != null) \n\t\t{\n\t\t\tvar project = ProjectAccess.currentProject;\n\t\t\t\n\t\t\tgetProjectClasspaths(project, function (classpathsAndLibs)\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\tfor (path in classpathsAndLibs.classpaths) \n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tparseClasspath(path);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t \tfor (lib in classpathsAndLibs.libs)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tparseClasspath(lib.path, lib.std);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t);\n\t\t}\n\t\t\n\t\twalkProjectDirectory(ProjectAccess.path);\n\t}\n        \n    function getFileDirectory(relativePath:String):String\n\t{\n        var directory:String = \"\";\n        \n        if (relativePath.indexOf(\"/\") != -1)\n        {\n            directory = relativePath.substring(0, relativePath.lastIndexOf(\"/\"));\n        }\n        else if (relativePath.indexOf(\"\\\\\") != -1)\n        {\n            directory = relativePath.substring(0, relativePath.lastIndexOf(\"\\\\\"));\n        }\n            \n        return directory;\n    }\n\t\n\tfunction getClasspaths(data:Array<String>)\n\t{\n\t\tvar classpaths:Array<String> = [];\n\t\t\n\t\tfor (arg in parseArg(data, \"-cp\")) \n\t\t{\n\t\t\tvar classpath:String = Path.resolve(ProjectAccess.path, arg);\n\t\t\tclasspaths.push(classpath);\n\t\t}\n\n\t\tvar libs:Array<String> = parseArg(data, \"-lib\");\n\t\treturn {classpaths: classpaths, libs: libs};\n\t}\n\t\n\tfunction processHaxelibs(libs:Array<String>, onComplete:Array<LibClassPath>->Void):Void \n\t{\t\t\n\t\tvar n = libs.length;\n\t\t\n\t\tvar classpaths = [];\n\t\t\n\t\tif (n > 0)\n\t\t{\n\t\t\tfor (arg in libs) \n\t\t\t{\n\t\t\t\tvar processHelper = ProcessHelper.get();\n\n\t\t\t\tprocessHelper.runProcess(HaxeHelper.getPathToHaxelib(), [\"path\", arg], null, function (stdout:String, stderr:String):Void \n\t\t\t\t{\n\t\t\t\t\tn--;\n\n\t\t\t\t\tfor (path in stdout.split(\"\\n\")) \n\t\t\t\t\t{\n\t\t\t\t\t\tif (path.indexOf(Path.sep) != -1) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpath = StringTools.trim(path);\n\t\t\t\t\t\t\tpath = Path.normalize(path);\n\n\t\t\t\t\t\t\tFs.exists(path, function (exists:Bool)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (exists) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tclasspaths.push({path: path, std: false});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (n == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tonComplete(classpaths);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tonComplete(classpaths);\n\t\t}\n\t}\n\t\n\tfunction parseArg(args:Array<String>, type:String):Array<String>\n\t{\n\t\tvar result:Array<String> = [];\n\t\t\n\t\tfor (arg in args)\n\t\t{\n\t\t\targ = StringTools.trim(arg);\n\t\t\t\n\t\t\tif (StringTools.startsWith(arg, type)) \n\t\t\t{\n\t\t\t\tresult.push(arg.substr(type.length + 1));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\t\n\tfunction parseClasspath(path:String, ?std:Bool = false):Void\n\t{        \n        if (Main.sync)\n        {\n            for (pathToFile in Walkdir.sync(path))\n            {\n                var stat = Fs.lstatSync(pathToFile);\n                \n                if (stat.isFile())\n                {\n               \t\tprocessFile(pathToFile, std);    \n                }\n            }\n        }\n        else\n        {\n            var emitter = Walkdir.walk(path, {});\n\t\t\n            emitter.on(\"file\", function (pathToFile, stat):Void \n            {\n                processFile(pathToFile, std);\n            }\n            );\n\n            emitter.on(\"error\", function (pathToFile:String, stat):Void \n            {\n                trace(pathToFile);\n            }\n            );\n        }\n\t}\n\t\n    function processFile(path:String, std:Bool)\n    {\n        addFile(path, std);\n\n        var options:FsReadFileOpt = { };\n       \toptions.encoding = \"utf8\";\n            \n        if (Path.extname(path) == \".hx\") \n        {\n            Fs.readFile(path, options, function (error, data:String):Void \n            {\n                if (error == null) \n                {\n                    ClassParser.processFile(data, path, std);\n                }\n            }\n            );\n        }\n    }\n\n\tfunction getFileIndex(pathToFile:String, list:Array<FileData>):Int\n\t{\n        var index:Int = -1;\n            \n        for (i in 0...list.length)\n        {\n            if (list[i].path == pathToFile)\n            {\n                index = i;\n                break;\n            }\n        }\n            \n        return index;\n    }\n\n\tpublic function addFile(path:String, ?std:Bool = false)\n\t{\n        var relativePath:String;\n        var list:Array<FileData>;\n        \n\t\tvar completionInstance = Completion.get();\n\t\t\n\t\tif (!SettingsWatcher.isItemInIgnoreList(path) && !ProjectAccess.isItemInIgnoreList(path)) \n\t\t{            \n            if (std)\n            {\n                list = ClassParser.haxeStdFileList;\n            }\n            else\n            {\n                list = ClassParser.filesList;\n            }\n                \n            if (ProjectAccess.path != null && (core.Utils.os == core.Utils.WINDOWS || !std))\n            {\n                relativePath = Path.relative(ProjectAccess.path, path);\n\n                if (getFileIndex(relativePath, list) == -1)\n                {\n                    list.push({path: relativePath, directory: getFileDirectory(relativePath), displayText: completionInstance.processDisplayText(relativePath), filename: Path.basename(relativePath)});\n                }\n            }\n            else if (getFileIndex(path, list) == -1)\n            {\n                list.push({path: path, directory: getFileDirectory(path), displayText: completionInstance.processDisplayText(path), filename: Path.basename(path)});\n            }            \n\t\t}\n\t}\n\t\n\tpublic function removeFile(path:String)\n\t{\n\t\tvar relativePath;\n\t\t\n        var index:Int = -1;\n        \n        for (list in [ClassParser.haxeStdFileList, ClassParser.filesList])\n        {\n\t\t\tif (ProjectAccess.path != null) \n            {\n                relativePath = Path.relative(ProjectAccess.path, path);\n\n                index = getFileIndex(relativePath, list);\n\n                if (index != -1)\n                {\n                    list.remove(list[index]);    \n                }\n            }\n\n            index = getFileIndex(path, list);\n\n            if (index != -1)\n            {\n                list.remove(list[index]);    \n            }\n        }\n\t}\n\t\n\tfunction walkProjectDirectory(path:String):Void \n\t{\n        if (Main.sync)\n        {\n\t\t\tWalkdir.sync(path, {}, function (path:String, stat:Stats)\n                            {\n                                if (stat.isFile())\n                                {\n                                    addFile(path);\n                                }\n                            }\n                            );\n        }\n        else\n        {\n            var emitter = Walkdir.walk(path, {});\n\n//             var options:NodeFsFileOptions = { };\n//             options.encoding = \"utf8\";\n\n            emitter.on(\"file\", function (path, stat):Void \n            {\t\t\t\n                addFile(path);\n            }\n            );\n\n            emitter.on(\"error\", function (path:String, stat):Void \n            {\n                trace(path);\n            }\n            );\n        }\n\t}\n\t\n}\n","package parser;\nimport js.node.Path;\nimport haxeparser.Data.TypeDecl;\nimport core.OutlinePanel;\nimport haxe.macro.Expr;\nimport haxe.macro.Expr.Field;\nimport haxe.macro.Expr.Position;\nimport haxeparser.Data.ClassFlag;\nimport haxeparser.Data.EnumFlag;\nimport haxeparser.Data.Definition;\nimport haxeparser.Data.ImportMode;\nimport haxeparser.Data.TypeDef;\nimport js.Node;\n\ntypedef DeclarationPos = \n{\n\tvar min:Int;\n\tvar max:Int;\n}\n\n\ntypedef\tClassField =\n{\n\tvar name:String;\n\tvar pos:DeclarationPos;\n}\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass OutlineHelper\n{\n\tstatic var instance:OutlineHelper;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new OutlineHelper();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n    var pathToLastFile:String;\n    \n\tpublic function getList(data:String, path:String)\n\t{\n\t\tvar ast = ClassParser.parse(data, path);\n        \n\t\tvar outlinePanel = OutlinePanel.get();\n\t\t\n\t\tif (ast != null) \n\t\t{\n\t\t\tvar parsedData = parseDeclarations(ast);\n\t\t\t\n\t\t\tvar mainClass = Path.basename(path);\n            \n\t\t\tvar rootItem:TreeItem = { label: mainClass };\n\t\t\trootItem.items = parsedData.treeItems;\n\t\t\trootItem.expanded = true;\n\t\t\t\n            pathToLastFile = path;\n            \n\t\t\toutlinePanel.clearFields();\n\t\t\toutlinePanel.addField(rootItem);\n\t\t\toutlinePanel.update();\n\t\t}\n        else if(pathToLastFile != path)\n        {\n            outlinePanel.clearFields();\n            outlinePanel.update();\n        }\n\t}\n\t\n\tpublic function parseDeclarations(ast:{decls:Array<TypeDecl>, pack:Array<String>}) \n\t{\t\t\n\t\tvar fileImports = [];\n\t\t\n\t\tvar treeItems:Array<TreeItem> = [];\n\t\t\n\t\tfor (decl in ast.decls) switch (decl.decl) \n\t\t{\n\t\t\tcase EImport(sl, mode):\n\t\t\t\tfileImports = fileImports.concat(parseImports(sl, mode));\n\t\t\tcase EUsing(path): \n\t\t\tcase EAbstract(data):\n\t\t\t\tvar treeItem: TreeItem = { label: data.name };\n\t\t\t\ttreeItem.expanded = true;\n\t\t\t\ttreeItems.push(treeItem);\n\t\t\tcase EClass(data): \n\t\t\t\tvar treeItem: TreeItem = { label: data.name };\n\t\t\t\tvar items:Array<TreeItem> = [];\n\t\t\t\ttreeItem.items = items;\n\t\t\t\ttreeItem.expanded = true;\n\t\t\t\t\n\t\t\t\tfor (item in getClassFields(data)) \n\t\t\t\t{\n\t\t\t\t\titems.push( { label: item.name, value: item.pos } );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttreeItems.push(treeItem);\n\t\t\tcase EEnum(data): \n\t\t\t\tvar treeItem: TreeItem = { label: data.name };\n        \t\tvar items:Array<TreeItem> = [];\n\t\t\t\ttreeItem.items = items;\n\t\t\t\ttreeItem.expanded = true;\n\t\t\t\ttreeItems.push(treeItem);\n        \t\t\n        \t\tfor (item in data.data)\n                {\n                \titems.push( { label: item.name, value: {min: item.pos.min, max: item.pos.max}});\n       \t     \t}\n        \t\t\n\t\t\tcase ETypedef(data): \n\t\t\t\tvar treeItem: TreeItem = { label: data.name };\n        \t\tvar items:Array<TreeItem> = [];\n\t\t\t\ttreeItem.items = items;\n\t\t\t\ttreeItem.expanded = true;\n\t\t\t\ttreeItems.push(treeItem);\n        \n        \t\tfor (item in getTypeDefFields(data)) \n\t\t\t\t{\n\t\t\t\t\titems.push( { label: item.name, value: item.pos } );\n\t\t\t\t}\n\t\t}\n\t\t\n\t\treturn { fileImports: fileImports, treeItems: treeItems};\n\t}\n\t\n\tpublic function parseImports(sl : Array<{ pos : Position, pack : String }> ,  mode : ImportMode ) \n\t{\n\t\tvar fileImports = [];\n\t\t\n\t\tvar importPackages:Array<String> = [];\n\t\t\n\t\tfor (item in sl) \n\t\t{\n\t\t\timportPackages.push(item.pack);\n\t\t}\n\t\t\n\t\tvar fullImportName:String = importPackages.join(\".\");\n\t\t\n\t\tswitch (mode) \n\t\t{\n\t\t\tcase INormal:\n\t\t\t\tfileImports.push(fullImportName);\n\t\t\tcase IAsName(s):\n\t\t\t\tfileImports.push(s);\n\t\t\tcase IAll:\n\t\t\t\tfileImports.push(fullImportName);\n\t\t\t\t\n                for (list in [ClassParser.importsList, ClassParser.haxeStdImports])\n                {\n              \t\tfor (item in list) \n                    {\n                        if (item.indexOf(fullImportName) == 0) \n                        {\n                            fileImports.push(item);\n                        }\n                    }    \n                }\n                \n\t\t\t\t\n\t\t}\n\t\t\n\t\treturn fileImports;\n\t}\n\t\n\tfunction getClassFields(type:Definition<ClassFlag, Array<Field>>):Array<ClassField>\n\t{\n\t\tvar fields:Array<ClassField> = [];\n\t\t\n\t\tfor (i in 0...type.data.length)\n\t\t{\n\t\t\tswitch (type.data[i].kind) \n\t\t\t{\n\t\t\t\tcase FFun(f):\n\t\t\t\t\tvar data:String = type.data[i].name + \"(\";\n\t\t\t\t\t\n\t\t\t\t\tvar args:Array<String> = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (item in f.args) \n\t\t\t\t\t{\n\t\t\t\t\t\targs.push(getFieldNameAndType(item.name, item.type));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdata += args.join(\", \");\n\t\t\t\t\tdata += \")\";\n\t\t\t\t\t\n\t\t\t\t\tif (f.ret != null) \n\t\t\t\t\t{\n\t\t\t\t\t\tdata += \":\" + getFieldType(f.ret);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfields.push( { name: data, pos: {min: type.data[i].pos.min, max: type.data[i].pos.max} } );\n\t\t\t\t\t\n\t\t\t\t\t//currentFunctionScopeType = getFunctionScope(type.data[i], f);\n\t\t\t\t\t//\n\t\t\t\t\t//if (pos > f.expr.pos.min && pos < f.expr.pos.max) \n\t\t\t\t\t//{\n\t\t\t\t\t\t//if (processExpression(f.expr.expr, pos)) \n\t\t\t\t\t\t//{\n\t\t\t\t\t\t\t//break;\n\t\t\t\t\t\t//}\n\t\t\t\t\t//}\n\t\t\t\tcase FVar(t, e):\n\t\t\t\t\tfields.push( { name: getFieldNameAndType(type.data[i].name, t), pos: {min: type.data[i].pos.min, max: type.data[i].pos.max} } );\n\t\t\t\t\t\n\t\t\t\t\t//TPath( p : TypePath );\n\t\t\t\t\t//TFunction( args : Array<ComplexType>, ret : ComplexType );\n\t\t\t\t\t//TAnonymous( fields : Array<Field> );\n\t\t\t\t\t//TParent( t : ComplexType );\n\t\t\t\t\t//TExtend( p : Array<TypePath>, fields : Array<Field> );\n\t\t\t\t\t//TOptional( t : ComplexType );\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t//completions.push(type.data[i].name);\n\t\t\t\t\t//trace(e);\n\t\t\t\t\t//currentFunctionScopeType = SClass;\n\t\t\t\tcase FProp(get, set, t, e):\n\t\t\t\t\tfields.push({name: type.data[i].name, pos: {min: type.data[i].pos.min, max: type.data[i].pos.max}});\n\t\t\t\t\t//completions.push(type.data[i].name);\n\t\t\t\t\t//currentFunctionScopeType = SClass;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn fields;\n\t}    \n    \n    function getTypeDefFields(type:Definition<EnumFlag, ComplexType>):Array<ClassField>\n\t{\n\t\tvar typeDefFields:Array<ClassField> = [];\n\t\t\n        switch (type.data)\n        {\n            case TPath(p):\n            case TFunction(args, ret):\n            case TAnonymous(fields):\n                for (field in fields)\n                {                     \n                   \tswitch (field.kind)\n                    {\n                        case FFun(f):\n                            var data:String = field.name + \"(\";\n\n                            var args:Array<String> = [];\n\n                            for (item in f.args) \n                            {\n                                args.push(getFieldNameAndType(item.name, item.type));\n                            }\n\n                            data += args.join(\", \");\n                            data += \")\";\n\n                            if (f.ret != null) \n                            {\n                                data += \":\" + getFieldType(f.ret);\n                            }\n\n                            typeDefFields.push( { name: data, pos: {min: field.pos.min, max: field.pos.max} } );\n                        case FVar(t, e):\n                            typeDefFields.push( { name: getFieldNameAndType(field.name, t), pos: {min: field.pos.min, max: field.pos.max} } );\n\n                            //TPath( p : TypePath );\n                            //TFunction( args : Array<ComplexType>, ret : ComplexType );\n                            //TAnonymous( fields : Array<Field> );\n                            //TParent( t : ComplexType );\n                            //TExtend( p : Array<TypePath>, fields : Array<Field> );\n                            //TOptional( t : ComplexType );\n\n\n                            //completions.push(type.data[i].name);\n                            //trace(e);\n                            //currentFunctionScopeType = SClass;\n                        case FProp(get, set, t, e):\n                            typeDefFields.push({name: field.name, pos: {min: field.pos.min, max: field.pos.max}});\n                            //completions.push(type.data[i].name);\n                            //currentFunctionScopeType = SClass;\n                    }\n                }\n            case TParent(t):\n            case TExtend(p, fields):\n            case TOptional(t):\n        }\n        \n// \t\tfor (i in 0...type.data.length)\n// \t\t{\n//            \ttrace(type.data[i]);\n            \n// \t\t\tswitch (type.data[i].kind) \n// \t\t\t{\n// \t\t\t\tcase FFun(f):\n// \t\t\t\t\tvar data:String = type.data[i].name + \"(\";\n\t\t\t\t\t\n// \t\t\t\t\tvar args:Array<String> = [];\n\t\t\t\t\t\n// \t\t\t\t\tfor (item in f.args) \n// \t\t\t\t\t{\n// \t\t\t\t\t\targs.push(getFieldNameAndType(item.name, item.type));\n// \t\t\t\t\t}\n\t\t\t\t\t\n// \t\t\t\t\tdata += args.join(\", \");\n// \t\t\t\t\tdata += \")\";\n\t\t\t\t\t\n// \t\t\t\t\tif (f.ret != null) \n// \t\t\t\t\t{\n// \t\t\t\t\t\tdata += \":\" + getFieldType(f.ret);\n// \t\t\t\t\t}\n\t\t\t\t\t\n// \t\t\t\t\tfields.push( { name: data, pos: type.data[i].pos.min } );\n\t\t\t\t\t\n// \t\t\t\t\t//currentFunctionScopeType = getFunctionScope(type.data[i], f);\n// \t\t\t\t\t//\n// \t\t\t\t\t//if (pos > f.expr.pos.min && pos < f.expr.pos.max) \n// \t\t\t\t\t//{\n// \t\t\t\t\t\t//if (processExpression(f.expr.expr, pos)) \n// \t\t\t\t\t\t//{\n// \t\t\t\t\t\t\t//break;\n// \t\t\t\t\t\t//}\n// \t\t\t\t\t//}\n// \t\t\t\tcase FVar(t, e):\n// \t\t\t\t\tfields.push( { name: getFieldNameAndType(type.data[i].name, t), pos: type.data[i].pos.min } );\n\t\t\t\t\t\n// \t\t\t\t\t//TPath( p : TypePath );\n// \t\t\t\t\t//TFunction( args : Array<ComplexType>, ret : ComplexType );\n// \t\t\t\t\t//TAnonymous( fields : Array<Field> );\n// \t\t\t\t\t//TParent( t : ComplexType );\n// \t\t\t\t\t//TExtend( p : Array<TypePath>, fields : Array<Field> );\n// \t\t\t\t\t//TOptional( t : ComplexType );\n\t\t\t\t\t\n\t\t\t\t\t\n// \t\t\t\t\t//completions.push(type.data[i].name);\n// \t\t\t\t\t//trace(e);\n// \t\t\t\t\t//currentFunctionScopeType = SClass;\n// \t\t\t\tcase FProp(get, set, t, e):\n// \t\t\t\t\tfields.push({name: type.data[i].name, pos: type.data[i].pos.min});\n// \t\t\t\t\t//completions.push(type.data[i].name);\n// \t\t\t\t\t//currentFunctionScopeType = SClass;\n// \t\t\t}\n// \t\t}\n\t\t\n\t\treturn typeDefFields;\n\t}\n\t\n\tfunction getFieldType(t:Null<ComplexType>):String \n\t{\n\t\tvar name:String = null;\n\t\t\n\t\tif (t != null)\n\t\t{\n\t\t\tswitch (t) \n\t\t\t{\n\t\t\t\tcase TPath(p):\n\t\t\t\t\tname = p.name;\n\t\t\t\tcase TFunction(args, ret):\n\t\t\t\tcase TAnonymous(fields):\n\t\t\t\tcase TParent(t):\n\t\t\t\tcase TExtend(p, fields):\n\t\t\t\tcase TOptional(t):\t\n\t\t\t}    \n\t\t}\n\t\t\n\t\treturn name;\n\t}\n\t\n\tfunction getFieldNameAndType(name:String, type:Null<ComplexType>):String\n\t{\n\t\tvar nameAndType:String = name;\n\t\t\n\t\tvar fieldType:String = getFieldType(type);\n\t\t\n\t\tif (fieldType != null) \n\t\t{\n\t\t\tnameAndType += \":\" + fieldType;\n\t\t}\n\t\t\n\t\treturn nameAndType;\n\t}\n}","package parser;\nimport CodeMirror.Pos;\nimport cm.Editor;\n\n/**\n* @author \n */\n\ntypedef VariableData = {\n\tvar name:String;\n\t@:optional var type:String;\n\tvar pos:{pos:Int, len:Int};\n}\n\n//Regex for parsing imports ported from haxe-sublime-bundle\n//https://github.com/clemos/haxe-sublime-bundle/blob/master/HaxeHelper.py#L21\nclass RegexParser\n{\n    public static function getFileImportsList(data:String)\n    {\n        var fileImports:Array<String> = [];\n        \n        var ereg = ~/^[ \\t]*import ([a-z0-9._*]+);$/gim;\n\t\t\n        ereg.map(data, function (ereg)\n                 {\n                     fileImports.push(ereg.matched(1));\n                     return \"\";\n                 });\n        \n        return fileImports;\n    }\n    \n    public static function getFilePackage(data:String)\n    {\n        var filePackage:String = null;\n        var pos:Int = null;\n        \n        var ereg = ~/package *([^;]*);$/m;\n        \n        if (ereg.match(data))\n        {\n            filePackage = StringTools.trim(ereg.matched(1));\n            pos = ereg.matchedPos().pos;\n        }\n        \n        return {filePackage: filePackage, pos: pos};\n    }\n\t\n    public static function getTypeDeclarations(data:String)\n    {\n        var typeDeclarations:Array<{type:String, name:String, ?opaqueType:String}> = [];\n        \n        var ereg = ~/(class|typedef|enum|typedef|abstract) +([A-Z][a-zA-Z0-9_]*) *(<[a-zA-Z0-9_,]+>)?/gm;\n        \n        ereg.map(data, function (ereg2)\n                {\n                    var typeDeclaration = {type: ereg2.matched(1), name: ereg2.matched(2)};\n                    typeDeclarations.push(typeDeclaration);\n                    return \"\";\n                });\n            \n       \treturn typeDeclarations;\n    }\n    \n    public static function getFunctionDeclarations(data:String)\n    {\n        var functionDeclarations:Array<{name:String, ?params:Array<String>}> = [];\n        \n        var eregFunction = ~/function +([^;\\.\\(\\) ]*)/gi;\n        var eregFunctionWithParameters = ~/function *([a-zA-Z0-9_]*) *\\(([^\\)]*)/gm;\n        var eregParamDefault = ~/(= *\"*[^\"]*\")/gm;\n        \n        eregFunctionWithParameters.map(data, function (ereg2:EReg)\n                        {\n                            var name:String = ereg2.matched(1);\n                            \n                            if (name != null)\n                            {\n\t\t\t\t\t\t\t\tif (name != \"new\")\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar params = null;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar str = ereg2.matched(2);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (str != null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tparams = str.split(\",\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tfunctionDeclarations.push({name: name, params: params});\n\t\t\t\t\t\t\t\t}\n                            }\n                            \n                            return \"\";\n                        });\n        \n        return functionDeclarations;\n    }\n\n    public static function getVariableDeclarations(data:String):Array<VariableData>\n    {\n\t\tvar variableDeclarations:Array<VariableData> = [];\n        \n        var eregVariables = ~/var +([a-z_0-9]+):?([^=;]+)?/gi;\n\t\t\t//~/var +([^:;\\( ]*)/gi;\n        \n        eregVariables.map(data, function(ereg2:EReg)\n                         {\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t var pos = ereg2.matchedPos();\n\t\t\t\t\t\t\t var index = pos.pos + pos.len;\n\t\t\t\t\t\t\t \n// \t\t\t\t\t\t\t var tokenType = cm.getTokenAt(cm.posFromIndex(index)).type;\t\t\t\t\t\t\t \n// \t\t\t\t\t\t\t if (true)\n//  \t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t var name = ereg2.matched(1);\n\t\t\t\t\t\t\t\t var type = ereg2.matched(2);\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t \tvar varDecl = Lambda.find(variableDeclarations, function (varDecl1:VariableData)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\treturn varDecl1.name == name;\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (varDecl == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t var varDecl1:VariableData = {name: name, pos: pos};\n\n\t\t\t\t\t\t\t\t\t if (type != null)\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t type = StringTools.trim(type);\n\n\t\t\t\t\t\t\t\t\t\t if (type != \"\")\n\t\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\tvarDecl1.type = type;\t \n\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t }\n\n\t\t\t\t\t\t\t\t\t variableDeclarations.push(varDecl1);\n\t\t\t\t\t\t\t\t}\n//  \t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t \n                             return \"\"; \n                         });\n\t\t\n        return variableDeclarations;\n    }\n\t\n\tpublic static function getClassDeclarations(data:String)\n\t{\n\t\tvar classDeclarations = [];\n\t\t\n\t\tvar eregClass = ~/class[\\t ]+([a-z_0-9]+)[^;\\n]+\\n?\\{/gi;\n\t\t\n\t\teregClass.map(data, function (ereg)\n\t\t\t\t\t {\n\t\t\t\t\t\tvar pos = ereg.matchedPos();\n\t\t\t\t\t\tclassDeclarations.push({name: ereg.matched(1), pos: pos});\n\t\t\t\t\t\treturn \"\"; \n\t\t\t\t\t });\n\t\t\n\t\treturn classDeclarations;\n\t}\n\t\n\tpublic static function getFunctionParameters(data:String, pos:Pos)\n\t{\n\t\tvar functionDeclarations = [];\n\t\tvar functionParams = [];\n\t\t\n\t\tvar eregFunction = ~/[public|private|static|inline|macro\\t ]* function[\\t ]+([^;\\.\\(\\) ]+)\\((.+)\\)[^;\\.{]+\\{/gi;\n\t\t\n\t\teregFunction.map(data, function (ereg)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfunctionDeclarations.push({name: ereg.matched(1), params: ereg.matched(2).split(\",\"), pos: ereg.matchedPos()});\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t});\n\t\t\n\t\tvar currentFunctionDeclaration = null;\n\t\t\n\t\tfor (item in functionDeclarations)\n\t\t{\n\t\t\tif (Editor.editor.indexFromPos(pos) < item.pos.pos + item.pos.len)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\n\t\t\tcurrentFunctionDeclaration = item;\n\t\t}\n\t\n\t\tif (currentFunctionDeclaration != null)\n\t\t{\n\t\t\tvar ereg = ~/([a-z_0-9]+):?([^=;]+)?/gi;\n\t\t\t\n\t\t\tfor (param in currentFunctionDeclaration.params)\n\t\t\t{\n\t\t\t\tif (ereg.match(param))\n\t\t\t\t{\n\t\t\t\t\tfunctionParams.push({name: ereg.matched(1), type: ereg.matched(2)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn functionParams;\n\t}\n\n\n}","package pluginloader;\nimport js.node.ChildProcess;\nimport js.node.fs.Stats;\nimport js.node.Fs;\nimport js.node.Path;\nimport haxe.Template;\nimport haxe.ds.StringMap;\nimport haxe.Serializer;\nimport haxe.Timer;\nimport haxe.Unserializer;\nimport js.Browser;\nimport js.html.Element;\nimport js.html.TextAreaElement;\n\n/**\n * ...\n * @author \n */\n\ntypedef PluginDependenciesData =\n{\n\tvar name:String;\n\tvar plugins:Array<String>;\n\tvar onLoaded:Void->Void;\n\tvar callOnLoadWhenAtLeastOnePluginLoaded:Bool;\n}\n \nclass PluginManager\n{\n\tpublic var plugins:Array<String> = new Array();\n\tpublic var pathToPlugins:StringMap<String> = new StringMap();\n\tpublic var inactivePlugins:Array<String> = [];\n\t\n\tpublic var requestedPluginsData:Array<PluginDependenciesData> = new Array();\n\t\n\tpublic var pluginsMTime:StringMap<Int> = new StringMap();\n\t\n\tpublic var firstRun:Bool = false;\n\t\n\tpublic var pluginsTestingData:String = \"  - cd plugins\";\n\t\n\tstatic var instance:PluginManager = null;\n\t\n\tpublic function new()\n\t{\n\t\t\t\n\t}\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new PluginManager();\n\t\t}\n\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function loadPlugins(?compile:Bool = true):Void\n\t{\n\t\tvar pathToPluginsFolder:String = \"plugins\";\n\t\t\n\t\tif (!Fs.existsSync(pathToPluginsFolder)) \n\t\t{\n\t\t\tFs.mkdirSync(pathToPluginsFolder);\n\t\t}\n\t\t\n\t\tvar pathToPluginsMTime:String = \"pluginsMTime.dat\";\n\t\t\n\t\tvar args:Array<String>;\n\t\t\n\t\tif (Fs.existsSync(pathToPluginsMTime))\n\t\t{\n// \t\t\tvar options:NodeFsFileOptions = { };\n// \t\t\toptions.encoding = \"utf8\";\n\t\t\tvar data:String = Fs.readFileSync(pathToPluginsMTime, \"utf8\");\n\t\t\tif (data != \"\") \n\t\t\t{\n\t\t\t\tpluginsMTime = Unserializer.run(data);\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tfirstRun = true;\n\t\t}\n\t\t\n\t\treadDir(pathToPluginsFolder, \"\", function (path:String, pathToPlugin:String):Void\n\t\t{\n\t\t\tvar pluginName:String = StringTools.replace(pathToPlugin, Path.sep, \".\");\n\t\t\t\n\t\t\tvar relativePathToPlugin:String = Path.join(path, pathToPlugin);\n\t\t\t\n\t\t\t//Store path to plugin, so we can load JS and CSS scripts by specifying path relative to plugin's directory\n\t\t\tpathToPlugins.set(pluginName, relativePathToPlugin);\n\t\t\t\n\t\t\tvar absolutePathToPlugin:String = Path.resolve(relativePathToPlugin);\n\t\t\t\n\t\t\tif (firstRun)\n\t\t\t{\n\t\t\t\tpluginsMTime.set(pluginName, Std.parseInt(Std.string(Date.now().getTime())));\n\t\t\t}\n\t\t\t\n\t\t\tif (compile && (!pluginsMTime.exists(pluginName) || pluginsMTime.get(pluginName) < walk(absolutePathToPlugin)))\n\t\t\t{\t\t\t\t\n\t\t\t\t//Compile each plugin and load\n\t\t\t\tcompilePlugin(pluginName, absolutePathToPlugin, loadPlugin);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\t//Load plugin\n\t\t\t\tloadPlugin(absolutePathToPlugin);\n\t\t\t}\n\t\t});\n\t\t\n\t\tTimer.delay(function ():Void\n\t\t{\n\t\t\tif (requestedPluginsData.length > 0)\n\t\t\t{\n\t\t\t\ttrace(\"still not loaded plugins: \");\n\t\t\t\n\t\t\t\tfor (pluginData in requestedPluginsData)\n\t\t\t\t{\n\t\t\t\t\ttrace(pluginData.name + \": can't load plugin, required plugins are not found\");\n\t\t\t\t\ttrace(pluginData.plugins);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsavePluginsMTime();\n\t\t\t}\n\t\t}\n\t\t, 10000);\n\t}\n\t\n\tfunction walk(pathToPlugin:String):Int\n\t{\n\t\tvar pathToItem:String;\n\t\tvar time:Int = -1;\n\t\tvar mtime:Int;\n\t\tvar extension:String;\n\t\t\n\t\tfor (item in Fs.readdirSync(pathToPlugin))\n\t\t{\n\t\t\tpathToItem = Path.join(pathToPlugin, item);\n\t\t\t\n\t\t\tvar stat = Fs.statSync(pathToItem);\n\t\t\t\n\t\t\textension = Path.extname(pathToItem);\n\t\t\t\n\t\t\tif (stat.isFile() && (extension == \".hx\" || extension == \".hxml\"))\n\t\t\t{\n\t\t\t\tmtime = stat.mtime.getTime();\n\t\t\t\t\n\t\t\t\tif (time < mtime)\n\t\t\t\t{\n\t\t\t\t\ttime = mtime;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (stat.isDirectory()) \n\t\t\t{\n\t\t\t\tmtime = walk(pathToItem);\n\t\t\t\t\n\t\t\t\tif (time < mtime)\n\t\t\t\t{\n\t\t\t\t\ttime = mtime;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn time;\n\t}\n\t\n\tfunction readDir(path:String, pathToPlugin:String, onLoad:Dynamic):Void\n\t{\n\t\tvar pathToFolder:String;\n\t\t\n\t\tFs.readdir(Path.join(path, pathToPlugin), function (error, folders:Array<String>):Void\n\t\t{\n\t\t\tif (error != null)\n\t\t\t{\n\t\t\t\ttrace(error);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tfor (item in folders)\n\t\t\t\t{\n\t\t\t\t\tif (item != \"inactive\")\n\t\t\t\t\t{\n\t\t\t\t\t\tpathToFolder = Path.join(path, pathToPlugin, item);\n\t\t\t\t\t\n\t\t\t\t\t\tFs.stat(pathToFolder, function (error, stat:Stats)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (error != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//trace(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t{\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar pluginName:String = StringTools.replace(pathToPlugin, Path.sep, \".\");\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (stat.isDirectory())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treadDir(path, Path.join(pathToPlugin,item), onLoad);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (item == \"plugin.hxml\" && !Lambda.has(inactivePlugins, pluginName))\n\t\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t\tvar levels:String = \"\";\n\t\t\t\t\t\t\t\t\tfor (i in 0...pathToPlugin.split(\"\\\\\").length)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlevels += \"../\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tpluginsTestingData += \"\\n  - cd \" + StringTools.replace(pathToPlugin, \"\\\\\", \"/\") + \"\\n  - haxe plugin.hxml\\n  - cd \" + levels;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tonLoad(path, pathToPlugin);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tfunction loadPlugin(pathToPlugin:String):Void\n\t{\t\t\n\t\tvar pathToMain:String = Path.join(pathToPlugin, \"bin\", \"Main.js\");\n\t\t\n\t\tFs.exists(pathToMain, function (exists:Bool)\n\t\t{\n\t\t\tif (exists)\n\t\t\t{\n\t\t\t\tHIDE.loadJS(null, [pathToMain]);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\ttrace(pathToMain + \" is not found/nPlease compile \" + pathToPlugin + \" plugin\");\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic function compilePlugin(name:String, pathToPlugin:String, onSuccess:Dynamic, ?onFailed:String->Void):Void\n\t{\n\t\tvar pathToBin:String =  Path.join(pathToPlugin, \"bin\");\n\t\t\n\t\tFs.exists(pathToBin, function (exists:Bool)\n\t\t{\n\t\t\tif (exists)\n\t\t\t{\n\t\t\t\tstartPluginCompilation(name, pathToPlugin, onSuccess, onFailed);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tFs.mkdir(pathToBin, function (error)\n\t\t\t\t{\n\t\t\t\t\tstartPluginCompilation(name, pathToPlugin, onSuccess, onFailed);\n\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tfunction startPluginCompilation(name:String, pathToPlugin:String, onSuccess:Dynamic, ?onFailed:String->Void):Void\n\t{\n\t\tvar startTime:Float = Date.now().getTime();\n\t\tvar delta:Float;\n\t\t\n\t\tvar command:String = [\"haxe\", \"--cwd\", HIDE.surroundWithQuotes(pathToPlugin), \"plugin.hxml\"].join(\" \");\n\t\t\n\t\ttrace(command);\n\t\t\n\t\tvar haxeCompilerProcess:ChildProcess = ChildProcess.exec(command, { }, function (err, stdout, stderr)\n\t\t{\t\t\t\n\t\t\tif (err == null)\n\t\t\t{\n\t\t\t\tdelta = Date.now().getTime() - startTime;\n\t\t\t\t\n\t\t\t\ttrace(name + \" compilation took \" + Std.string(delta)) + \" ms\";\n\t\t\t\t\n\t\t\t\tonSuccess(pathToPlugin);\n\t\t\t\tpluginsMTime.set(name, Std.parseInt(Std.string(Date.now().getTime())));\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tvar element:Element = Browser.document.getElementById(\"plugin-compilation-console\");\n\n\t\t\t\tvar textarea:TextAreaElement;\n\t\t\t\t\n\t\t\t\tif (element == null)\n\t\t\t\t{\n\t\t\t\t\ttextarea = Browser.document.createTextAreaElement();\n\t\t\t\t\ttextarea.id = \"plugin-compilation-console\";\n\t\t\t\t\ttextarea.value = \"Plugins compile-time errors:\\n\";\n\t\t\t\t\tBrowser.document.body.appendChild(textarea);\n\t\t\t\t}\n\t\t\t\telse  \n\t\t\t\t{\n\t\t\t\t\ttextarea = cast(element, TextAreaElement);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttrace(pathToPlugin + ' stderr: ' + stderr);\n\t\t\t\t\n\t\t\t\ttextarea.value += name + \"\\n\" + stderr + \"\\n\";\n\t\t\t\ttrace(\"can't load \" + name + \" plugin, compilation failed\");\n\t\t\t\t\n\t\t\t\tvar regex:EReg = new EReg(\"haxelib install (.+) \", \"gim\");\n\t\t\t\tregex.map(stderr, function (ereg:EReg)\n\t\t\t\t{\n\t\t\t\t\ttrace(ereg);\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\tif (onFailed != null)\n\t\t\t\t{\n\t\t\t\t\tonFailed(stderr);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tfunction checkRequiredPluginsData():Void\n\t{\t\t\n\t\tif (requestedPluginsData.length > 0)\n\t\t{\n\t\t\tvar pluginData:PluginDependenciesData;\n\t\t\n\t\t\tvar j:Int = 0;\n\t\t\twhile (j < requestedPluginsData.length)\n\t\t\t{\n\t\t\t\tpluginData = requestedPluginsData[j];\n\t\t\t\t\n\t\t\t\tvar pluginsLoaded:Bool;\n\t\t\t\t\n\t\t\t\tif (pluginData.callOnLoadWhenAtLeastOnePluginLoaded == false)\n\t\t\t\t{\n\t\t\t\t\tpluginsLoaded = Lambda.foreach(pluginData.plugins, function (plugin:String):Bool\n\t\t\t\t\t{\n\t\t\t\t\t\treturn Lambda.has(plugins, plugin);\n\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tpluginsLoaded = !Lambda.foreach(pluginData.plugins, function (plugin:String):Bool\n\t\t\t\t\t{\n\t\t\t\t\t\treturn !Lambda.has(plugins, plugin);\n\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (pluginsLoaded)\n\t\t\t\t{\n\t\t\t\t\trequestedPluginsData.splice(j, 1);\n\t\t\t\t\ttrace(pluginData.name);\n\t\t\t\t\tpluginData.onLoaded();\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (Lambda.count(pathToPlugins) == plugins.length)\n\t\t{\t\t\t\n\t\t\ttrace(\"all plugins loaded\");\n\t\t\t\n\t\t\tvar delta:Float = Date.now().getTime() - Main.currentTime;\n\t\t\t\n\t\t\ttrace(\"Loading took: \" + Std.string(delta) + \" ms\");\n\t\t\t\n\t\t\tvar options = { encoding: null };\n\t\t\toptions.encoding = \"utf8\";\n\t\t\tFs.readFile(\"../.travis.yml.template\", options, function(error, data:String):Void\n\t\t\t{\n\t\t\t\tif (data != null)\n\t\t\t\t{\n\t\t\t\t\t// var updatedData:String = Mustache.render(data, {plugins: pluginsTestingData});\n\t\t\t\t\tvar updatedData:String = new Template(data).execute({plugins: pluginsTestingData});\n\n\t\t\t\t\tFs.writeFile(\"../.travis.yml\", updatedData, \"utf8\", function(error):Void\n\t\t\t\t\t{\n\t\t\t\t\t\ttrace(\".travis.yml was updated according to active plugins list\");\n\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttrace(error);\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\tsavePluginsMTime();\n\t\t}\n\t}\n\t\n\tpublic function savePluginsMTime() \n\t{\n\t\tvar pathToPluginsMTime:String = Path.join(\"..\", \"pluginsMTime.dat\");\n\t\t\t\n\t\tvar data:String = Serializer.run(pluginsMTime);\n\t\t\n\t\tFs.writeFile(pathToPluginsMTime, data, \"utf8\", function (error)\n\t\t{\n\t\t\t\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic function waitForDependentPluginsToBeLoaded(name:String, plugins:Array<String>, onLoaded:Void->Void, ?callOnLoadWhenAtLeastOnePluginLoaded:Bool = false):Void\n\t{\t\n\t\tvar data:PluginDependenciesData = { name:name, plugins:plugins, onLoaded:onLoaded, callOnLoadWhenAtLeastOnePluginLoaded:callOnLoadWhenAtLeastOnePluginLoaded };\n\t\trequestedPluginsData.push(data);\n\t\tcheckRequiredPluginsData();\n\t}\n\t\n\tpublic function notifyLoadingComplete(name:String):Void\n\t{\n\t\tplugins.push(name);\n\t\tcheckRequiredPluginsData();\n\t}\n\t\n\tpublic function compilePlugins(?onComplete:Dynamic, ?onFailed:Dynamic):Void\n\t{\n\t\tvar pluginCount:Int = Lambda.count(pathToPlugins);\n\t\tvar compiledPluginCount:Int = 0;\n\n\t\tvar relativePathToPlugin:String;\n\t\tvar absolutePathToPlugin:String;\n\n\t\tif (pluginCount > 0) \n\t\t{\n\t\t\tfor (name in pathToPlugins.keys())\n\t\t\t{\n\t\t\t\trelativePathToPlugin = pathToPlugins.get(name);\n\t\t\t\tabsolutePathToPlugin = Path.resolve(relativePathToPlugin);\n\n\t\t\t\tcompilePlugin(name, absolutePathToPlugin, function ():Void\n\t\t\t\t{\n\t\t\t\t\tcompiledPluginCount++;\n\n\t\t\t\t\tif (compiledPluginCount == pluginCount)\n\t\t\t\t\t{\n\t\t\t\t\t\tonComplete();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t, onFailed);\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tonComplete();\n\t\t}\n\t}\n}","package projectaccess;\nimport CodeMirror.Pos;\n\n/**\n * ...\n * @author AS3Boyan\n */\n \ntypedef TargetData = {\n\t@:optional var pathToHxml:String;\n\t@:optional var runActionType:Int;\n\t@:optional var runActionText:String;\n} \n\t\ntypedef FileData = {\n\t@:optional var path:String;\n\t@:optional var foldedRegions:Array<Pos>;\n\t@:optional var activeLine:Int;\n\t@:optional var useTabs:Bool;\n\t@:optional var indentSize:Int;\n}\n \nclass Project\n{\n\tinline public static var HAXE:Int = 0;\n\tinline public static var OPENFL:Int = 1;\n\tinline public static var HXML:Int = 2;\n\t\n\tinline public static var FLASH:Int = 0;\n\tinline public static var JAVASCRIPT:Int = 1;\n\tinline public static var NEKO:Int = 2;\n\tinline public static var PHP:Int = 3;\n\tinline public static var CPP:Int = 4;\n\tinline public static var JAVA:Int = 5;\n\tinline public static var CSHARP:Int = 6;\n\tinline public static var PYTHON:Int = 7;\n\t\n\tinline public static var URL:Int = 0;\n\tinline public static var FILE:Int = 1;\n\tinline public static var COMMAND:Int = 2;\n\t//inline public static var WEBSERVER:Int = 3;\n\t//inline public static var URL_IN_HIDE:Int = 4;\n\t\n\tpublic var type:Int;\n\tpublic var target:Int;\n\t\n\tpublic var name:String;\n\tpublic var main:String;\n\tpublic var projectPackage:String;\n\tpublic var company:String;\n\tpublic var license:String;\n\tpublic var url:String;\n\t\n\tpublic var targetData:Array<TargetData>;\n\t\n\tpublic var files:Array<FileData>;\n\tpublic var activeFile:String;\n\t\n\tpublic var openFLTarget:String;\n\tpublic var openFLBuildMode:String;\n\t\n\tpublic var runActionType:Int;\n\tpublic var runActionText:String;\n\tpublic var buildActionCommand:String;\n\t\n\tpublic var hiddenItems:Array<String>;\n\tpublic var showHiddenItems:Bool;\n\t\n\tpublic function new() \n\t{\n\t\ttargetData = [];\n\t\tfiles = [];\n\t\topenFLBuildMode = \"Debug\";\n\t\t\n\t\thiddenItems = [];\n\t\tshowHiddenItems = false;\n\t}\t\n}","package projectaccess;\nimport js.node.Fs;\nimport js.node.Path;\nimport js.atomshell.browser.BrowserWindow;\nimport cm.Editor;\nimport tabmanager.TabManager;\nimport core.Helper;\nimport haxe.Json;\nimport js.Browser;\nimport js.Node;\nimport projectaccess.Project.TargetData;\nimport projectaccess.Project.FileData;\nimport tjson.TJSON;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass ProjectAccess\n{\n\tpublic static var currentProject:Project = new Project();\n\t\n\tpublic static var path:String;\n\t\n\tpublic static function registerSaveOnCloseListener():Void\n\t{\n\t\tvar window = BrowserWindow.getAllWindows()[0];\n\t\t\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n\t\twindow.on(\"close\", function ():Void \n\t\t{\n\t\t\tif (currentProject != null && tabManagerInstance.getCurrentDocumentPath() != null)\n\t\t\t{\n\t\t\t\tEditor.saveFoldedRegions();\n\t\t\t}\n\t\t\t\n\t\t\tsave(null, true);\n\t\t\twindow.close();\n\t\t\t\n\t\t});\n\t}\n\t\n\tpublic static function save(?onComplete:Dynamic, ?sync:Bool = false):Void\n\t{\n\t\tif (ProjectAccess.path != null)\n\t\t{\n\t\t\tEditor.saveFoldedRegions();\n\t\t\t\n\t\t\tvar pathToProjectHide:String = Path.join(ProjectAccess.path, \"project.hide\");\n\t\t\t\n\t\t\tvar data:String = TJSON.encode(ProjectAccess.currentProject, 'fancy');\n\t\t\t\n\t\t\tif (sync) \n\t\t\t{\n\t\t\t\tFs.writeFileSync(pathToProjectHide, data, \"utf8\");\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tHelper.debounce(\"saveProject\", function ():Void \n\t\t\t\t{\n\t\t\t\t\tFs.writeFile(pathToProjectHide, data, \"utf8\", function (error)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (onComplete != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonComplete();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}, 250);\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttrace(\"project path is null\");\n\t\t}\n\t}\n\t\n\tpublic static function load(path:String, ?onComplete:Dynamic):Void\n\t{\n\t\t//trace(js.Node.parse());\n\t}\n\t\n\tpublic static function isItemInIgnoreList(path:String):Bool\n\t{        \n\t\tvar ignore:Bool = false;\n        \n\t\tif (ProjectAccess.path != null && !ProjectAccess.currentProject.showHiddenItems) \n\t\t{\n\t\t\tvar relativePath:String = Path.relative(ProjectAccess.path, path);\n\t\t\t\n\t\t\tif (ProjectAccess.currentProject.hiddenItems.indexOf(relativePath) != -1) \n\t\t\t{\n\t\t\t\tignore = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn ignore;\n\t}\n\t\n\tpublic static function isItemHidden(path:String)\n\t{\n\t\tvar relativePath:String = Path.relative(ProjectAccess.path, path);\n\t\treturn ProjectAccess.currentProject.hiddenItems.indexOf(relativePath) != -1;\n\t}\n\t\n\tpublic static function hideItem(path:String)\n\t{\n\t\tvar relativePath:String = Path.relative(ProjectAccess.path, path);\n\t\tProjectAccess.currentProject.hiddenItems.push(relativePath);\n\t}\n\t\n\tpublic static function unhideItem(path:String)\n\t{\n\t\tvar relativePath:String = Path.relative(ProjectAccess.path, path);\n\t\tProjectAccess.currentProject.hiddenItems.push(relativePath);\n\t}\n\t\n\tpublic static function getPathToHxml():String\n\t{\n\t\tvar pathToHxml:String = null;\n\t\t\t\t\t\n\t\tvar project = ProjectAccess.currentProject;\n\t\t\n\t\tswitch (project.type) \n\t\t{\n\t\t\tcase Project.HAXE:\n\t\t\t\tvar targetData:TargetData = project.targetData[project.target];\n\t\t\t\tpathToHxml = targetData.pathToHxml;\n\t\t\tcase Project.HXML:\n\t\t\t\tpathToHxml = project.main;\n\t\t\tdefault:\n\t\t}\n\t\t\n\t\treturn pathToHxml;\n\t}\n\t\n\tpublic static function getFileByPath(path:String)\n\t{\n\t\tvar selectedFile = null;\n\t\t\n\t\tif (ProjectAccess.path != null)\n\t\t{\n\t\t\tvar relativePath:String = Path.relative(ProjectAccess.path, path);\n\t\t\n\t\t\tvar project = ProjectAccess.currentProject;\n\t\t\n\t\t\tselectedFile = Lambda.find(project.files, function (file:FileData)\n\t\t\t\t{\n\t\t\t\t\treturn file.path == relativePath;\n\t\t\t\t});\n\t\t}\n\t\t\n\t\treturn selectedFile;\n\t}\n}","package projectaccess;\nimport js.node.Path;\nimport js.node.Fs;\nimport bootstrap.ButtonManager;\nimport bootstrap.InputGroupButton;\nimport core.FileDialog;\nimport haxe.ds.ArraySort;\nimport js.Browser;\nimport js.html.DivElement;\nimport js.html.InputElement;\nimport js.html.OptionElement;\nimport js.html.ParagraphElement;\nimport js.html.SelectElement;\nimport js.html.TextAreaElement;\nimport js.Node;\nimport parser.ClasspathWalker;\nimport projectaccess.Project.TargetData;\nimport tabmanager.TabManager;\nimport watchers.LocaleWatcher;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass ProjectOptions\n{\t\n\tpublic var page:DivElement;\n\t\n\t//Select element(ComboBox-like) for project target selection\n\tvar projectTargetList:SelectElement;\n\tvar projectTargetText:ParagraphElement;\n\t\n\t//OpenFL specific targets\n\tvar openFLTargetList:SelectElement;\n\tvar openFLTargetText:ParagraphElement;\n\tvar openFLTargets:Array<String>;\n\tvar openFLBuildModeList:SelectElement;\n\tvar openFLBuildModeText:ParagraphElement;\n\tvar buildModes:Array<String>;\n\t\n\t//Build action(currently only shown for OpenFL projects)\n\tvar buildActionDescription:ParagraphElement;\n\tvar buildActionTextArea:TextAreaElement;\n\t\n\t//Run action type and command/file/url\n\tvar actionTextArea:TextAreaElement;\n\tvar runActionList:SelectElement;\n\tvar runActionTextAreaDescription:ParagraphElement;\n\tvar runActionDescription:ParagraphElement;\n\t\n\t//Multiple Hxml-based projects(Project.HAXE)\n\tvar pathToHxmlDescription:ParagraphElement;\n\tvar inputGroupButton:bootstrap.InputGroupButton;\n\tvar pathToHxmlInput:InputElement;\n\t\n\tstatic var instance:ProjectOptions;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new ProjectOptions();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function create():Void\n\t{\n\t\tpage = Browser.document.createDivElement();\n\t\t\n\t\tcreateOptionsForMultipleHxmlProjects();\n\t\t\n\t\tprojectTargetText = Browser.document.createParagraphElement();\n\t\tprojectTargetText.textContent = LocaleWatcher.getStringSync(\"Project target:\");\n\t\tprojectTargetText.setAttribute(\"localeString\", \"Project target:\");\n\t\tprojectTargetText.className = \"custom-font-size\";\n\t\tpage.appendChild(projectTargetText);\n\t\t\n\t\tprojectTargetList = Browser.document.createSelectElement();\n\t\tprojectTargetList.id = \"project-options-project-target\";\n\t\tprojectTargetList.className = \"custom-font-size\";\n\t\tprojectTargetList.style.width = \"100%\";\n\t\t\n\t\topenFLTargetList = Browser.document.createSelectElement();\n\t\topenFLTargetList.id = \"project-options-openfl-target\";\n\t\topenFLTargetList.className = \"custom-font-size\";\n\t\topenFLTargetList.style.width = \"100%\";\n\t\t\n\t\topenFLTargetText = Browser.document.createParagraphElement();\n\t\topenFLTargetText.textContent = LocaleWatcher.getStringSync(\"OpenFL target:\");\n\t\topenFLTargetText.setAttribute(\"localeString\", \"OpenFL target:\");\n\t\topenFLTargetText.className = \"custom-font-size\";\n\t\t\n\t\topenFLBuildModeList = Browser.document.createSelectElement();\n\t\topenFLBuildModeList.id = \"project-options-openfl-build-mode\";\n\t\topenFLBuildModeList.className = \"custom-font-size\";\n\t\topenFLBuildModeList.style.width = \"100%\";\n\t\t\n\t\topenFLBuildModeText = Browser.document.createParagraphElement();\n\t\topenFLBuildModeText.textContent = LocaleWatcher.getStringSync(\"Build mode:\");\n\t\topenFLBuildModeText.setAttribute(\"localeString\", \"Build mode:\");\n\t\topenFLBuildModeText.className = \"custom-font-size\";\n\t\t\n\t\tfor (target in [\"Flash\", \"JavaScript\", \"Neko\", \"OpenFL\", \"PHP\", \"C++\", \"Java\", \"C#\", \"Python\"])\n\t\t{\n\t\t\tprojectTargetList.appendChild(createListItem(target));\n\t\t}\n\t\t\t\t\t\n\t\t//projectTargetList.disabled = true;\n\t\tprojectTargetList.onchange = function (e):Void \n\t\t{\n\t\t\tvar project = ProjectAccess.currentProject;\n\t\t\t\n\t\t\tswitch (projectTargetList.value) \n\t\t\t{\n\t\t\t\tcase \"Flash\":\n\t\t\t\t\tproject.target = Project.FLASH;\n\t\t\t\tcase \"JavaScript\":\n\t\t\t\t\tproject.target = Project.JAVASCRIPT;\n\t\t\t\tcase \"Neko\":\n\t\t\t\t\tproject.target = Project.NEKO;\n\t\t\t\tcase \"OpenFL\":\n\t\t\t\t\tproject.target = Project.OPENFL;\n\t\t\t\tcase \"PHP\":\n\t\t\t\t\tproject.target = Project.PHP;\n\t\t\t\tcase \"C++\":\n\t\t\t\t\tproject.target = Project.CPP;\n\t\t\t\tcase \"Java\":\n\t\t\t\t\tproject.target = Project.JAVA;\n\t\t\t\tcase \"C#\":\n\t\t\t\t\tproject.target = Project.CSHARP;\n\t\t\t\tcase \"Python\":\n\t\t\t\t\tproject.target = Project.PYTHON;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Unknown target\";\n\t\t\t}\n\t\t\t\n\t\t\tvar classpathWalker = ClasspathWalker.get();\n\t\t\t\n\t\t\tclasspathWalker.parseProjectArguments();\n\t\t\t\n\t\t\tupdateProjectOptions();\n\t\t};\n\t\t\n\t\topenFLTargets = [\"flash\", \"html5\", \"neko\", \"android\", \"blackberry\", \"emscripten\", \"webos\", \"tizen\", \"ios\", \"windows\", \"mac\", \"linux\"];\n\t\t\n\t\tfor (target in openFLTargets)\n\t\t{\n\t\t\topenFLTargetList.appendChild(createListItem(target));\n\t\t}\n\t\t\n\t\topenFLTargetList.onchange = function (_)\n\t\t{\n\t\t\tvar project = ProjectAccess.currentProject;\n\t\t\t\n\t\t\tupdateOpenFLBuildCommand();\n\t\t\t\n\t\t\tproject.runActionType = Project.COMMAND;\n\t\t\tproject.runActionText = [\"haxelib\", \"run\", \"lime\", \"run\", '\"%path%\"', project.openFLTarget].join(\" \");\n\t\t\t\n\t\t\tvar classpathWalker = ClasspathWalker.get();\n\t\t\t\n\t\t\tclasspathWalker.parseProjectArguments();\n\t\t\t\n\t\t\tupdateProjectOptions();\n\t\t};\n\t\n\t\tbuildModes = [\"Debug\", \"Release\"];\t\n\n\t\tfor (mode in buildModes)\n\t\t{\n\t\t\topenFLBuildModeList.appendChild(createListItem(mode));\n\t\t}\n\t\t\t\n\t\topenFLBuildModeList.onchange = function (_)\n\t\t{\n\t\t\tvar mode = buildModes[openFLBuildModeList.selectedIndex];\n\t\t\t\n\t\t\tvar project = ProjectAccess.currentProject;\n\t\t\t\n\t\t\tproject.openFLBuildMode = mode;\n\t\t\t\n\t\t\tupdateOpenFLBuildCommand();\n\t\t};\n\t\t\n\t\trunActionDescription = Browser.document.createParagraphElement();\n\t\trunActionDescription.className = \"custom-font-size\";\n\t\trunActionDescription.textContent = LocaleWatcher.getStringSync(\"Run action:\");\n\t\trunActionDescription.setAttribute(\"localeString\", \"Run action:\");\n\t\t\n\t\trunActionTextAreaDescription = Browser.document.createParagraphElement();\n\t\trunActionTextAreaDescription.textContent = LocaleWatcher.getStringSync(\"URL:\");\n\t\trunActionTextAreaDescription.setAttribute(\"localeString\", \"URL:\");\n\t\trunActionTextAreaDescription.className = \"custom-font-size\";\n\t\t\n\t\tvar actions:Array<String> = [\"Open URL\", \"Open File\", \"Run command\"];\n\t\t\n\t\trunActionList = Browser.document.createSelectElement();\n\t\trunActionList.style.width = \"100%\";\n\t\t\n\t\trunActionList.onchange = update;\n\t\t\n\t\tfor (action in actions)\n\t\t{\n\t\t\trunActionList.appendChild(createListItem(action));\n\t\t}\n\t\t\n\t\tactionTextArea = Browser.document.createTextAreaElement();\n\t\tactionTextArea.id = \"project-options-action-textarea\";\n\t\tactionTextArea.className = \"custom-font-size\";\n\t\tactionTextArea.onchange = function (e)\n\t\t{\t\n\t\t\tvar project = ProjectAccess.currentProject;\n\t\t\t\n\t\t\tif (project.type == Project.HAXE) \n\t\t\t{\n\t\t\t\tvar targetData:TargetData = project.targetData[project.target];\n\t\t\t\ttargetData.runActionText = actionTextArea.value;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tproject.runActionText = actionTextArea.value;\n\t\t\t}\n\t\t\t\n\t\t\tupdate(null);\n\t\t};\n\t\t\n\t\tbuildActionDescription = Browser.document.createParagraphElement();\n\t\tbuildActionDescription.className = \"custom-font-size\";\n\t\tbuildActionDescription.textContent = LocaleWatcher.getStringSync(\"Build command:\");\n\t\tbuildActionDescription.setAttribute(\"localeString\", \"Build command:\");\n\t\t\n\t\tbuildActionTextArea = Browser.document.createTextAreaElement();\n\t\tbuildActionTextArea.id = \"project-options-build-action-textarea\";\n\t\tbuildActionTextArea.className = \"custom-font-size\";\n\t\tbuildActionTextArea.onchange = function (e)\n\t\t{\n\t\t\tProjectAccess.currentProject.buildActionCommand = buildActionTextArea.value;\n\t\t\tProjectAccess.save();\n\t\t};\n\t\t\n\t\tpage.appendChild(projectTargetList);\n\t\tpage.appendChild(buildActionDescription);\n\t\tpage.appendChild(buildActionTextArea);\n\t\tpage.appendChild(pathToHxmlDescription);\n\t\tpage.appendChild(inputGroupButton.getElement());\n\t\tpage.appendChild(openFLTargetText);\n\t\tpage.appendChild(openFLTargetList);\n\t\tpage.appendChild(openFLBuildModeText);\n\t\tpage.appendChild(openFLBuildModeList);\n\t\tpage.appendChild(runActionDescription);\n\t\tpage.appendChild(runActionList);\n\t\tpage.appendChild(runActionTextAreaDescription);\n\t\tpage.appendChild(actionTextArea);\n\t}\n\t\n\tpublic function updateOpenFLBuildCommand()\n\t{\n\t\tvar project = ProjectAccess.currentProject;\n\n\t\tproject.openFLTarget = openFLTargets[openFLTargetList.selectedIndex];\n\n\t\tvar buildParams:Array<String> = [\"haxelib\", \"run\", \"lime\", \"build\", '\"%path%\"', project.openFLTarget];\n\n\t\tif (project.openFLBuildMode == \"Debug\")\n\t\t{\n\t\t\tbuildParams.push(\"-debug\");\n\n\t\t\tif (project.openFLTarget == \"flash\")\n\t\t\t{\n\t\t\t\tbuildParams.push(\"-Dfdb\");\n\t\t\t}\n\t\t}\n\n\t\tswitch (project.openFLTarget) \n\t\t{\n\t\t\tcase \"flash\", \"html5\", \"neko\":\n\t\t\t\tbuildParams = buildParams.concat([\"--connect\", \"5000\"]);\n\t\t\tdefault:\n\n\t\t}\n\n\t\tproject.buildActionCommand = buildParams.join(\" \");\n\t}\n\n\t\t\n\tfunction createOptionsForMultipleHxmlProjects() \n\t{\n\t\tpathToHxmlDescription = Browser.document.createParagraphElement();\n\t\tpathToHxmlDescription.textContent = LocaleWatcher.getStringSync(\"Path to Hxml:\");\n\t\tpathToHxmlDescription.setAttribute(\"localeString\", \"Path to Hxml:\");\n\t\tpathToHxmlDescription.className = \"custom-font-size\";\n\t\t\n\t\tinputGroupButton = new InputGroupButton(\"Browse...\");\n\t\t\n\t\tpathToHxmlInput = inputGroupButton.getInput();\n\t\t\n\t\tpathToHxmlInput.onchange = function (e):Void \n\t\t{\n\t\t\tif (Fs.existsSync(pathToHxmlInput.value)) \n\t\t\t{\n\t\t\t\tvar project = ProjectAccess.currentProject;\n\t\t\t\tproject.targetData[project.target].pathToHxml = pathToHxmlInput.value;\n\t\t\t\tProjectAccess.save();\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tAlertify.error(pathToHxmlInput.value + \" is not found\");\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar browseButton = inputGroupButton.getButton();\n\t\t\n\t\tbrowseButton.onclick = function (e):Void \n\t\t{\n\t\t\tFileDialog.openFile(function (path:String):Void \n\t\t\t{\n\t\t\t\tpathToHxmlInput.value = path;\n\t\t\t\t\n\t\t\t\tvar project = ProjectAccess.currentProject;\n\t\t\t\tproject.targetData[project.target].pathToHxml = pathToHxmlInput.value;\n\t\t\t\tProjectAccess.save();\n\t\t\t}\n\t\t\t, \".hxml\");\n\t\t};\n\t\t\n\t\tvar buttonManager = ButtonManager.get();\n\t\t\n\t\tvar editButton = buttonManager.createButton(\"Edit\", false, true);\n\t\teditButton.onclick = function (e):Void \n\t\t{\n\t\t\tvar tabManagerInstance = TabManager.get();\n\t\t\ttabManagerInstance.openFileInNewTab(Path.resolve(ProjectAccess.path, pathToHxmlInput.value));\n\t\t};\n\t\t\n\t\tinputGroupButton.getSpan().appendChild(editButton);\n\t}\n\t\n\tfunction update(_):Void\n\t{\n\t\tvar project = ProjectAccess.currentProject;\n\t\t\n\t\tif (project.type == Project.OPENFL)\n\t\t{\n\t\t\topenFLTargetList.style.display = \"\";\n\t\t\topenFLTargetText.style.display = \"\";\n\t\t\topenFLBuildModeList.style.display = \"\";\n\t\t\topenFLBuildModeText.style.display = \"\";\n\t\t\t//textarea.style.display = \"none\";\n\t\t\t//projectOptionsText.style.display = \"none\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\topenFLTargetList.style.display = \"none\";\n\t\t\topenFLTargetText.style.display = \"none\";\n\t\t\topenFLBuildModeList.style.display = \"none\";\n\t\t\topenFLBuildModeText.style.display = \"none\";\n\t\t\t//textarea.style.display = \"\";\n\t\t\t//projectOptionsText.style.display = \"\";\n\t\t}\n\t\t\n\t\tif (project.type == Project.HXML) \n\t\t{\n// \t\t\topenFLTargetList.style.display = \"none\";\n// \t\t\topenFLTargetText.style.display = \"none\";\n\t\t\t//textarea.style.display = \"none\";\n\t\t\t//projectOptionsText.style.display = \"none\";\n\t\t\t\n\t\t\tbuildActionTextArea.style.display = \"none\";\n\t\t\tbuildActionDescription.style.display = \"none\";\n\t\t\t//runActionTextAreaDescription.style.display = \"none\";\n\t\t\t//runActionList.style.display = \"none\";\n\t\t\t//runActionDescription.style.display = \"none\";\n\t\t\tprojectTargetList.style.display = \"none\";\n\t\t\tprojectTargetText.style.display = \"none\";\n\t\t\t//actionTextArea.style.display = \"none\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tbuildActionTextArea.style.display = \"none\";\n\t\t\tbuildActionDescription.style.display = \"none\";\n\t\t\trunActionTextAreaDescription.style.display = \"\";\n\t\t\trunActionList.style.display = \"\";\n\t\t\trunActionDescription.style.display = \"\";\n\t\t\tprojectTargetList.style.display = \"\";\n\t\t\tprojectTargetText.style.display = \"\";\n\t\t\tactionTextArea.style.display = \"\";\n\t\t}\n\t\t\n\t\tif (project.type == Project.HAXE) \n\t\t{\n\t\t\tpathToHxmlDescription.style.display = \"\";\n\t\t\tinputGroupButton.getElement().style.display = \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpathToHxmlDescription.style.display = \"none\";\n\t\t\tinputGroupButton.getElement().style.display = \"none\";\n\t\t}\n\t\t\n\t\tvar runActionType;\n\t\t\n\t\tswitch (runActionList.selectedIndex) \n\t\t{\n\t\t\tcase 0:\n\t\t\t\trunActionTextAreaDescription.innerText = LocaleWatcher.getStringSync(\"URL: \");\n\t\t\t\trunActionType = Project.URL;\n\t\t\tcase 1:\n\t\t\t\trunActionTextAreaDescription.innerText = LocaleWatcher.getStringSync(\"Path: \");\n\t\t\t\trunActionType = Project.FILE;\n\t\t\tcase 2:\n\t\t\t\trunActionTextAreaDescription.innerText = LocaleWatcher.getStringSync(\"Command: \");\n\t\t\t\trunActionType = Project.COMMAND;\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\trunActionType = 0;\n\t\t}\n\t\t\n\t\tswitch (project.type) \n\t\t{\n\t\t\tcase Project.HAXE:\n\t\t\t\tvar targetData:TargetData = project.targetData[project.target];\n\t\t\t\ttargetData.runActionType = runActionType;\n\t\t\tdefault:\n\t\t\t\tproject.runActionType = runActionType;\n\t\t}\n\t\t\n\t\tProjectAccess.save();\n\t}\n\t\n\tpublic function updateProjectOptions():Void\n\t{\t\t\n\t\tvar project = ProjectAccess.currentProject;\n\t\t\n\t\tvar runActionType;\n\t\tvar runActionText;\n\t\t\n\t\tswitch (project.type) \n\t\t{\n\t\t\tcase Project.HAXE:\n\t\t\t\tvar targetData:TargetData = project.targetData[project.target];\n\t\t\t\t\n\t\t\t\trunActionType = targetData.runActionType;\n\t\t\t\trunActionText = targetData.runActionText;\n\t\t\t\t\n\t\t\t\tpathToHxmlInput.value = targetData.pathToHxml;\n\t\t\tdefault:\n\t\t\t\trunActionType = project.runActionType;\n\t\t\t\trunActionText = project.runActionText;\n\t\t}\n\t\t\n\t\tif (project.type == Project.OPENFL)\n\t\t{\n\t\t\tprojectTargetList.selectedIndex = 3;\n\t\t\t\n\t\t\tvar i:Int = Lambda.indexOf(openFLTargets, project.openFLTarget);\n\t\t\tif (i != -1)\n\t\t\t{\n\t\t\t\topenFLTargetList.selectedIndex = i;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\topenFLTargetList.selectedIndex = 0;\n\t\t\t}\n\t\t\t\n\t\t\topenFLBuildModeList.selectedIndex = buildModes.indexOf(project.openFLBuildMode);\n\t\t}\n\t\telse \n\t\t{\t\t\t\n\t\t\tswitch (project.target) \n\t\t\t{\n\t\t\t\tcase Project.FLASH:\n\t\t\t\t\tprojectTargetList.selectedIndex = 0;\n\t\t\t\tcase Project.JAVASCRIPT:\n\t\t\t\t\tprojectTargetList.selectedIndex = 1;\n\t\t\t\tcase Project.NEKO:\n\t\t\t\t\tprojectTargetList.selectedIndex = 2;\n\t\t\t\tcase Project.PHP:\n\t\t\t\t\tprojectTargetList.selectedIndex = 4;\n\t\t\t\tcase Project.CPP:\n\t\t\t\t\tprojectTargetList.selectedIndex = 5;\n\t\t\t\tcase Project.JAVA:\n\t\t\t\t\tprojectTargetList.selectedIndex = 6;\n\t\t\t\tcase Project.CSHARP:\n\t\t\t\t\tprojectTargetList.selectedIndex = 7;\n\t\t\t\tcase Project.PYTHON:\n\t\t\t\t\tprojectTargetList.selectedIndex = 8;\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t//textarea.value = ProjectAccess.currentProject.args.join(\"\\n\");\n\t\t}\n\t\t\n\t\tbuildActionTextArea.value = project.buildActionCommand;\n\t\t\n\t\tswitch (runActionType) \n\t\t{\n\t\t\tcase Project.URL:\n\t\t\t\trunActionList.selectedIndex = 0;\n\t\t\tcase Project.FILE:\n\t\t\t\trunActionList.selectedIndex = 1;\n\t\t\tcase Project.COMMAND:\n\t\t\t\trunActionList.selectedIndex = 2;\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t\tif (runActionText == null) \n\t\t{\n\t\t\trunActionText = \"\";\n\t\t}\n\t\tactionTextArea.value = runActionText;\n\t\t\n\t\tupdate(null);\n\t}\n\t\n\tfunction createListItem(text:String):OptionElement\n\t{\t\t\n\t\tvar option:OptionElement = Browser.document.createOptionElement();\n\t\toption.textContent = LocaleWatcher.getStringSync(text);\n\t\toption.value = text;\n\t\treturn option;\n\t}\n}","package tabmanager;\nimport js.atomshell.browserandwebpage.Shell;\nimport cm.CMDoc;\nimport js.Browser;\nimport js.html.AnchorElement;\nimport js.html.DivElement;\nimport js.html.LIElement;\nimport js.html.MouseEvent;\nimport js.html.UListElement;\nimport watchers.LocaleWatcher;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass ContextMenu\n{\t\n\tstatic var contextMenu:DivElement;\n\t\n\tpublic static function createContextMenu():Void\n\t{\n\t\tcontextMenu = Browser.document.createDivElement();\n\t\tcontextMenu.className = \"dropdown\";\n\t\tcontextMenu.style.position = \"absolute\";\n\t\tcontextMenu.style.display = \"none\";\n\t\t\n\t\tBrowser.document.addEventListener(\"click\", function (e:MouseEvent)\n\t\t{\n\t\t\tcontextMenu.style.display = \"none\";\n\t\t}\n\t\t);\n\t\t\n\t\tvar tabManager = TabManager.get();\n\t\t\n\t\tvar ul:UListElement = Browser.document.createUListElement();\n\t\tul.className = \"dropdown-menu\";\n\t\tul.style.display = \"block\";\n\t\t\n\t\tul.appendChild(createContextMenuItem(\"New File...\", tabManager.createFileInNewTab));\n\t\t\n\t\tul.appendChild(createDivider());\n\t\t\n\t\tul.appendChild(createContextMenuItem(\"Close\", function ()\n\t\t{\n\t\t\ttabManager.closeTab(contextMenu.getAttribute(\"path\"));\n\t\t}\n\t\t));\n\t\tul.appendChild(createContextMenuItem(\"Close All\", function ()\n\t\t{\n\t\t\ttabManager.closeAll();\n\t\t}\n\t\t));\n\t\t\n\t\tul.appendChild(createContextMenuItem(\"Close Other\", function ()\n\t\t{\n\t\t\tvar path = contextMenu.getAttribute(\"path\");\n\t\t\ttabManager.closeOthers(path);\n\t\t}\n\t\t));\n\t\t\n\t\tul.appendChild(createDivider());\n\t\t\n\t\tul.appendChild(createContextMenuItem(\"Show Item In Folder\", function ()\n\t\t{\n\t\t\tvar path = contextMenu.getAttribute(\"path\");\n\t\t\tShell.showItemInFolder(path);\n\t\t}\n\t\t));\n\t\t\n\t\tcontextMenu.appendChild(ul);\n\t\t\n\t\tBrowser.document.body.appendChild(contextMenu);\n\t}\n\t\n\tpublic static function showMenu(path:String, e:MouseEvent):Void \n\t{\n\t\tcontextMenu.setAttribute(\"path\", path);\n\t\t\n\t\tcontextMenu.style.display = \"block\";\n\t\tcontextMenu.style.left = Std.string(e.pageX) + \"px\";\n\t\tcontextMenu.style.top = Std.string(e.pageY) + \"px\";\n\t}\n\t\n\tpublic static function createContextMenuItem(text:String, onClick:Dynamic):LIElement\n\t{\n\t\tvar li:LIElement = Browser.document.createLIElement();\n\t\tli.onclick = function (e:MouseEvent):Void\n\t\t{\n\t\t\tonClick();\n\t\t};\n\t\t\n\t\tvar a:AnchorElement = Browser.document.createAnchorElement();\n\t\ta.href = \"#\";\n\t\ta.textContent = LocaleWatcher.getStringSync(text);\n\t\tli.appendChild(a);\n\t\t\n\t\treturn li;\n\t}\n\t\n\tstatic function createDivider():LIElement\n\t{\n\t\tvar li:LIElement = Browser.document.createLIElement();\n\t\tli.className = \"divider\";\n\t\treturn li;\n\t}\n}","package tabmanager;\nimport js.node.Fs;\nimport js.html.MouseEvent;\nimport js.html.Event;\nimport js.Browser;\nimport js.html.LIElement;\nimport js.html.SpanElement;\nimport js.Node;\nimport watchers.LocaleWatcher;\nimport watchers.Watcher;\n\n/**\n * ...\n * @author \n */\nclass Tab\n{\n\tpublic var name:String;\n\tpublic var path:String;\n\tpublic var doc:CodeMirror.Doc;\n\tpublic var loaded:Bool;\n\tvar li:LIElement;\n\tvar span3:SpanElement;\n\tvar watcher:Dynamic;\n\tvar ignoreNextUpdates:Int;\n\n\tpublic function new(_name:String, _path:String, _doc:CodeMirror.Doc, ?_save:Bool) \n\t{\n\t\tignoreNextUpdates = 0;\n\t\t\n\t\tname = _name;\n\t\tdoc = _doc;\n\t\tpath = _path;\n\t\tloaded = false;\n\t\t\n\t\tli = Browser.document.createLIElement();\n\t\tli.title = path;\n\t\tli.setAttribute(\"path\", path);\n\t\t\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n\t\tspan3 = Browser.document.createSpanElement();\n\t\tspan3.textContent = name + \"\\t\";\n\t\tli.addEventListener(\"click\", function (e:MouseEvent):Void \n\t\t{\n\t\t\tif (e.button != 1)\n\t\t\t{\n\t\t\t\ttabManagerInstance.selectDoc(path);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttabManagerInstance.closeTab(path);\n\t\t\t}\n\t\t}\n\t\t);\n\t\t\n\t\tli.addEventListener(\"contextmenu\", function (e):Void \n\t\t{\n\t\t\tContextMenu.showMenu(path, e);\n\t\t}\n\t\t);\n\t\t\n\t\tli.appendChild(span3);\n\t\t\n\t\tvar span:SpanElement = Browser.document.createSpanElement();\n\t\tspan.style.position = \"relative\";\n\t\tspan.style.top = \"2px\";\n\n\t\tspan.addEventListener(\"click\", function (e:Event):Void \n\t\t{\n\t\t\ttabManagerInstance.closeTab(path);\n\t\t\te.stopPropagation();\n\t\t}\n\t\t);\n\n\t\tvar span2:SpanElement = Browser.document.createSpanElement();\n\t\tspan2.className = \"glyphicon glyphicon-remove-circle\";\n\t\tspan.appendChild(span2);\n\n\t\tli.appendChild(span);\n\t\t\n\t\tif (_save) \n\t\t{\n\t\t\tsave();\n\t\t}\n\t\t\n\t\tstartWatcher();\n\t}\n\t\n\tpublic function startWatcher():Void\n\t{\n\t\twatcher = Watcher.watchFileForUpdates(path, function ():Void \n\t\t{\t\t\t\n\t\t\tif (ignoreNextUpdates <= 0) \n\t\t\t{\n\t\t\t\tdialogs.DialogManager.showReloadFileDialog(path, reloadFile);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tignoreNextUpdates--;\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n    function reloadFile()\n    {\n\t\tvar tabManagerInstance = TabManager.get();\n\t\t\n        tabManagerInstance.openFile(path, \n\t\tfunction (code:String):Void \n        {\n            doc.setValue(code);\n            doc.markClean();\n            setChanged(false);\n        }\n        );\n    }\n    \n\tpublic function setChanged(changed:Bool):Void\n\t{\n\t\tspan3.textContent = name;\n\t\t\n\t\tif (changed) \n\t\t{\n\t\t\tspan3.textContent += \"*\";\n\t\t}\n\t\t\n\t\tspan3.textContent += \"\\n\";\n\t}\n\t\n\tpublic function remove():Void\n\t{\n\t\tli.remove();\n\t\t\n\t\tif (watcher != null) \n\t\t{\n\t\t\twatcher.close();\n\t\t}\n\t}\n\t\n\tpublic function save():Void \n\t{\n\t\tignoreNextUpdates++;\n\t\t\n\t\tFs.writeFileSync(path, doc.getValue(), \"utf8\");\n\t\tdoc.markClean();\n\t\tsetChanged(false);\n\t}\n\t\n\tpublic function getElement():LIElement\n\t{\n\t\treturn li;\n\t}\n\t\n}","\npackage tabmanager;\nimport js.node.Fs.FsReadFileOpt;\nimport js.node.Fs;\nimport js.node.Path;\nimport parser.ClasspathWalker;\nimport haxe.Template;\nimport watchers.SettingsWatcher;\nimport projectaccess.Project.FileData;\nimport js.html.KeyboardEvent;\nimport js.html.InputElement;\nimport cm.Xml;\nimport core.OutlinePanel;\nimport cm.CMDoc;\nimport cm.Editor;\nimport core.FileDialog;\nimport core.HaxeLint;\nimport core.RecentProjectsList;\nimport core.Utils;\nimport core.WelcomeScreen;\nimport filetree.FileTree;\nimport haxe.ds.StringMap.StringMap;\nimport haxe.Timer;\nimport jQuery.JQuery;\nimport js.Browser;\nimport js.html.AnchorElement;\nimport js.html.DivElement;\nimport js.html.Element;\nimport js.html.LIElement;\nimport js.html.MouseEvent;\nimport js.html.SpanElement;\nimport js.html.UListElement;\nimport js.Node;\nimport projectaccess.ProjectAccess;\nimport watchers.LocaleWatcher;\n\n/**\n * ...\n * @author AS3Boyan\n */\ntypedef FileTemplate = \n{\n\t?name:String,\n\t?pack:String,\n \t?author:String,\n \t?license:String,\n \t?url:String\t\n}\n\nclass TabManager\n{\n\tpublic var tabs:UListElement;\n\tpublic var tabMap:TabMap;\n\tpublic var selectedPath:String;\n\tvar selectedIndex:Int;\n\t\n\tstatic var instance:TabManager;\n\t\n\tpublic static function get():TabManager\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new TabManager();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function new():Void\n\t{\n\t\t\n\t}\n\t\n\tpublic function load()\n\t{\n\t\ttabs = cast(Browser.document.getElementById(\"tabs\"), UListElement);\n\t\t\n\t\ttabMap = new TabMap();\n\t\t\n\t\tContextMenu.createContextMenu();\n\t\t\n\t\tvar options:Alertify.Options = { };\n\t\toptions.labels = { };\n\t\toptions.labels.ok = LocaleWatcher.getStringSync(\"Yes\");\n\t\toptions.labels.cancel = LocaleWatcher.getStringSync(\"No\");\n\t\t\n\t\tAlertify.set(options);\n\t\t\n\t\tvar indentWidthLabel = cast (Browser.document.getElementById(\"indent-width-label\"), DivElement);\n\t\tvar indentWidthInput = cast (Browser.document.getElementById(\"indent-width-input\"), InputElement);\n\t\t\n\t\tindentWidthLabel.onclick = function (e)\n\t\t\t{\n\t\t\t\tindentWidthLabel.classList.add(\"hidden\");\n                indentWidthInput.classList.remove(\"hidden\");\n\t\t\t\tindentWidthInput.focus();\n\t\t\t\t\n\t\t\t\tindentWidthInput.select();\n\t\t\t\t\n\t\t\t\tindentWidthInput.onblur = function (_)\n\t\t\t\t\t{\n\t\t\t\t\t\tindentWidthLabel.classList.remove(\"hidden\");\n                \t\tindentWidthInput.classList.add(\"hidden\");\n\n\t\t\t\t\t\t// remove all event handlers from the input field\n\t\t\t\t\t\tindentWidthInput.onblur = null;\n\t\t\t\t\t\tindentWidthInput.onkeyup = null;\n\n\t\t\t\t\t\t// restore focus to the editor\n\t\t\t\t\t\tEditor.editor.focus();\n\t\t\t\t\t\t\n\t\t\t\t\t\tsetIndentationSize(Std.parseInt(indentWidthInput.value));\t\n\t\t\t\t\t};\n\t\t\t\t\n\t\t\t\tindentWidthInput.onkeyup = function (event)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (event.keyCode == 13) \n\t\t\t\t\t\t{\n                        \tindentWidthInput.blur();\n                        }\n\t\t\t\t\t\telse if (event.keyCode == 27)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresetIndentationSettings();\n                        }\n\t\t\t\t\t};\n\t\t\t};\n\t\t\n\t\tvar indentType = Browser.document.getElementById(\"indent-type\");\n\t\t\n\t\tindentType.onclick = function (_)\n\t\t\t{\n\t\t\t\tvar selectedFile = ProjectAccess.getFileByPath(getCurrentDocumentPath());\n\t\t\t\t\n\t\t\t\tif (selectedFile != null)\n\t\t\t\t{\t\n\t\t\t\t\tselectedFile.useTabs = !selectedFile.useTabs;\n                    trace(selectedFile.useTabs);\n\t\t\t\t\tupdateIndentationSettings(selectedFile);\n\t\t\t\t\tloadIndentationSettings(Editor.editor, selectedFile);\n\t\t\t\t}\n\t\t\t}\n\t}\n\n\t\n\tfunction setIndentationSize(indentSize:Int)\n\t{\n\t\tvar selectedFile = ProjectAccess.getFileByPath(getCurrentDocumentPath());\n\t\t\t\t\n\t\tif (selectedFile != null)\n\t\t{\n\t\t\tselectedFile.indentSize = indentSize;\n\t\t\tupdateIndentationSettings(selectedFile);\n\t\t\tloadIndentationSettings(Editor.editor, selectedFile);\n\t\t}\n\t}\n\n\t\n\tfunction resetIndentationSettings()\n\t{\n\t\tvar selectedFile = ProjectAccess.getFileByPath(getCurrentDocumentPath());\n\t\t\t\t\n\t\tif (selectedFile != null)\n\t\t{\t\n\t\t\tupdateIndentationSettings(selectedFile);\n\t\t}\n\t}\n\n\t\n\tpublic function createNewTab(name:String, path:String, doc:CodeMirror.Doc, ?save:Bool = false):Void\n\t{\n\t\tvar tab = new Tab(name, path, doc, save);\n\t\ttabMap.add(tab);\n\t\t\n\t\ttabs.appendChild(tab.getElement());\n\t\t\n\t\tif (ProjectAccess.path != null) \n\t\t{\n\t\t\tvar relativePath = Path.relative(ProjectAccess.path, path);\n\t\t\tvar selectedFile = ProjectAccess.getFileByPath(path);\n\t\t\t\n\t\t\tif (selectedFile == null) \n\t\t\t{\n\t\t\t\tProjectAccess.currentProject.files.push({path: relativePath});\n\t\t\t}\n\t\t}\n\t\t\t\n\t\t\n\t\tvar recentProjectsList = RecentProjectsList.get();\n\t\trecentProjectsList.addFile(path);\n\t\t\n\t\tEditor.resize();\n\t}\n\t\n\tpublic function openFile(path:String, onComplete:String->Void)\n\t{\n\t\tvar options:FsReadFileOpt = { };\n\t\toptions.encoding = \"utf8\";\n\t\t\n\t\tFs.readFile(path, options, function (error, code:String):Void\n\t\t{\n\t\t\tif (error != null)\n\t\t\t{\n\t\t\t\ttrace(error);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tonComplete(code);\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic function openFileInNewTab(path:String, ?show:Bool = true, ?onComplete:Dynamic):Void\n\t{        \n\t\t//Fix opening same file\n\t\tif (Utils.os == Utils.WINDOWS) \n\t\t{\n\t\t\tvar ereg:EReg = ~/[a-z]:\\\\/i;\n\t\t\t\n\t\t\tif (ereg.match(path)) \n\t\t\t{\n\t\t\t\tpath = path.substr(0, 3).toLowerCase() + path.substr(3);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//path = js.Node.require('path').relative(js.Node.process.cwd(), path);\n\t\tpath = StringTools.replace(path, \"\\\\\", Path.sep); \n\t\t\n\t\tif (isAlreadyOpened(path, show))\n\t\t{\n\t\t\tif (onComplete != null) \n\t\t\t{\n\t\t\t\tonComplete();\n\t\t\t}\n            \n\t\t\treturn;\n\t\t}\n\t\t\n\t\topenFile(path, function (code:String):Void \n\t\t{\n\t\t\tif (isAlreadyOpened(path, show))\n\t\t\t{\n\t\t\t\tif (onComplete != null) \n\t\t\t\t{\n\t\t\t\t\tonComplete();\n\t\t\t\t}\n                \n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tif (code != null)\n\t\t\t{\n\t\t\t\tvar mode:String = getMode(path);\n\t\t\t\tvar name:String = Path.basename(path);\n\t\t\t\t\n\t\t\t\tvar doc = new CodeMirror.Doc(code, mode);\n\t\t\t\t\n\t\t\t\tcreateNewTab(name, path, doc);\n\t\t\t\t\n                if (show)\n                {\n                \tselectDoc(path);    \n                }\n\t\t\t\t\n\t\t\t\tcheckTabsCount();\n\t\t\t\t\n\t\t\t\tif (onComplete != null) \n\t\t\t\t{\n\t\t\t\t\tonComplete();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\ttrace(\"tab-manager: can't load file \" + path);\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tpublic function createFileInNewTab(?pathToFile:String):Void\n\t{\n\t\tvar path:String = pathToFile;\n\t\t\n\t\tif (path == null) \n\t\t{\n\t\t\tFileDialog.saveFile(function (_selectedPath:String)\n\t\t\t{\t\t\t\n\t\t\t\t//var path:String = convertPathToUnixFormat(value);\n\t\t\n\t\t\t\t//if (isAlreadyOpened(path))\n\t\t\t\t//{\n\t\t\t\t\t//return;\n\t\t\t\t//}\n\t\t\t\t\n\t\t\t\tcreateNewFile(_selectedPath);\n\t\t\t}\n\t\t\t);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tcreateNewFile(path);\n\t\t}\n\t}\n\t\n\tfunction resolvePackage(pathToFile:String, onComplete:Dynamic)\n\t{\n\t\tvar pathToProject = ProjectAccess.path;\n\n\t\tvar filePackage:String = \"\";\n\t\t\n\t\tif (pathToProject != null)\n\t\t{\n\t\t\tvar classpathWalker = ClasspathWalker.get();\n\t\t\tclasspathWalker.getProjectClasspaths(ProjectAccess.currentProject, function (classpathAndLibs)\n\t\t\t\t{\t\t\t\t\t\t\t\t\n\t\t\t\t\tvar classpaths = [];\n\n\t\t\t\t\tfor (item in classpathAndLibs.classpaths)\n\t\t\t\t\t{\n\t\t\t\t\t\t classpaths.push(item);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (item in classpathAndLibs.libs)\n\t\t\t\t\t{\n\t\t\t\t\t\t classpaths.push(item.path);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (classpath in classpaths)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (StringTools.startsWith(pathToFile, classpath))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar dirname = Path.dirname(pathToFile);\n\t\t\t\t\t\t\tvar relativePath = Path.relative(classpath, dirname);\n\t\t\t\t\t\t\tvar fullPackagePath = StringTools.replace(relativePath, Path.sep, \".\");\n\t\t\t\t\t\t\tfilePackage = fullPackagePath;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tonComplete(filePackage);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tonComplete(filePackage);\n\t\t}\n\t}\n\n\tfunction createNewFile(path:String):Void\n\t{\n\t\tvar name:String = Path.basename(path);\n\t\tvar mode:String = getMode(name);\n\t\t\n\t\tvar code:String = \"\";\n\t\t\n\t\tvar extname:String = Path.extname(name);\n\t\t\n\t\tswitch (extname) \n\t\t{\n\t\t\tcase \".hx\":\n\t\t\t\tpath = path.substr(0, path.length - name.length) + name.substr(0, 1).toUpperCase() + name.substr(1); // + Utils.capitalize(name)\n\t\t\t\n// \t\t\t\tvar options:NodeFsFileOptions = { };\n// \t\t\t\toptions.encoding = \"utf8\";\n\t\t\t\t\n\t\t\t\tvar pathToTemplate:String = Path.join(\"core\", \"templates\", \"New.tpl\");\n\t\t\t\tvar templateCode:String = Fs.readFileSync(pathToTemplate, \"utf8\");\n\t\t\t\t\n\t\t\t\tresolvePackage(path, function (filePackage)\n\t\t\t\t\t\t\t   {\n\t\t\t\t\t\t\t\t    // code = Mustache.render(templateCode, { name: js.Path.basename(name, extname), pack:\"\", author:\"\" } );\n\t\t\t\t\t\t\t\t   \t//author:\"\"\n\t\t\t\t\t\t\t\t   \t\n\t\t\t\t\t\t\t\t   \tvar data:FileTemplate = {};\n\t\t\t\t\t\t\t\t   \tdata.name = Path.basename(name, extname);\n\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t   \tgenerateTemplate(data, filePackage);\n\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t\tcode = new Template(templateCode).execute(data);\n\t\t\t\t\t\t\t\t   \tcreateNewDoc(path, name, code, mode);\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t  );\n\t\t\tcase \".hxml\":\n// \t\t\t\tvar options:NodeFsFileOptions = { };\n// \t\t\t\toptions.encoding = \"utf8\";\n\t\t\t\t\n\t\t\t\tvar pathToTemplate:String = Path.join(\"core\", \"templates\", \"build.tpl\");\n\t\t\t\tvar templateCode:String = Fs.readFileSync(pathToTemplate, \"utf8\");\n\t\t\t\t\n\t\t\t\tcode = templateCode;\n\t\t\t\tcreateNewDoc(path, name, code, mode);\n\t\t\tdefault:\n\t\t\t\tcreateNewDoc(path, name, code, mode);\n\t\t}\n\t}\n\n\tpublic function generateTemplate(data:FileTemplate, filePackage:String)\n\t{\n\t\tdata.pack = filePackage;\n\n\t\tvar project = ProjectAccess.currentProject;\n\n\t\tif (project != null)\n\t\t{\n\t\t\tdata.author = project.company;\n\t\t\tdata.license = project.license;\n\t\t\tdata.url = project.url;\n\t\t}\n\t\t\t\n\t\treturn data;\n\t}\n\n\tfunction createNewDoc(path:String, name:String, code:String, mode:String)\n\t{\n\t\tvar doc = new CodeMirror.Doc(code, mode);\n\n\t\tcreateNewTab(name, path, doc, true);\n\t\tselectDoc(path);\n\n\t\tcheckTabsCount();\n\n\t\tvar fileTreeInstance = FileTree.get();\n\t\tfileTreeInstance.load();\n\t}\n\t\n\tfunction checkTabsCount():Void\n\t{\t\t\t\n\t\tif (Browser.document.getElementById(\"editor\").style.display == \"none\" && tabMap.getTabs().length > 0)\n\t\t{\n\t\t\tnew JQuery(\"#editor\").show(0);\n\t\t\t\n\t\t\tvar welcomeScreen = WelcomeScreen.get();\n\t\t\twelcomeScreen.hide();\n\t\t\t\n\t\t\tEditor.editor.refresh();\n\t\t\t\n\t\t\tEditor.resize();\n\t\t\t//Main.updateMenu();\n\t\t}\n\t}\n\t\n\tpublic function closeAll():Void\n\t{\n\t\tfor (key in tabMap.keys()) \n\t\t{\n\t\t\tcloseTab(key, false);\n\t\t}\n\t}\n        \n\tpublic function closeOthers(path:String):Void\n\t{\t\t\n\t\tfor (key in tabMap.keys()) \n\t\t{\n\t\t\tif (key != path) \n\t\t\t{\n\t\t\t\tcloseTab(key, false);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (tabMap.getTabs().length == 1)\n\t\t{\n\t\t\tshowNextTab();\n\t\t}\n\t}\n\t\n\tpublic function closeTab(path:String, ?switchToTab:Bool = true):Void\n\t{\n\t\tEditor.saveFoldedRegions();\n\t\t\n\t\tif (isChanged(path)) \n\t\t{\n\t\t\tAlertify.confirm(LocaleWatcher.getStringSync(\"File \") + path +  LocaleWatcher.getStringSync(\" was changed. Save it?\"), function (e)\n\t\t\t{\n\t\t\t\tif (e)\n\t\t\t\t{\n\t\t\t\t\tsaveDoc(path);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tremoveTab(path, switchToTab);\n\t\t\t}\n\t\t\t);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tremoveTab(path, switchToTab);\n\t\t}\n\t\t\n\t\tEditor.resize();\n\t}\n\t\n\tfunction removeTab(path:String, ?switchToTab:Bool)\n\t{\n\t\tvar tab = tabMap.get(path);\n\t\ttabMap.remove(path);\n\t\t\n\t\ttab.remove();\n\t\t\n\t\tselectedPath = null;\n\t\t\n\t\tif (tabMap.getTabs().length > 0)\n\t\t{\n\t\t\tif (switchToTab)\n\t\t\t{\n\t\t\t\tshowPreviousTab();\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tnew JQuery(\"#editor\").hide(0);\n\t\t\t\n\t\t\tvar welcomeScreen = WelcomeScreen.get();\n\t\t\t\n\t\t\tif (ProjectAccess.path != null) \n\t\t\t{\n\t\t\t\twelcomeScreen.hide();\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\twelcomeScreen.show();\n\t\t\t}\n\t\t\t\n\t\t\tvar outlinePanel = OutlinePanel.get();\n            outlinePanel.clearFields();\n            outlinePanel.update();\n\t\t}\n\t\t\n\t\tif (ProjectAccess.path != null) \n\t\t{\n// \t\t\tvar pathToDocument:String = Path.relative(ProjectAccess.path, path);\n\t\t\t\n\t\t\tvar selectedFile = ProjectAccess.getFileByPath(path);\n\t\t\t\n\t\t\tProjectAccess.currentProject.files.remove(selectedFile);\n\t\t}\n\t}\n\t\n\tpublic function showPreviousTab() \n\t{\n\t\tvar index = selectedIndex - 1;\n\t\tvar tabArray = tabMap.getTabs();\n\t\t\n\t\tif (index < 0) \n\t\t{\n\t\t\tindex = tabArray.length - 1;\n\t\t}\n\t\t\n\t\tselectDoc(tabArray[index].path);\n\t}\n\t\n\tpublic function showNextTab() \n\t{\n\t\tvar index = selectedIndex + 1;\n\t\tvar tabArray = tabMap.getTabs();\n\t\t\n\t\tif (index > tabArray.length - 1) \n\t\t{\n\t\t\tindex = 0;\n\t\t}\n\t\t\n\t\tselectDoc(tabArray[index].path);\n\t}\n\t\n\tpublic function closeActiveTab():Void\n\t{\n\t\tcloseTab(selectedPath);\n\t}\n\n\tfunction isAlreadyOpened(path:String, ?show:Bool = true):Bool\n\t{\n\t\tvar opened:Bool = tabMap.exists(path);\n\t\t\n\t\tif (opened && show) \n\t\t{\n\t\t\tselectDoc(path);\n\t\t}\n\t\t\n\t\treturn opened;\n\t}\n\t\n\tfunction getMode(path:String):String\n\t{\n\t\tvar mode:String = null;\n\t\t\t\t\n\t\tswitch (Path.extname(path)) \n\t\t{\n\t\t\tcase \".hx\":\n\t\t\t\t\tmode = \"haxe\";\n\t\t\tcase \".hxml\":\n\t\t\t\t\tmode = \"hxml\";\n\t\t\tcase \".js\":\n\t\t\t\t\tmode = \"javascript\";\n\t\t\tcase \".css\":\n\t\t\t\t\tmode = \"css\";\n            case \".json\":\n                \tmode = \"application/json\";\n\t\t\tcase \".xml\":\n\t\t\t\t\tmode = \"xml\";\n\t\t\tcase \".html\":\n\t\t\t\t\tmode = \"text/html\";\n\t\t\tcase \".md\":\n\t\t\t\t\tmode = \"markdown\";\n\t\t\tcase \".sh\", \".bat\":\n\t\t\t\t\tmode = \"shell\";\n\t\t\tcase \".ml\":\n\t\t\t\t\tmode = \"ocaml\";\n\t\t\tcase \".yml\":\n\t\t\t\t\tmode = \"yaml\";\n\t\t\tdefault:\n\t\t\t\t\t\n\t\t}\n\t\t\n\t\treturn mode;\n\t}\n\t\n\tpublic function selectDoc(path:String):Void\n\t{\n\t\tvar found = false;\n\n\t\tvar keys = tabMap.keys();\n\t\tfor (i in 0...keys.length) \n\t\t{\n\t\t\tif (keys[i] == path) \n\t\t\t{\n\t\t\t\ttabMap.get(keys[i]).getElement().className = \"selected\";\n\t\t\t\tselectedIndex = i;\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\ttabMap.get(keys[i]).getElement().className = \"\";\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar cm = Editor.editor;\n\n\t\tif (found)\n\t\t{\n\t\t\tvar project = ProjectAccess.currentProject;\n\n\t\t\tif (selectedPath != null && project != null)\n\t\t\t{\n\t\t\t\tEditor.saveFoldedRegions();\n\t\t\t\tcm.refresh();\n\t\t\t}\n\t\t\t\n\t\t\tselectedPath = path;\n\t\t\t\n\t\t\tif (ProjectAccess.path != null) \n\t\t\t{\n\t\t\t\tproject.activeFile = Path.relative(ProjectAccess.path, selectedPath);\n\t\t\t}\n\n\t\t\tvar tab = tabMap.get(selectedPath);\n\t\t\tvar doc = tab.doc;\n\n\t\t\tEditor.editor.swapDoc(doc);\n\n\t\t\tHaxeLint.updateLinting();\n\n\t\t\tvar completionActive = Editor.editor.state.completionActive;\n\n\t\t\tif (completionActive != null && completionActive.widget != null) \n\t\t\t{\n\t\t\t\tcompletionActive.widget.close();\n\t\t\t}\n\n\t\t\tif (ProjectAccess.currentProject != null)\n\t\t\t{\t\t\n\t\t\t\tvar selectedFile = ProjectAccess.getFileByPath(selectedPath);\n\t\t\t\t\n\t\t\t\tif (selectedFile != null)\n\t\t\t\t{\n\t\t\t\t\tif (!tab.loaded)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar foldedRegions = selectedFile.foldedRegions;\n\n\t\t\t\t\t\tif (foldedRegions != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (pos in foldedRegions)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcm.foldCode(pos, null, \"fold\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (selectedFile.activeLine != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar pos = {line: selectedFile.activeLine, ch: 0};\n\n\t\t\t\t\t\t\tdoc.setCursor(pos);\n\t\t\t\t\t\t\tcm.centerOnLine(pos.line);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttab.loaded = true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (selectedFile.useTabs == null || selectedFile.indentSize == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar indentWithTabs = SettingsWatcher.settings.indentWithTabs;\n\t\t\t\t\t\tvar indentSize = SettingsWatcher.settings.indentSize;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (indentWithTabs == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tindentWithTabs = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif (indentSize == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tindentSize = 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tselectedFile.useTabs = indentWithTabs;\n\t\t\t\t\t\tsetIndentationSize(indentSize);\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tloadIndentationSettings(cm, selectedFile);\n\t\t\t\t\tupdateIndentationSettings(selectedFile);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttrace(\"can't load folded regions for active document\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcm.focus();\t\t\n\t\t\tBrowser.document.getElementById(\"status-file\").textContent = \"-\" + Std.string(doc.lineCount()) + \" Lines\";\n\t\t}\n\t}\n\t\n\tfunction loadIndentationSettings(cm:CodeMirror, selectedFile:FileData)\n\t{\n\t\tcm.setOption(\"indentWithTabs\", selectedFile.useTabs);\n\t\t\n\t\tif (selectedFile.useTabs)\n\t\t{\n\t\t\tcm.setOption(\"tabSize\", selectedFile.indentSize);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcm.setOption(\"indentUnit\", selectedFile.indentSize);\n\t\t}\n\t}\n\t\t\n\tfunction updateIndentationSettings(selectedFile:FileData)\n\t{\n\t\tvar indentType = Browser.document.getElementById(\"indent-type\");\n\n\t\tif (selectedFile.useTabs)\n\t\t{\n\t\t\tindentType.textContent = \"Tab Size:\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tindentType.textContent = \"Spaces:\";\n\t\t}\n\t\t\n\t\tvar indentWidthInput = cast(Browser.document.getElementById(\"indent-width-input\"), InputElement);\n\t\tindentWidthInput.value = Std.string(selectedFile.indentSize);\n\t\t\n\t\tvar indentWidthLabel = cast(Browser.document.getElementById(\"indent-width-label\"), DivElement);\n\t\tindentWidthLabel.textContent = Std.string(selectedFile.indentSize);\n\t}\n\t\t\n\tpublic function getCurrentDocumentPath():String\n\t{\n\t\treturn selectedPath;\n\t}\n\t\n\tpublic function getCurrentDocument():CodeMirror.Doc\n\t{\n        var doc:CodeMirror.Doc = null;\n        \n        if (selectedPath != null)\n        {\n            var tab = tabMap.get(selectedPath);\n\n\t    if (tab != null)\n\t    {\n\t\tdoc = tab.doc;\n\t    }\n        }\n            \n\t\treturn doc;\n\t}\n\t\n\tpublic function saveDoc(path:String, ?onComplete:Dynamic):Void\n\t{\n\t\tif (isChanged(path)) \n\t\t{\n\t\t\tvar tab:Tab = tabMap.get(path);\n\t\t\ttab.save();\n\t\t}\n\t\t\n\t\tif (onComplete != null)\n\t\t{\n\t\t\tonComplete();\n\t\t}\t\n\t}\n\t\n\tpublic function isChanged(path:String):Bool\n\t{\n\t\tvar tab:Tab = tabMap.get(path);\n\t\t\n\t\t//tab.doc.changeGeneration()\n\t\treturn !tab.doc.isClean();\n\t}\n\t\n\tpublic function saveActiveFile(?onComplete:Dynamic):Void\n\t{\n\t\tif (selectedPath != null) \n\t\t{\n\t\t\tsaveDoc(selectedPath, onComplete);\n\t\t}\n        else\n        {\n            trace(selectedPath);\n        }\n\t}\n\t\n\tpublic function saveActiveFileAs():Void\n\t{\t\t\n\t\tvar tab = tabMap.get(selectedPath);\n\t\t\n\t\tFileDialog.saveFile(function (path:String):Void\n\t\t{\n\t\t\ttabMap.remove(selectedPath);\n\t\t\ttab.path = path;\n\t\t\tselectedPath = path;\n\t\t\ttabMap.add(tab);\n\t\t\tsaveDoc(selectedPath);\n\t\t}\n\t\t, tab.name);\n\t}\n\t\n\tpublic function saveAll(?onComplete:Dynamic):Void\n\t{\t\t\n\t\tfor (key in tabMap.keys()) \n\t\t{\n\t\t\tsaveDoc(key);\n\t\t}\n\t\t\n\t\tif (onComplete != null)\n\t\t{\n\t\t\tonComplete();\n\t\t}\n\t}\n}\n","package tabmanager;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass TabMap\n{\n\tvar tabArray:Array<Tab>;\n\n\tpublic function new() \n\t{\n\t\ttabArray = [];\n\t}\n\t\n\tpublic function get(path:String):Tab\n\t{\n\t\tvar tab = null;\n\t\t\n\t\tfor (t in tabArray) \n\t\t{\n\t\t\tif (t.path == path) \n\t\t\t{\n\t\t\t\ttab = t;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn tab;\n\t}\n\t\n\tpublic function exists(path:String):Bool\n\t{\n\t\tvar exists:Bool = false;\n\t\t\n\t\tfor (t in tabArray) \n\t\t{\n\t\t\tif (t.path == path) \n\t\t\t{\n\t\t\t\texists = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn exists;\n\t}\n\t\n\tfunction getIndex(path:String):Int\n\t{\n\t\tvar index:Int = -1;\n\t\t\n\t\tfor (i in 0...tabArray.length) \n\t\t{\n\t\t\tif (tabArray[i].path == path) \n\t\t\t{\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn index;\n\t}\n\t\n\tpublic function getPrevious(path:String):Tab\n\t{\n\t\tvar index = getIndex(path);\n\t\tindex--;\n\t\t\n\t\tif (index < 0) \n\t\t{\n\t\t\tindex = tabArray.length - 1;\n\t\t}\n\t\t\n\t\treturn tabArray[index];\n\t}\n\t\n\tpublic function getNext(path:String):Tab\n\t{\n\t\tvar index = getIndex(path);\n\t\tindex++;\n\t\t\n\t\tif (index > tabArray.length - 1) \n\t\t{\n\t\t\tindex = 0;\n\t\t}\n\t\t\n\t\treturn tabArray[index];\n\t}\n\t\n\tpublic function add(tab:Tab):Void\n\t{\n\t\ttabArray.push(tab);\n\t}\n\t\n\tpublic function remove(path:String):Void \n\t{\n\t\ttabArray.splice(getIndex(path), 1);\n\t}\n\t\n\tpublic function keys():Array<String>\n\t{\n\t\tvar keys:Array<String> = [];\n\t\t\n\t\tfor (t in tabArray) \n\t\t{\n\t\t\tkeys.push(t.path);\n\t\t}\n\t\t\n\t\treturn keys;\n\t}\n\t\n\tpublic function getTabs():Array<Tab>\n\t{\n\t\treturn tabArray;\n\t}\n\t\n}","\npackage tjson;\nusing StringTools;\nclass TJSON {\n\n\tstatic var pos:Int;\n\tstatic var json:String;\n\tstatic var lastSymbolQuoted:Bool; //true if the last symbol was in quotes.\n\tstatic var fileName:String;\n\tstatic var currentLine:Int;\n\tstatic var floatRegex;\n\tstatic var intRegex;\n\n\tstatic var strProcessor:String->Dynamic;\n\n\t/**\n\t * Parses a JSON string into a haxe dynamic object or array.\n\t * @param String - The JSON string to parse\n\t * @param String the file name to whic the JSON code belongs. Used for generating nice error messages.\n\t */\n\tpublic static function parse(json:String, ?fileName:String=\"JSON Data\", ?stringProcessor:String->Dynamic = null):Dynamic{\n\t\tfloatRegex = ~/^-?[0-9]*\\.[0-9]+$/;\n\t\tintRegex = ~/^-?[0-9]+$/;\n\t\tTJSON.json = json;\n\t\tTJSON.fileName = fileName;\n\t\tTJSON.currentLine = 1;\n\t\tpos = 0;\n\t\tstrProcessor = (stringProcessor==null? defaultStringProcessor : stringProcessor);\n\t\t\n\t\ttry{\n\t\t\treturn doParse();\n\t\t}catch(e:String){\n\t\t\tthrow fileName+\" on line \"+currentLine+\": \"+e;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Serializes a dynamic object or an array into a JSON string.\n\t * @param Dynamic - The object to be serialized\n\t * @param Dynamic - The style to use. Either an object implementing EncodeStyle interface or the strings 'fancy' or 'simple'.\n\t */\n\tpublic static function encode(obj:Dynamic, ?style:Dynamic=null):String{\n\t\tif(!Reflect.isObject(obj)){\n\t\t\tthrow(\"Provided object is not an object.\");\n\t\t}\n\t\tvar st:EncodeStyle;\n\t\tif(Std.is(style, EncodeStyle)){\n\t\t\tst = style;\n\t\t}\n\t\telse if(style == 'fancy'){\n\t\t\tst = new FancyStyle();\n\t\t}\n\t\telse st = new SimpleStyle();\n\t\tvar buffer = new StringBuf();\n\t\tif(Std.is(obj,Array) || Std.is(obj,List)) {\n\t\t\tencodeIterable(buffer, obj, st, 0);\n\n\t\t} else if(Std.is(obj, haxe.ds.StringMap)){\n\t\t\tencodeMap(buffer, obj, st, 0);\n\t\t} else {\n\t\t\tencodeObject(buffer, obj, st, 0);\n\t\t}\n\t\treturn buffer.toString();\n\t\t\n\t\t \n\t}\n\n\tprivate static function defaultStringProcessor(str:String):Dynamic{\n\t\treturn str;\n\t}\n\n\tprivate static function doParse():Dynamic{\n\t\t//determine if objector array\n\t\tvar s = getNextSymbol();\n\t\tif(s == '{'){\n\t\t\treturn doObject();\n\t\t}\n\n\t\tif(s == '['){\n\t\t\treturn doArray();\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static function doObject():Dynamic{\n\t\tvar o:Dynamic = { };\n\t\tvar val:Dynamic ='';\n\t\tvar key:String;\n\t\twhile(pos < json.length){\n\t\t\tkey=getNextSymbol();\n\t\t\tif(key == \",\" && !lastSymbolQuoted)continue;\n\t\t\tif(key == \"}\" && !lastSymbolQuoted){\n\n\t\t\t\treturn o;\n\t\t\t}\n\t\t\tvar seperator = getNextSymbol();\n\t\t\tif(seperator != \":\"){\n\t\t\t\tthrow(\"Expected ':' but got '\"+seperator+\"' instead.\");\n\t\t\t}\n\n\t\t\tvar v = getNextSymbol();\n\t\t\tif(v == \"{\" && !lastSymbolQuoted){\n\t\t\t\tval = doObject();\n\t\t\t}else if(v == \"[\" && !lastSymbolQuoted){\n\t\t\t\tval = doArray();\n\t\t\t}else{\n\t\t\t\tval = convertSymbolToProperType(v);\n\t\t\t}\n\t\t\tReflect.setField(o,key,val);\n\t\t}\n\t\tthrow \"Unexpected end of file. Expected '}'\";\n\t\t\n\t}\n\n\tprivate static function doArray():Dynamic{\n\t\tvar a:Array<Dynamic> = new Array<Dynamic>();\n\t\tvar val:Dynamic;\n\t\twhile(pos < json.length){\n\t\t\tval=getNextSymbol();\n\t\t\tif(val == ',' && !lastSymbolQuoted){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if(val == ']' && !lastSymbolQuoted){\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\telse if(val == \"{\" && !lastSymbolQuoted){\n\t\t\t\tval = doObject();\n\t\t\t}else if(val == \"[\" && !lastSymbolQuoted){\n\t\t\t\tval = doArray();\n\t\t\t}else{\n\t\t\t\tval = convertSymbolToProperType(val);\n\t\t\t}\n\t\t\ta.push(val);\n\t\t}\n\t\tthrow \"Unexpected end of file. Expected ']'\";\n\t}\n\n\tprivate static function convertSymbolToProperType(symbol):Dynamic{\n\t\tif(lastSymbolQuoted) return symbol; //things is quotes are always strings\n\t\tif(looksLikeFloat(symbol)){\n\t\t\treturn Std.parseFloat(symbol);\n\t\t}\n\t\tif(looksLikeInt(symbol)){\n\t\t\treturn Std.parseInt(symbol);\n\t\t}\n\t\tif(symbol.toLowerCase() == \"true\"){\n\t\t\treturn true;\n\t\t}\n\t\tif(symbol.toLowerCase() == \"false\"){\n\t\t\treturn false;\n\t\t}\n\t\tif(symbol.toLowerCase() == \"null\"){\n\t\t\treturn null;\n\t\t}\n\t\treturn symbol;\n\t}\n\n\n\tprivate static function looksLikeFloat(s:String):Bool{\n\t\treturn floatRegex.match(s);\n\t}\n\n\tprivate static function looksLikeInt(s:String):Bool{\n\t\treturn intRegex.match(s);\n\t}\n\n\tprivate static function getNextSymbol(){\n\t\tlastSymbolQuoted=false;\n\t\tvar c:String = '';\n\t\tvar inQuote:Bool = false;\n\t\tvar quoteType:String=\"\";\n\t\tvar symbol:String = '';\n\t\tvar inEscape:Bool = false;\n\t\tvar inSymbol:Bool = false;\n\t\tvar inLineComment = false;\n\t\tvar inBlockComment = false;\n\n\t\twhile(pos < json.length){\n\t\t\tc = json.charAt(pos++);\n\t\t\tif(c == \"\\n\" && !inSymbol)\n\t\t\t\tcurrentLine++;\n\t\t\tif(inLineComment){\n\t\t\t\tif(c == \"\\n\" || c == \"\\r\"){\n\t\t\t\t\tinLineComment = false;\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(inBlockComment){\n\t\t\t\tif(c==\"*\" && json.charAt(pos) == \"/\"){\n\t\t\t\t\tinBlockComment = false;\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(inQuote){\n\t\t\t\tif(inEscape){\n\t\t\t\t\tinEscape = false;\n\t\t\t\t\tif(c==\"'\" || c=='\"'){\n\t\t\t\t\t\tsymbol += c;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(c==\"t\"){\n\t\t\t\t\t\tsymbol += \"\\t\";\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(c==\"n\"){\n\t\t\t\t\t\tsymbol += \"\\n\";\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(c==\"\\\\\"){\n\t\t\t\t\t\tsymbol += \"\\\\\";\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(c==\"r\"){\n\t\t\t\t\t\tsymbol += \"\\r\";\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(c==\"/\"){\n\t\t\t\t\t\tsymbol += \"/\";\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(c==\"u\"){\n                        var hexValue = 0;\n\n                        for (i in 0...4){\n                            if (pos >= json.length)\n                              throw \"Unfinished UTF8 character\";\n\t\t\t                var nc = json.charCodeAt(pos++);\n                            hexValue = hexValue << 4;\n                            if (nc >= 48 && nc <= 57) // 0..9\n                              hexValue += nc - 48;\n                            else if (nc >= 65 && nc <= 70) // A..F\n                              hexValue += 10 + nc - 65;\n                            else if (nc >= 97 && nc <= 102) // a..f\n                              hexValue += 10 + nc - 95;\n                            else throw \"Not a hex digit\";\n                        }\n                        \n\t\t\t\t\t\tvar utf = new haxe.Utf8();\n\t\t\t\t\t\tutf.addChar(hexValue);\n\t\t\t\t\t\tsymbol += utf.toString();\n                        \n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\n\t\t\t\t\tthrow \"Invalid escape sequence '\\\\\"+c+\"'\";\n\t\t\t\t}else{\n\t\t\t\t\tif(c == \"\\\\\"){\n\t\t\t\t\t\tinEscape = true;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(c == quoteType){\n\t\t\t\t\t\treturn symbol;\n\t\t\t\t\t}\n\t\t\t\t\tsymbol+=c;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\t//handle comments\n\t\t\telse if(c == \"/\"){\n\t\t\t\tvar c2 = json.charAt(pos);\n\t\t\t\t//handle single line comments.\n\t\t\t\t//These can even interrupt a symbol.\n\t\t\t\tif(c2 == \"/\"){\n\t\t\t\t\tinLineComment=true;\n\t\t\t\t\tpos++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t//handle block comments.\n\t\t\t\t//These can even interrupt a symbol.\n\t\t\t\telse if(c2 == \"*\"){\n\t\t\t\t\tinBlockComment=true;\n\t\t\t\t\tpos++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\n\n\t\t\tif (inSymbol){\n\t\t\t\tif(c==' ' || c==\"\\n\" || c==\"\\r\" || c==\"\\t\" || c==',' || c==\":\" || c==\"}\" || c==\"]\"){ //end of symbol, return it\n\t\t\t\t\tpos--;\n\t\t\t\t\treturn symbol;\n\t\t\t\t}else{\n\t\t\t\t\tsymbol+=c;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(c==' ' || c==\"\\t\" || c==\"\\n\" || c==\"\\r\"){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(c==\"{\" || c==\"}\" || c==\"[\" || c==\"]\" || c==\",\" || c == \":\"){\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\n\n\n\t\t\t\tif(c==\"'\" || c=='\"'){\n\t\t\t\t\tinQuote = true;\n\t\t\t\t\tquoteType = c;\n\t\t\t\t\tlastSymbolQuoted = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tinSymbol=true;\n\t\t\t\t\tsymbol = c;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t} // end of while. We have reached EOF if we are here.\n\t\tif(inQuote){\n\t\t\tthrow \"Unexpected end of data. Expected ( \"+quoteType+\" )\";\n\t\t}\n\t\treturn symbol;\n\t}\n\n\tprivate static function encodeObject(buffer:StringBuf, obj:Dynamic,style:EncodeStyle,depth:Int):Void {\n\t\tbuffer.add(style.beginObject(depth));\n\t\tvar fieldCount = 0;\n\t\tvar fields:Array<String>;\n\t\tvar cls = Type.getClass(obj);\n\t\tif (cls != null) {\n\t\t\tfields = Type.getInstanceFields(cls);\n\t\t} else {\n\t\t\tfields = Reflect.fields(obj);\n\t\t}\n\t\tfor (field in fields){\n\t\t\tif(fieldCount++ > 0) buffer.add(style.entrySeperator(depth));\n\t\t\telse buffer.add(style.firstEntry(depth));\n\t\t\tvar value:Dynamic = Reflect.field(obj,field);\n\t\t\tbuffer.add('\"'+field+'\"'+style.keyValueSeperator(depth));\n\t\t\tencodeValue(buffer, value, style, depth);\n\t\t}\n\t\tbuffer.add(style.endObject(depth));\n\t}\n\n\n\tprivate static function encodeMap(buffer:StringBuf, obj:Map<Dynamic, Dynamic>,style:EncodeStyle,depth:Int):Void {\n\t\tbuffer.add(style.beginObject(depth));\n\t\tvar fieldCount = 0;\n\t\tfor (field in obj.keys()){\n\t\t\tif(fieldCount++ > 0) buffer.add(style.entrySeperator(depth));\n\t\t\telse buffer.add(style.firstEntry(depth));\n\t\t\tvar value:Dynamic = obj.get(field);\n\t\t\tbuffer.add('\"'+field+'\"'+style.keyValueSeperator(depth));\n\t\t\tencodeValue(buffer, value, style, depth);\n\t\t}\n\t\tbuffer.add(style.endObject(depth));\n\t}\n\n\n\tprivate static function encodeIterable(buffer:StringBuf, obj:Iterable<Dynamic>, style:EncodeStyle, depth:Int):Void {\n\t\tbuffer.add(style.beginArray(depth));\n\t\tvar fieldCount = 0;\n\t\tfor (value in obj){\n\t\t\tif(fieldCount++ >0) buffer.add(style.entrySeperator(depth));\n\t\t\telse buffer.add(style.firstEntry(depth));\n\t\t\tencodeValue(buffer, value, style, depth);\n\t\t\t\n\t\t}\n\t\tbuffer.add(style.endArray(depth));\n\t}\n\n\tprivate static function encodeValue(buffer:StringBuf, value:Dynamic, style:EncodeStyle, depth:Int):Void {\n\t\tif(Std.is(value, Int) || Std.is(value,Float)){\n\t\t\t\tbuffer.add(value);\n\t\t}\n\t\telse if(Std.is(value,Array) || Std.is(value,List)){\n\t\t\tvar v: Array<Dynamic> = value;\n\t\t\tencodeIterable(buffer,v,style,depth+1);\n\t\t}\n\t\telse if(Std.is(value,List)){\n\t\t\tvar v: List<Dynamic> = value;\n\t\t\tencodeIterable(buffer,v,style,depth+1);\n\n\t\t}\n\t\telse if(Std.is(value,haxe.ds.StringMap)){\n\t\t\tencodeMap(buffer,value,style,depth+1);\n\n\t\t}\n\t\telse if(Std.is(value,String)){\n\t\t\tbuffer.add('\"'+Std.string(value).replace(\"\\\\\",\"\\\\\\\\\").replace(\"\\n\",\"\\\\n\").replace(\"\\r\",\"\\\\r\").replace('\"','\\\\\"')+'\"');\n\t\t}\n\t\telse if(Std.is(value,Bool)){\n\t\t\tbuffer.add(value);\n\t\t}\n\t\telse if(Reflect.isObject(value)){\n\t\t\tencodeObject(buffer,value,style,depth+1);\n\t\t}\n\t\telse if(value == null){\n\t\t\tbuffer.add(\"null\");\n\t\t}\n\t\telse{\n\t\t\tthrow \"Unsupported field type: \"+Std.string(value);\n\t\t}\n\t}\n\n\t\n\n\n}\n\n\n\ninterface EncodeStyle{\n\t\n\tpublic function beginObject(depth:Int):String;\n\tpublic function endObject(depth:Int):String;\n\tpublic function beginArray(depth:Int):String;\n\tpublic function endArray(depth:Int):String;\n\tpublic function firstEntry(depth:Int):String;\n\tpublic function entrySeperator(depth:Int):String;\n\tpublic function keyValueSeperator(depth:Int):String;\n\n}\n\nclass SimpleStyle implements EncodeStyle{\n\tpublic function new(){\n\n\t}\n\tpublic function beginObject(depth:Int):String{\n\t\treturn \"{\";\n\t}\n\tpublic function endObject(depth:Int):String{\n\t\treturn \"}\";\n\t}\n\tpublic function beginArray(depth:Int):String{\n\t\treturn \"[\";\n\t}\n\tpublic function endArray(depth:Int):String{\n\t\treturn \"]\";\n\t}\n\tpublic function firstEntry(depth:Int):String{\n\t\treturn \"\";\n\t}\n\tpublic function entrySeperator(depth:Int):String{\n\t\treturn \",\";\n\t}\n\tpublic function keyValueSeperator(depth:Int):String{\n\t\treturn \":\";\n\t}\n\t\n}\n\n\nclass FancyStyle implements EncodeStyle{\n\tpublic var tab(default, null):String;\n\tpublic function new(tab:String = \"    \"){\n\t\tthis.tab = tab;\n\t\tcharTimesNCache = [\"\"];\n\t}\n\tpublic function beginObject(depth:Int):String{\n\t\treturn \"{\\n\";\n\t}\n\tpublic function endObject(depth:Int):String{\n\t\treturn \"\\n\"+charTimesN(depth)+\"}\";\n\t}\n\tpublic function beginArray(depth:Int):String{\n\t\treturn \"[\\n\";\n\t}\n\tpublic function endArray(depth:Int):String{\n\t\treturn \"\\n\"+charTimesN(depth)+\"]\";\n\t}\n\tpublic function firstEntry(depth:Int):String{\n\t\treturn charTimesN(depth+1)+' ';\n\t}\n\tpublic function entrySeperator(depth:Int):String{\n\t\treturn \"\\n\"+charTimesN(depth+1)+\",\";\n\t}\n\tpublic function keyValueSeperator(depth:Int):String{\n\t\treturn \" : \";\n\t}\n\tprivate var charTimesNCache:Array<String>;\n\tprivate function charTimesN(n:Int):String{\n\t\treturn if (n < charTimesNCache.length) {\n\t\t\tcharTimesNCache[n];\n\t\t} else {\n\t\t\tcharTimesNCache[n] = charTimesN(n-1) + tab;\n\t\t}\n\t}\n\t\n}\n\n\n\n\n","package watchers;\nimport js.node.Fs;\nimport js.node.Path;\nimport js.atomshell.browser.BrowserWindow;\nimport haxe.ds.StringMap.StringMap;\nimport js.Browser;\nimport js.html.Element;\nimport js.Node;\nimport tjson.TJSON;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass LocaleWatcher\n{\n\tstatic var localeData:Dynamic;\n\tstatic var watcher:Dynamic;\n\tstatic var listenerAdded:Bool = false;\n    static var pathToLocale:String;\n\t\n\tpublic static function load():Void \n\t{        \n\t\tif (watcher != null) \n\t\t{\n\t\t\twatcher.close();\n\t\t}\n\t\t\n\t\tparse();\n\t\t\n\t\twatcher = Watcher.watchFileForUpdates(pathToLocale, function ():Void \n\t\t{\n\t\t\tparse();\n\t\t\tprocessHtmlElements();\n\t\t}, 1000);\n\t\t\n\t\tprocessHtmlElements();\n\t\t\n\t\tif (!listenerAdded) \n\t\t{\n\t\t\tBrowserWindow.getAllWindows()[0].on(\"close\", function (e) \n\t\t\t{\n\t\t\t\tif (watcher != null) \n\t\t\t\t{\n\t\t\t\t\twatcher.close();\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\tlistenerAdded = true;\n\t\t}\n\t}\n\t\n\tstatic function parse():Void \n\t{\n        pathToLocale = Path.join(\"core\", \"locale\", SettingsWatcher.settings.locale);\n        \n// \t\tvar options:NodeFsFileOptions = { };\n// \t\toptions.encoding = \"utf8\";\n\t\t\n\t\tvar data:String = Fs.readFileSync(pathToLocale, \"utf8\");\n\t\t\n\t\tlocaleData = TJSON.parse(data);\n\t}\n\t\n\tpublic static function getStringSync(name:String):String\n\t{\n\t\tvar value:String = name;\n\t\t\n\t\tif (Reflect.hasField(localeData, name)) \n\t\t{\n\t\t\tvalue = Reflect.field(localeData, name);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tReflect.setField(localeData, name, name);\n\t\t\tvar data:String = TJSON.encode(localeData, 'fancy');\n\t\t\tFs.writeFileSync(pathToLocale, data, \"utf8\");\n\t\t}\n\t\t\n\t\treturn value;\n\t}\n\t\n\tstatic function processHtmlElements()\n\t{\n\t\tvar element:Element;\n\t\tvar value:String;\n\t\t\n\t\tfor (node in Browser.document.getElementsByTagName(\"*\")) \n\t\t{\n\t\t\telement = cast(node, Element);\n\t\t\t\n\t\t\tvalue = element.getAttribute(\"localeString\");\n\t\t\t\n\t\t\tif (value != null) \n\t\t\t{\n\t\t\t\telement.textContent = getStringSync(value);\n\t\t\t}\n\t\t}\n\t}\n}","package watchers;\nimport js.atomshell.browser.App;\nimport js.atomshell.browser.BrowserWindow;\nimport js.node.Fs.FsReadFileOpt;\nimport js.node.Fs;\nimport js.node.Path;\nimport core.Utils;\nimport filetree.FileTree;\nimport haxe.Timer;\nimport js.Node;\nimport projectaccess.ProjectAccess;\nimport tjson.TJSON;\n\ntypedef Settings = {\n\tvar theme:String;\n\tvar locale:String;\n\tvar ignore:Array<String>;\n\tvar indentWithTabs:Bool;\n\tvar indentSize:Int;\n}\n\n/**\n * ...\n * @author \n */\nclass SettingsWatcher\n{\n\tpublic static var settings:Settings;\n\tpublic static var watcher:Dynamic;\n    \n    static var pathToSettings:String;\n\tpublic static var pathToFolder:String;\n\t\n\tpublic static function load():Void \n\t{\t\t\n\t\tvar pathToConfigFolder:String = Path.join(\"core\", \"config\");\n\t\t\n// \t\tswitch (Utils.os)\n// \t\t{\n// \t\t\tcase Utils.WINDOWS:\n// \t\t\t\tpathToFolder = Node.process.env.APPDATA;\n// \t\t\tdefault:\n// \t\t\t\tpathToFolder = Node.process.env.HOME;\n// \t\t}\n\t\t//App.dataPath\n// \t\tpathToFolder = \"/home/as3boyan/.config\";\n\t\tpathToFolder = untyped App.getHomeDir();\n\t\t\n\t\tif (pathToFolder != null)\n\t\t{\n\t\t\tpathToFolder = Path.join(pathToFolder, \".HIDE\");\n\t\t\tif (!Fs.existsSync(pathToFolder))\n\t\t\t{\n\t\t\t\tFs.mkdirSync(pathToFolder);\n\t\t\t}\n\t\t\t\n\t\t\tvar configFiles = Fs.readdirSync(pathToConfigFolder);\n\t\t\tvar files = Fs.readdirSync(pathToFolder);\n\t\t\t\n// \t\t\tvar options:FsReadFileOpt = {};\n// \t\t\toptions.encoding = \"utf8\";\n\t\t\t\n\t\t\tvar content:String;\n\t\t\t\n\t\t\tvar pathToFile:String = null;\n\t\t\t\n\t\t\tfor (file in configFiles)\n\t\t\t{\n\t\t\t\tif (files.indexOf(file) == -1)\n\t\t\t\t{\n\t\t\t\t\tpathToFile = Path.join(pathToConfigFolder, file);\n\t\t\t\t\tcontent = Fs.readFileSync(pathToFile, \"utf8\");\n\t\t\t\t\tpathToFile = Path.join(pathToFolder, file);\n\t\t\t\t\tFs.writeFileSync(pathToFile, content, \"utf8\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpathToFolder = pathToConfigFolder;\n\t\t}\n\t\t\n        pathToSettings = Path.join(pathToFolder, \"settings.json\");\n        \n\t\twatcher = Watcher.watchFileForUpdates(pathToSettings, parse, 3000);\n\t\t\n\t\tparse();\n\t\t\n\t\tBrowserWindow.getAllWindows()[0].on(\"close\", function (e) \n\t\t{\n\t\t\tif (watcher != null) \n\t\t\t{\n\t\t\t\twatcher.close();\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tstatic function parse():Void \n\t{\t\t\n// \t\tvar options:FsReadFileOpt = { encoding: \"utf8\" };\n\t\t\n\t\tvar data:String = Fs.readFileSync(pathToSettings, \"utf8\");\n\t\t\n\t\tif (data != \"\")\n\t\t{\n\t\t\tsettings = TJSON.parse(data);\n\t\t\t\n\t\t\tvar themeWatcher = ThemeWatcher.get();\n\t\t\tthemeWatcher.load();\n\t\t\tLocaleWatcher.load();\n\n\t\t\tif (ProjectAccess.path != null) \n\t\t\t{\n\t\t\t\tvar fileTree = FileTree.get();\n\t\t\t\tfileTree.load();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tAlertify.error(pathToSettings + \" is empty! Please remove this file and restart HIDE.\", 0);\n\t\t}\n\n\t}\n\t\n\tpublic static function isItemInIgnoreList(path:String):Bool\n\t{\n\t\tvar ignored:Bool = false;\n\t\t\n\t\tvar ereg:EReg;\n\t\t\n\t\tfor (item in SettingsWatcher.settings.ignore) \n\t\t{\n\t\t\tereg = new EReg(item, \"\");\n\t\t\t\n\t\t\tif (ereg.match(path)) \n\t\t\t{\n\t\t\t\tignored = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn ignored;\n\t}\n}","package watchers;\nimport js.atomshell.browser.BrowserWindow;\nimport js.node.Path;\nimport completion.SnippetsCompletion;\nimport js.Node;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass SnippetsWatcher\n{\n\tvar watcher:Dynamic;\n\t\n\tstatic var instance:ThemeWatcher;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new ThemeWatcher();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function load():Void \n\t{\n\t\tvar pathToFile = Path.join(SettingsWatcher.pathToFolder, \"snippets.json\");\n\t\t\n\t\twatcher = Watcher.watchFileForUpdates(pathToFile, function ():Void \n\t\t{\n\t\t\tvar snippetsCompletion = SnippetsCompletion.get();\n\t\t\tsnippetsCompletion.load();\n\t\t}, 1000);\n\t\t\n\t\tBrowserWindow.getAllWindows()[0].on(\"close\", function (e) \n\t\t{\n\t\t\tif (watcher != null) \n\t\t\t{\n\t\t\t\twatcher.close();\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n}","package watchers;\nimport js.node.Fs.FsReadFileOpt;\nimport js.atomshell.browser.BrowserWindow;\nimport js.node.Fs;\nimport js.node.Path;\nimport cm.Editor;\nimport js.html.LinkElement;\nimport js.Browser;\nimport js.Node;\nimport haxe.Timer;\nimport jQuery.JQuery;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass ThemeWatcher\n{\n\tvar watcher:Dynamic;\n\tvar listenerAdded:Bool = false;\n    var pathToTheme:String;\n\tvar currentTheme:String;\n\t\n\tstatic var instance:ThemeWatcher;\n\t\n\tpublic function new() \n\t{\n\t\t\n\t}\t\n\t\n\tpublic static function get()\n\t{\n\t\tif (instance == null)\n\t\t{\n\t\t\tinstance = new ThemeWatcher();\n\t\t}\n\t\t\t\n\t\treturn instance;\n\t}\n\t\n\tpublic function load() \n\t{\t\t\n        pathToTheme = Path.join(\"core\", SettingsWatcher.settings.theme);\n        \n        Fs.exists(pathToTheme, function (exists:Bool)\n                         {\n                             if (exists)\n                             {\n                                 continueLoading();\n                             }\n                             else\n                             {\n                                 Alertify.log(\"File \" + pathToTheme + \" for theme \" + SettingsWatcher.settings.theme + \" was not found. CSS files in core folder: [\" + getListOfCSSFiles().join(\",\") + \"]\", \"\", 10000);\n                             }\n                         });\n\t}\n    \n    function continueLoading()\n    {\n        updateTheme();\n\t\t\n\t\tif (watcher != null) \n\t\t{\n\t\t\twatcher.close();\n\t\t}\n\t\t\n\t\twatcher = Watcher.watchFileForUpdates(pathToTheme, function ():Void \n\t\t{\n\t\t\tupdateTheme();\n\t\t}, 1000);\n\t\t\n\t\tif (!listenerAdded) \n\t\t{\n\t\t\tBrowserWindow.getAllWindows()[0].on(\"close\", function (e) \n\t\t\t{\n\t\t\t\tif (watcher != null) \n\t\t\t\t{\n\t\t\t\t\twatcher.close();\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\tlistenerAdded = true;\n\t\t}\n    }\n\t\n    function getListOfCSSFiles()\n    {\n        var files:Array<String> = [];\n        \n        for (item in Fs.readdirSync(\"core\"))\n        {\n            if (Path.extname(item) == \".css\")\n            {\n                files.push(Path.basename(item));\n            }\n        }\n        \n        return files;\n    }\n    \n\tfunction updateTheme(?type:String) \n\t{\t\t\n\t\tvar theme = SettingsWatcher.settings.theme;\n\t\t\n\t\tvar relativePath = Path.join(\"core\", theme);\n\t\t\n\t\tnew JQuery(\"#theme\").attr(\"href\", relativePath);\n\t\t\n\t\tif (currentTheme != null && currentTheme != theme)\n\t\t{\n\t\t\tvar ereg = ~/\\/\\* *codeEditorTheme *= *([^ \\*]*) *\\*\\//g;\n\t\t\n// \t\t\tvar options:FsReadFileOpt = {};\n// \t\t\toptions.encoding = \"utf8\";\n\n\t\t\tvar data = Fs.readFileSync(relativePath, \"utf8\");\n\n\t\t\tif (ereg.match(data))\n\t\t\t{\n\t\t\t\tvar codeEditorTheme = ereg.matched(1);\n\t\t\t\tEditor.setTheme(codeEditorTheme);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tcurrentTheme = theme;\n\t}\n}","package watchers;\nimport js.npm.Watchr;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass Watcher\n{\n\tpublic static function watchFileForUpdates(_path:String, onUpdate:Dynamic, ?_interval:Int):Dynamic\n\t{\n\t\tvar config:WatchrConfig = {\n\t\t\tpath: _path,\n\t\t\tlistener:\n\t\t\t\tfunction (changeType, filePath, fileCurrentStat, filePreviousStat):Void \n\t\t\t\t{\n\t\t\t\t\tif (changeType == \"update\") \n\t\t\t\t\t{\n\t\t\t\t\t\tonUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t};\n\t\t\n\t\tif (_interval != null) \n\t\t{\n\t\t\tconfig.interval = _interval;\n\t\t}\n\t\t\n\t\tvar watcher = Watchr.watch(config);\n\t\t\n\t\treturn watcher;\n\t}\n\t\n}","package ;\n\n/**\n * ...\n * @author AS3Boyan\n */\n\ntypedef Labels = {\n\t@:optional var ok:String;\n\t@:optional var cancel:String;\n}\n \ntypedef Options =\n{\n\t@:optional var labels: Labels;\n}\n \nextern class Alertify\n{\n\tpublic static function __init__():Void\n\t{\n\t\tvar Alertify = untyped __js__(\"alertify\");\n\t}\n\t\n\t// alert dialog\n\tstatic function alert(message:String):Void;\t\n\t\n\t// confirm dialog\n\tstatic function confirm(message:String, onComplete:Bool->Void):Void;\n\t\n\t// prompt dialog\n\tstatic function prompt(message:String, onComplete:Bool->String->Void, ?defaultValue:String):Void;\n\t\n\t// standard notification\n\t// setting the wait property to 0 will\n\t// keep the log message until it's clicked\n\tstatic function log(notification:String, ?type:String, ?wait:Int):Void;\n\t\n\t// success notification\n\t// shorthand for alertify.log(\"Notification\", \"success\");\n\tstatic function success(notification:String, ?wait:Int):Void;\n\n\t// error notification\n\t// shorthand for alertify.log(\"Notification\", \"error\");\n\tstatic function error(notification:String, ?wait:Int):Void;\n\t\n\tstatic function set(options:Options):Void;\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class defines mathematical functions and constants.\n**/\n#if cpp @:include(\"hxMath\") #end\nextern class Math\n{\n\t/**\n\t\tRepresents the ratio of the circumference of a circle to its diameter, \n\t\tspecified by the constant, π. `PI` is approximately 3.141592653589793.\n\t**/\n\tstatic var PI(default,null) : Float;\n\n\t/**\n\t\tA special Float constant which denotes negative infinity.\n\n\t\tFor example, this is the result of -1.0 / 0.0.\n\n\t\tOperations with NEGATIVE_INFINITY as an operand may result in\n\t\tNEGATIVE_INFINITY, POSITIVE_INFINITY or NaN. \n\n\t\tIf this constant is converted to an Int, e.g. through Std.int(), the\n\t\tresult is unspecified.\n\t**/\n\tstatic var NEGATIVE_INFINITY(default, null) : Float;\n\n\t/**\n\t\tA special Float constant which denotes negative infinity.\n\n\t\tFor example, this is the result of 1.0 / 0.0.\n\n\t\tOperations with POSITIVE_INFINITY as an operand may result in\n\t\tNEGATIVE_INFINITY, POSITIVE_INFINITY or NaN. \n\n\t\tIf this constant is converted to an Int, e.g. through Std.int(), the\n\t\tresult is unspecified.\n\t**/\n\tstatic var POSITIVE_INFINITY(default,null) : Float;\n\n\t/**\n\t\tA special Float constant which denotes an invalid number.\n\n\t\tNaN stands for \"Not a Number\". It occurs when a mathematically incorrect\n\t\toperation is executed, such as taking the square root of a negative\n\t\tnumber: Math.sqrt(-1).\n\n\t\tAll further operations with NaN as an operand will result in NaN.\n\n\t\tIf this constant is converted to an Int, e.g. through Std.int(), the\n\t\tresult is unspecified.\n\n\t\tIn order to test if a value is NaN, you should use Math.isNaN() function.\n\n\t\t@php In PHP versions prior to 5.3.1 VC 9 there may be unexpected\n\t\tresults when performing arithmetic operations with NaN on Windows, \n\t\tsee [https://bugs.php.net/bug.php?id=42143]\n\t**/\n\tstatic var NaN(default, null) : Float;\n\n\t/**\n\t\tReturns the absolute value of `v`.\n\n\t\tIf `v` is positive or 0, the result is unchanged. Otherwise the result \n\t\tis -`v`.\n\t\t\n\t\tIf `v` is NEGATIVE_INFINITY or POSITIVE_INFINITY, the result is \n\t\tPOSITIVE_INFINITY.\n\t\t\n\t\tIf `v` is NaN, the result is NaN.\n\t**/\n\tstatic function abs(v:Float):Float;\n\n\t/**\n\t\tReturns the smaller of values `a` and `b`.\n\n\t\tIf `a` or `b` are NaN, the result is NaN.\n\t\tIf `a` or `b` are NEGATIVE_INFINITY, the result is NEGATIVE_INFINITY.\n\t\tIf `a` and `b` are POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t**/\n\tstatic function min(a:Float, b:Float):Float;\n\n\t/**\n\t\tReturns the greater of values `a` and `b`.\n\n\t\tIf `a` or `b` are NaN, the result is NaN.\n\t\tIf `a` or `b` are POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `a` and `b` are NEGATIVE_INFINITY, the result is NEGATIVE_INFINITY.\n\t**/\n\tstatic function max(a:Float, b:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric sine of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function sin(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric cosine of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function cos(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric tangent of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function tan(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function asin(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc cosine of the specified angle `v`, \n\t\tin radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function acos(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc tangent of the specified angle `v`, \n\t\tin radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function atan(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc tangent whose tangent is the quotient of \n\t\ttwo specified numbers, in radians.\n\t\t\n\t\tIf parameter `x` or `y`  is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is NaN.\n\t**/\n\tstatic function atan2(y:Float, x:Float):Float;\n\n\t/**\n\t\tReturns Euler's number, raised to the power of `v`.\n\t\t\n\t\texp(1.0) is approximately 2.718281828459.\n\t\t\n\t\tIf `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `v` is NEGATIVE_INFINITY, the result is 0.0.\n\t\tIf `v` is NaN, the result is NaN.\n\t**/\n\tstatic function exp(v:Float):Float;\n\n\t/**\n\t\tReturns the natural logarithm of `v`.\n\t\t\n\t\tThis is the mathematical inverse operation of exp, \n\t\ti.e. `log(exp(v)) == v` always holds.\n\t\t\n\t\tIf `v` is negative (including NEGATIVE_INFINITY) or NaN, the result \n\t\tis NaN.\n\t\tIf `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `v` is 0.0, the result is NEGATIVE_INFINITY.\n\t**/\n\tstatic function log(v:Float):Float;\n\n\t/**\n\t\tReturns a specified base `v` raised to the specified power `exp`.\n\t**/\n\tstatic function pow(v:Float, exp:Float):Float;\n\n\t/**\n\t\tReturns the square root of `v`.\n\t\t\n\t\tIf `v` is negative (including NEGATIVE_INFINITY) or NaN, the result \n\t\tis NaN.\n\t\tIf `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `v` is 0.0, the result is 0.0.\n\t**/\n\tstatic function sqrt(v:Float):Float;\n\n\t/**\n\t\tRounds `v` to the nearest integer value.\n\t\t\n\t\tIf `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY \n\t\tor POSITIVE_INFINITY, the result is unspecified.\n\t**/\n\tstatic function round(v:Float):Int;\n\n\t/**\n\t\tReturns the largest integer value that is not greater than `v`.\n\n\t\tIf `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY \n\t\tor POSITIVE_INFINITY, the result is unspecified.\n\t**/\n\tstatic function floor(v:Float):Int;\n\n\t/**\n\t\tReturns the smallest integer value that is not less than `v`.\n\n\t\tIf `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY \n\t\tor POSITIVE_INFINITY, the result is unspecified.\n\t**/\n\tstatic function ceil(v:Float):Int;\n\n\t/**\n\t\tReturns a pseudo-random number which is greater than or equal to 0.0, \n\t\tand less than 1.0.\n\t**/\n\tstatic function random() : Float;\n\n\t#if ((flash9 && !as3) || cpp)\n\t/**\n\t\tReturns the largest integer value that is not greater than `v`, as a Float.\n\n\t\tIf `v` is is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is unspecified.\n\t**/\n\tstatic function ffloor( v : Float ) : Float;\n\n\t/**\n\t\tReturns the smallest integer value that is not less than `v`, as a Float.\n\n\t\tIf `v` is is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is unspecified.\n\t**/\n\tstatic function fceil( v : Float ) : Float;\n\n\t/**\n\t\tRounds `v` to the nearest integer value, as a Float.\n\n\t\tIf `v` is is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is unspecified.\n\t**/\n\tstatic function fround( v : Float ) : Float;\n\n\t#else\n\n\tstatic inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\tstatic inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\tstatic inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\t#end\n\n\n\t/**\n\t\tTells if `f` is a finite number.\n\n\t\tIf `f` is POSITIVE_INFINITY, NEGATIVE_INFINITY or NaN, the result \n\t\tis false, otherwise the result is true.\n\t**/\n\tstatic function isFinite( f : Float ) : Bool;\n\n\t/**\n\t\tTells if `f` is not a valid number.\n\n\t\tIf `f` is NaN, the result is true, otherwise the result is false. \n\t\tIn particular, both POSITIVE_INFINITY and NEGATIVE_INFINITY are\n\t\tnot considered NaN.\n\t**/\n\tstatic function isNaN( f : Float ) : Bool;\n\n\tprivate static function __init__() : Void untyped {\n\t#if flash9\n\t\tNaN = __global__[\"Number\"].NaN;\n\t\tNEGATIVE_INFINITY = __global__[\"Number\"].NEGATIVE_INFINITY;\n\t\tPOSITIVE_INFINITY = __global__[\"Number\"].POSITIVE_INFINITY;\n\t#else\n\t\t#if !js // genjs.ml will insert this only if necessary.\n\t\t\tMath.__name__ = [\"Math\"];\n\t\t#end\n\t\tMath.NaN = Number[\"NaN\"];\n\t\tMath.NEGATIVE_INFINITY = Number[\"NEGATIVE_INFINITY\"];\n\t\tMath.POSITIVE_INFINITY = Number[\"POSITIVE_INFINITY\"];\n\t#end\n\t#if js\n\t\t__feature__(\"Type.resolveClass\",$hxClasses['Math'] = Math);\n\t#end\n\t\tMath.isFinite = function(i) {\n\t\t\treturn\n\t\t\t#if flash9\n\t\t\t__global__[\"isFinite\"](i);\n\t\t\t#elseif flash\n\t\t\t_global[\"isFinite\"](i);\n\t\t\t#elseif js\n\t\t\t__js__(\"isFinite\")(i);\n\t\t\t#else\n\t\t\tfalse;\n\t\t\t#end\n\t\t};\n\t\tMath.isNaN = function(i) {\n\t\t\treturn\n\t\t\t#if flash9\n\t\t\t__global__[\"isNaN\"](i);\n\t\t\t#elseif flash\n\t\t\t_global[\"isNaN\"](i);\n\t\t\t#elseif js\n\t\t\t__js__(\"isNaN\")(i);\n\t\t\t#else\n\t\t\tfalse;\n\t\t\t#end\n\t\t};\n\t}\n\n}\n\n\n","\npackage atomshell;\n\n#if macro\nimport haxe.Json;\nimport haxe.macro.Compiler;\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.Expr.Field;\nimport sys.io.File;\n#end\n\nprivate typedef Pack = {\n\tname : String,\n\t?version : String\n}\n\n#if !macro extern #end\nclass Package {\n\n\tstatic var dependencies : #if haxe3 Map<String,String> #else Hash<String> #end;\n\n\t#if macro\n\tpublic static function export( path : String = \"package.json\" ) : Void{\n\t\tContext.onGenerate( function(_){\n\t\t\tif( dependencies == null ) return;\n\t\t\tvar data : Dynamic = {}\n\t\t\t\n\t\t\tif( sys.FileSystem.exists(path) ){\n\t\t\t\tdata = Json.parse( File.getContent(path) );\n\t\t\t}\n\n\t\t\tif( data.dependencies == null ){\n\t\t\t\tdata.dependencies = {};\n\t\t\t}else{\n\t\t\t\tswitch(Type.typeof(data.dependencies)){\n\t\t\t\t\tcase TObject: // fine\n\t\t\t\t\tdefault: data.dependencies = {};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor( name in dependencies.keys() ){\n\t\t\t\tReflect.setField( data.dependencies , name , dependencies.get(name) );\n\t\t\t}\n\n\t\t\tvar content =  haxe.Json.stringify( data );\n\t\t\tsys.io.File.saveContent( path , content );\n\n\t\t});\n\t}\n\t#end\n\t\n\t#if haxe3 macro #else @:macro #end public static function require( name : String , ?version : String = \"*\" , ?isNpm : Bool = true , ?native : String = null ) {\n\t\t\n\t\tif( dependencies == null ){\n\t\t\tdependencies = new #if haxe3 Map #else Hash #end();\n\t\t}\n\t\t\n\t\tvar nameExpr = Context.makeExpr( name , Context.currentPos() );\n\t\t\n\t\tif( isNpm )\n\t\t\tdependencies.set( name , version );\n\n\t\t#if !webpage\n\t\t\tvar outp = macro __js__(\"require\")( $nameExpr );\n\t\t#else\n\t\t\tvar outp = macro __js__(\"require('remote').require\")( $nameExpr );\n\t\t#end\t\t\n\n\t\tif( native != null ){\n\t\t\tfor( p in native.split(\".\") ){\n\t\t\t\tvar pExpr = Context.makeExpr( p , Context.currentPos() );\n\t\t\t\toutp = macro $outp[$pExpr];\n\t\t\t}\n\n\t\t}\n\n\t\treturn macro untyped $outp;\n\t\t\n\t}\n\n\t#if haxe3 macro #else @:macro #end public static function resolve( expr , path : String ) {\n\t\tfor( p in path.split(\".\") ){\n\t\t\tvar pExpr = Context.makeExpr( p , Context.currentPos() );\n\t\t\texpr = macro $expr[$pExpr];\n\t\t}\n\n\t\treturn macro $expr;\n\t}\n\t\n\t\n}\n\n#if !macro extern #end class Include {\n\n\t#if macro\n\tstatic var requireId = 0;\n\tstatic inline var NPM_DONE_META = ':npm_done2';\n\tstatic inline var USAGE = \"Usage: 'implements atomshell.Require<\\\"module-name\\\",\\\"module-version\\\">'\";\n\tstatic inline var NPM_REQUIRE = \"atomshell.Package.Require\";\n\tstatic inline var NPM_REQUIRE_NAMESPACE = \"atomshell.Package.RequireNamespace\";\n\tstatic inline var NPM_OPTION_FULL_PATH = \"npm_full_path\";\n\tstatic inline var JS_NODE_PACKAGE  = 'js.node';\n\tstatic inline var SEP = \"__\";\n\tstatic inline var INIT = \"__init__\";\n\t#end\n\n\t#if haxe3 macro #else @:macro #end public static function build() : Array<Field>{\n\t\t\n\t\tvar cl = Context.getLocalClass().get();\n\t\tvar fields = Context.getBuildFields();\n\t\tvar required : Pack = null;\n\t\tvar requireNS = false;\n\t\tvar pos = Context.currentPos();\n\t\tvar isNpm = !( cl.pack.slice(0,2).join('.') == JS_NODE_PACKAGE );\n\n\t\t// see if the type has already been processed\n\t\tif( cl.meta.has(NPM_DONE_META) )\n\t\t\treturn fields;\n\t\n\t\t// mark the type as processed\n\t\tcl.meta.add( NPM_DONE_META , [] , pos );\n\t\t\n\t\t// extract infos from the implemented interfaces\n\t\t/*t.module == NPM_PACKAGE_MODULE\n\t\t\t\t&& ( t.name == NPM_CLASS_REQUIRE || t.name == NPM_CLASS_REQUIRE_NAMESPACE ) */\n\n\t\tvar requireParams = util.Macro.extractStringParams( cl , NPM_REQUIRE );\n\t\tif( requireParams.length == 0 ){\n\t\t\trequireParams = util.Macro.extractStringParams( cl , NPM_REQUIRE_NAMESPACE );\n\t\t\trequireNS = true;\n\t\t}\n\n\t\tif( requireParams.length > 0 ){\n\n\t\t\trequired = {\n\t\t\t\tname : requireParams[0][0],\n\t\t\t\tversion : requireParams[0][1]\n\t\t\t};\n\n\t\t\t// exclude local files\n\t\t\tisNpm = isNpm && !( StringTools.startsWith(required.name,'/') || StringTools.startsWith(required.name,'./') );\n\t\t\t\n\t\t\t// set the generated class name \n\t\t\tvar clName = if( !Context.defined( NPM_OPTION_FULL_PATH ) )\n\t\t\t\t// if minified\n\t\t\t\tcl.name+SEP+(requireId++);\n\t\t\telse\n\t\t\t\t// if not, use the class' full path\n\t\t\t\tcl.pack.join(SEP) + SEP+cl.name;\n\n\t\t\t// initialization expressions\n\t\t\tvar init = [];\n\n\t\t\t// use the type name by default\n\t\t\tvar nativeClass = cl.name;\n\n\t\t\tif( requireNS ){\n\t\t\t\t// if the package is a namespace\n\t\t\t\t\n\t\t\t\t// check for :native class name\n\t\t\t\tvar _nativeName = util.Macro.extractNative( cl );\n\t\t\t\tif( _nativeName != null ){\n\t\t\t\t\tnativeClass = _nativeName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( requireNS )\n\t\t\t\tinit.push( macro var $clName = untyped atomshell.Package.resolve( atomshell.Package.require( '${required.name}','${required.version}' , $v{isNpm} ) , '${nativeClass}' ) );\n\t\t\telse\n\t\t\t\tinit.push( macro var $clName = untyped atomshell.Package.require( '${required.name}','${required.version}' , $v{isNpm} ) );\n\n\t\t\t// change the class' native name\n\t\t\tvar native = 'require(\"${required.name}\")';\n\t\t\tif( requireNS ){\n\t\t\t\tnative = native + '.${nativeClass}';\n\t\t\t}\n\t\t\tnative = '$clName';\n\t\t\t\n\t\t\tcl.meta.add(\":native\",[macro $v{native}], pos);\n\n\t\t\t// inject the initiatization code in __init__\n\t\t\tvar injected = false;\n\n\t\t\t// check that __init__ method already exists\n\t\t\tfor( f in fields ){\n\t\t\t\tif( f.name == INIT ){\n\t\t\t\t\tswitch( f.kind ){\n\t\t\t\t\t\tcase FFun( fun ) :\n\t\t\t\t\t\t\tinjected = true;\n\t\t\t\t\t\t\t// add the existing __init__ body in the end of the generated init expression\n\t\t\t\t\t\t\tinit.push( { expr : fun.expr.expr , pos : fun.expr.pos } );\n\t\t\t\t\t\t\tvar newExpr = {\n\t\t\t\t\t\t\t\tpos : fun.expr.pos,\n\t\t\t\t\t\t\t\texpr : EBlock(init)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfun.expr = newExpr;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if __init__ doesn't exist, just add the whole method\n\t\t\tif( !injected ){\n\t\t\t\tvar f = {\n\t\t\t\t\tname : INIT,\n\t\t\t\t\tpos : pos,\n\t\t\t\t\tmeta : [],\n\t\t\t\t\taccess : [AStatic],\n\t\t\t\t\tkind : FFun({\n\t\t\t\t\t\tret : TPath({\n\t\t\t\t\t\t\tname : \"Void\",\n\t\t\t\t\t\t\tpack : [],\n\t\t\t\t\t\t\tparams : [],\n\t\t\t\t\t\t\tsub : null\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tparams : [],\n\t\t\t\t\t\targs : [],\n\t\t\t\t\t\texpr : {\n\t\t\t\t\t\t\tpos : pos,\n\t\t\t\t\t\t\texpr : EBlock(init)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tfields.push(f);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\treturn fields;\n\t}\n\t\n}\n\n@:autoBuild(atomshell.Include.build())\nextern interface Require<Const,Const> {}\n\n@:autoBuild(atomshell.Include.build())\nextern interface RequireNamespace<Const,Const> {}\n\n","\npackage npm;\n\n#if macro\nimport haxe.Json;\nimport haxe.macro.Compiler;\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.Expr.Field;\nimport sys.io.File;\n#end\n\nprivate typedef Pack = {\n\tname : String,\n\t?version : String\n}\n\n#if !macro extern #end\nclass Package {\n\n\tstatic var dependencies : #if haxe3 Map<String,String> #else Hash<String> #end;\n\n\t#if macro\n\tpublic static function export( path : String = \"package.json\" ) : Void{\n\t\tContext.onGenerate( function(_){\n\t\t\tif( dependencies == null ) return;\n\t\t\tvar data : Dynamic = {}\n\t\t\t\n\t\t\tif( sys.FileSystem.exists(path) ){\n\t\t\t\tdata = Json.parse( File.getContent(path) );\n\t\t\t}\n\n\t\t\tif( data.dependencies == null ){\n\t\t\t\tdata.dependencies = {};\n\t\t\t}else{\n\t\t\t\tswitch(Type.typeof(data.dependencies)){\n\t\t\t\t\tcase TObject: // fine\n\t\t\t\t\tdefault: data.dependencies = {};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor( name in dependencies.keys() ){\n\t\t\t\tReflect.setField( data.dependencies , name , dependencies.get(name) );\n\t\t\t}\n\n\t\t\tvar content =  haxe.Json.stringify( data );\n\t\t\tsys.io.File.saveContent( path , content );\n\n\t\t});\n\t}\n\t#end\n\t\n\t#if haxe3 macro #else @:macro #end public static function require( name : String , ?version : String = \"*\" , ?isNpm : Bool = true , ?native : String = null ) {\n\t\t\n\t\tif( dependencies == null ){\n\t\t\tdependencies = new #if haxe3 Map #else Hash #end();\n\t\t}\n\t\t\n\t\tvar nameExpr = Context.makeExpr( name , Context.currentPos() );\n\t\t\n\t\tif( isNpm )\n\t\t\tdependencies.set( name , version );\n\n\t\tvar outp = macro __js__(\"require\")( $nameExpr );\n\t\t\n\t\tif( native != null ){\n\t\t\tfor( p in native.split(\".\") ){\n\t\t\t\tvar pExpr = Context.makeExpr( p , Context.currentPos() );\n\t\t\t\toutp = macro $outp[$pExpr];\n\t\t\t}\n\n\t\t}\n\n\t\treturn macro untyped $outp;\n\t\t\n\t}\n\n\t#if haxe3 macro #else @:macro #end public static function resolve( expr , path : String ) {\n\t\tfor( p in path.split(\".\") ){\n\t\t\tvar pExpr = Context.makeExpr( p , Context.currentPos() );\n\t\t\texpr = macro $expr[$pExpr];\n\t\t}\n\n\t\treturn macro $expr;\n\t}\n\t\n\t\n}\n\n#if !macro extern #end class Include {\n\n\t#if macro\n\tstatic var requireId = 0;\n\tstatic inline var NPM_DONE_META = ':npm_done';\n\tstatic inline var USAGE = \"Usage: 'implements npm.Require<\\\"module-name\\\",\\\"module-version\\\">'\";\n\tstatic inline var NPM_REQUIRE = \"npm.Package.Require\";\n\tstatic inline var NPM_REQUIRE_NAMESPACE = \"npm.Package.RequireNamespace\";\n\tstatic inline var NPM_OPTION_FULL_PATH = \"npm_full_path\";\n\tstatic inline var JS_NODE_PACKAGE  = 'js.node';\n\tstatic inline var SEP = \"__\";\n\tstatic inline var INIT = \"__init__\";\n\t#end\n\n\t#if haxe3 macro #else @:macro #end public static function build() : Array<Field>{\n\t\t\n\t\tvar cl = Context.getLocalClass().get();\n\t\tvar fields = Context.getBuildFields();\n\t\tvar required : Pack = null;\n\t\tvar requireNS = false;\n\t\tvar pos = Context.currentPos();\n\t\tvar isNpm = !( cl.pack.slice(0,2).join('.') == JS_NODE_PACKAGE );\n\n\t\t// see if the type has already been processed\n\t\tif( cl.meta.has(NPM_DONE_META) )\n\t\t\treturn fields;\n\t\n\t\t// mark the type as processed\n\t\tcl.meta.add( NPM_DONE_META , [] , pos );\n\t\t\n\t\t// extract infos from the implemented interfaces\n\t\t/*t.module == NPM_PACKAGE_MODULE\n\t\t\t\t&& ( t.name == NPM_CLASS_REQUIRE || t.name == NPM_CLASS_REQUIRE_NAMESPACE ) */\n\n\t\tvar requireParams = util.Macro.extractStringParams( cl , NPM_REQUIRE );\n\t\tif( requireParams.length == 0 ){\n\t\t\trequireParams = util.Macro.extractStringParams( cl , NPM_REQUIRE_NAMESPACE );\n\t\t\trequireNS = true;\n\t\t}\n\n\t\tif( requireParams.length > 0 ){\n\n\t\t\trequired = {\n\t\t\t\tname : requireParams[0][0],\n\t\t\t\tversion : requireParams[0][1]\n\t\t\t};\n\n\t\t\t// exclude local files\n\t\t\tisNpm = isNpm && !( StringTools.startsWith(required.name,'/') || StringTools.startsWith(required.name,'./') );\n\t\t\t\n\t\t\t// set the generated class name \n\t\t\tvar clName = if( !Context.defined( NPM_OPTION_FULL_PATH ) )\n\t\t\t\t// if minified\n\t\t\t\tcl.name+SEP+(requireId++);\n\t\t\telse\n\t\t\t\t// if not, use the class' full path\n\t\t\t\tcl.pack.join(SEP) + SEP+cl.name;\n\n\t\t\t// initialization expressions\n\t\t\tvar init = [];\n\n\t\t\t// use the type name by default\n\t\t\tvar nativeClass = cl.name;\n\n\t\t\tif( requireNS ){\n\t\t\t\t// if the package is a namespace\n\t\t\t\t\n\t\t\t\t// check for :native class name\n\t\t\t\tvar _nativeName = util.Macro.extractNative( cl );\n\t\t\t\tif( _nativeName != null ){\n\t\t\t\t\tnativeClass = _nativeName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( requireNS )\n\t\t\t\tinit.push( macro var $clName = untyped npm.Package.resolve( npm.Package.require( '${required.name}','${required.version}' , $v{isNpm} ) , '${nativeClass}' ) );\n\t\t\telse\n\t\t\t\tinit.push( macro var $clName = untyped npm.Package.require( '${required.name}','${required.version}' , $v{isNpm} ) );\n\n\t\t\t// change the class' native name\n\t\t\tvar native = 'require(\"${required.name}\")';\n\t\t\tif( requireNS ){\n\t\t\t\tnative = native + '.${nativeClass}';\n\t\t\t}\n\t\t\tnative = '$clName';\n\t\t\t\n\t\t\tcl.meta.add(\":native\",[macro $v{native}], pos);\n\n\t\t\t// inject the initiatization code in __init__\n\t\t\tvar injected = false;\n\n\t\t\t// check that __init__ method already exists\n\t\t\tfor( f in fields ){\n\t\t\t\tif( f.name == INIT ){\n\t\t\t\t\tswitch( f.kind ){\n\t\t\t\t\t\tcase FFun( fun ) :\n\t\t\t\t\t\t\tinjected = true;\n\t\t\t\t\t\t\t// add the existing __init__ body in the end of the generated init expression\n\t\t\t\t\t\t\tinit.push( { expr : fun.expr.expr , pos : fun.expr.pos } );\n\t\t\t\t\t\t\tvar newExpr = {\n\t\t\t\t\t\t\t\tpos : fun.expr.pos,\n\t\t\t\t\t\t\t\texpr : EBlock(init)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfun.expr = newExpr;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if __init__ doesn't exist, just add the whole method\n\t\t\tif( !injected ){\n\t\t\t\tvar f = {\n\t\t\t\t\tname : INIT,\n\t\t\t\t\tpos : pos,\n\t\t\t\t\tmeta : [],\n\t\t\t\t\taccess : [AStatic],\n\t\t\t\t\tkind : FFun({\n\t\t\t\t\t\tret : TPath({\n\t\t\t\t\t\t\tname : \"Void\",\n\t\t\t\t\t\t\tpack : [],\n\t\t\t\t\t\t\tparams : [],\n\t\t\t\t\t\t\tsub : null\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tparams : [],\n\t\t\t\t\t\targs : [],\n\t\t\t\t\t\texpr : {\n\t\t\t\t\t\t\tpos : pos,\n\t\t\t\t\t\t\texpr : EBlock(init)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tfields.push(f);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\treturn fields;\n\t}\n\t\n}\n\n@:autoBuild(npm.Include.build())\nextern interface Require<Const,Const> {}\n\n@:autoBuild(npm.Include.build())\nextern interface RequireNamespace<Const,Const> {}\n\n","package hxparse;\n\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\n\nusing Lambda;\nusing haxe.macro.Tools;\n\n/**\n\tThe RuleBuilder interfaces provides syntactic shortcuts for writing lexer\n\trules.\n**/\n#if !macro\n@:autoBuild(hxparse.RuleBuilderImpl.build())\n#end\ninterface RuleBuilder { }\n\nclass RuleBuilderImpl {\n\tmacro static public function build():Array<Field> {\n\t\tvar fields = Context.getBuildFields();\n\t\tvar fieldExprs = new Map();\n\t\tvar delays = [];\n\t\tvar ret = [];\n\t\tvar rules = [];\n\t\tfor (field in fields) {\n\t\t\tif (field.access.exists(function(a) return a == AStatic))\n\t\t\t\tswitch(field.kind) {\n\t\t\t\t\tcase FVar(t, e) if (e != null):\n\t\t\t\t\t\tswitch(e.expr) {\n\t\t\t\t\t\t\tcase EMeta({name: \":rule\"}, e):\n\t\t\t\t\t\t\t\trules.push(field.name);\n\t\t\t\t\t\t\t\tdelays.push(transformRule.bind(field, e, t, fieldExprs));\n\t\t\t\t\t\t\tcase EMeta({name: \":mapping\", params: args}, e):\n\t\t\t\t\t\t\t\tvar offset = switch(args) {\n\t\t\t\t\t\t\t\t\tcase [{expr: EConst(CInt(i))}]: Std.parseInt(i);\n\t\t\t\t\t\t\t\t\tcase _: 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdelays.push(transformMapping.bind(field, e, offset));\n\t\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t\t\tfieldExprs.set(field.name, e);\n\t\t\t\t\t\t}\n\t\t\t\t\tcase _:\n\t\t\t\t}\n\t\t\tif (!field.meta.exists(function(m) return m.name == \":ruleHelper\")) {\n\t\t\t\tret.push(field);\n\t\t\t}\n\t\t}\n\t\tfor (delay in delays)\n\t\t\tdelay();\n\t\tvar ruleIdents = [for (rv in rules) macro $i{rv}];\n\t\tret.push( {\n\t\t\tname: \"generatedRulesets\",\n\t\t\taccess: [APublic, AStatic],\n\t\t\tkind: FVar(TPath({\n\t\t\t\tname: \"Array\",\n\t\t\t\tpack: [],\n\t\t\t\tparams: [TPType(TPath({\n\t\t\t\t\tname: \"Ruleset\",\n\t\t\t\t\tpack: [\"hxparse\"],\n\t\t\t\t\tparams: [TPType(TPath( {\n\t\t\t\t\t\tname: \"Dynamic\",\n\t\t\t\t\t\tpack: []\n\t\t\t\t\t}))]\n\t\t\t\t}))]\n\t\t\t}), macro $a{ruleIdents}),\n\t\t\tpos: Context.currentPos()\n\t\t});\n\t\treturn ret;\n\t}\n\n\t#if macro\n\n\t#if unifill\n\n\tstatic function handleUnicode(s:String, p:Position) {\n\t\tfunction getPosInfo(i, l) {\n\t\t\tvar p = Context.getPosInfos(p);\n\t\t\treturn Context.makePosition({\n\t\t\t\tmin: p.min + i,\n\t\t\t\tmax: p.min + i + l,\n\t\t\t\tfile: p.file\n\t\t\t});\n\t\t}\n\t\tvar uLength = unifill.Unifill.uLength(s);\n\t\tif (uLength == s.length) {\n\t\t\treturn s;\n\t\t}\n\t\tvar buf = new StringBuf();\n\t\tvar itr = new unifill.InternalEncodingIter(s, 0, s.length);\n\t\twhile (itr.hasNext()) {\n\t\t\tvar i = itr.next();\n\t\t\tvar c = unifill.InternalEncoding.charAt(s, i);\n\t\t\tswitch (c) {\n\t\t\t\tcase '[':\n\t\t\t\t\tbuf.add(\"(\");\n\t\t\t\t\tvar first = true;\n\t\t\t\t\twhile(true) {\n\t\t\t\t\t\tif (!itr.hasNext()) {\n\t\t\t\t\t\t\tContext.error(\"Unterminated regular expression\", getPosInfo(itr.index, 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar i = itr.next();\n\t\t\t\t\t\tvar c = unifill.InternalEncoding.charAt(s, i);\n\t\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\t\tcase \"]\":\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"^\" if (first):\n\t\t\t\t\t\t\t\tvar p = unifill.InternalEncoding.codePointCount(s, 0, i);\n\t\t\t\t\t\t\t\tContext.error(\"Not-ranges are not supported in unicode strings\", getPosInfo(i, 1));\n\t\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t\t\tif (!first) {\n\t\t\t\t\t\t\t\t\tbuf.add(\"|\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbuf.add(\"(\");\n\t\t\t\t\t\t\t\tif (!itr.hasNext()) {\n\t\t\t\t\t\t\t\t\tContext.error(\"Unterminated regular expression\", getPosInfo(itr.index, 1));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar w = unifill.InternalEncoding.codePointWidthAt(s, i);\n\t\t\t\t\t\t\t\tif (unifill.InternalEncoding.charAt(s, i + w) == \"-\") {\n\t\t\t\t\t\t\t\t\titr.next();\n\t\t\t\t\t\t\t\t\tif (!itr.hasNext()) {\n\t\t\t\t\t\t\t\t\t\tContext.error(\"Unterminated regular expression\", getPosInfo(itr.index, 1));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar k = itr.next();\n\t\t\t\t\t\t\t\t\tvar cNext = unifill.InternalEncoding.charAt(s, k);\n\t\t\t\t\t\t\t\t\tif (unifill.InternalEncoding.codePointAt(c, 0) > 0x7F) {\n\t\t\t\t\t\t\t\t\t\tContext.error(\"Unicode ranges are not supported\", getPosInfo(i, 3));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbuf.add(\"[\");\n\t\t\t\t\t\t\t\t\t\tbuf.add(c);\n\t\t\t\t\t\t\t\t\t\tbuf.add(\"-\");\n\t\t\t\t\t\t\t\t\t\tbuf.add(cNext);\n\t\t\t\t\t\t\t\t\t\tbuf.add(\"]\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbuf.add(c);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbuf.add(\")\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t}\n\t\t\t\t\tbuf.add(\")\");\n\t\t\t\tcase _:\n\t\t\t\t\tbuf.add(c);\n\t\t\t}\n\t\t}\n\t\treturn buf.toString();\n\t}\n\n\t#end\n\n\tstatic function makeRule(fields:Map<String,Expr>, rule:Expr):String {\n\t\treturn switch(rule.expr) {\n\t\t\tcase EConst(CString(s)): #if unifill handleUnicode(s, rule.pos) #else s #end;\n\t\t\tcase EConst(CIdent(i)): makeRule(fields, fields.get(i));\n\t\t\tcase EBinop(OpAdd,e1,e2): \"(\" + makeRule(fields, e1) +\")(\" + makeRule(fields, e2) +\")\";\n\t\t\tcase EConst(CRegexp(r, opt)):\n\t\t\t\tif (opt != \"\") {\n\t\t\t\t\tContext.error(\"Cannot use regular expression flags for lexer rules\", rule.pos);\n\t\t\t\t}\n\t\t\t\tr;\n\t\t\tcase _: Context.error(\"Invalid rule\", rule.pos);\n\t\t}\n\t}\n\n\tstatic function transformRule(field:Field, e:Expr, t:ComplexType, fields:Map<String,Expr>) {\n\t\tvar el = switch(e.expr) {\n\t\t\tcase EArrayDecl(el): el;\n\t\t\tcase _: Context.error(\"Expected pattern => function map declaration\", e.pos);\n\t\t}\n\t\tvar el = el.map(function(e) {\n\t\t\tfunction loop(e:Expr) {\n\t\t\t\treturn switch(e.expr) {\n\t\t\t\t\tcase EBinop(OpArrow, rule, e):\n\t\t\t\t\t\tmacro @:pos(e.pos) {rule:$v{makeRule(fields, rule)}, func:function(lexer:hxparse.Lexer):$t return $e};\n\t\t\t\t\tcase EConst(CIdent(s)) if (fields.exists(s)):\n\t\t\t\t\t\tloop(fields.get(s));\n\t\t\t\t\tcase _:\n\t\t\t\t\t\tContext.error(\"Expected pattern => function\", e.pos);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn loop(e);\n\t\t});\n\t\tvar e = macro $a{el};\n\t\tvar e = macro hxparse.Lexer.buildRuleset($e, $v{field.name});\n\t\tfield.kind = FVar(null, e);\n\t\treturn e;\n\t}\n\n\tstatic function transformMapping(field:Field, e:Expr, offset:Int) {\n\t\tvar t = Context.typeof(e).follow();\n\t\tvar sl = [];\n\t\tswitch(t) {\n\t\t\tcase TAnonymous(a):\n\t\t\t\tfor (f in a.get().fields) {\n\t\t\t\t\tvar name = macro @:pos(e.pos) $i{f.name};\n\t\t\t\t\tvar cName = f.name.charAt(offset).toLowerCase() + f.name.substr(offset + 1);\n\t\t\t\t\tsl.push(macro $v{cName} => $name);\n\t\t\t\t}\n\t\t\tcase _:\n\t\t\t\tContext.error(\"Invalid mapping type\", e.pos);\n\t\t}\n\t\tvar e = macro $a{sl};\n\t\tfield.kind = FVar(null, e);\n\t\treturn e;\n\t}\n\n\t#end\n}","/* Same license as Node.js\n   Maintainer: Ritchie Turner, ritchie@async.cl\n\n   Node.js 0.8 api without haXe embellishments so that other apis may be implemented\n   on top without being hindered by design choices here.\n\n   Domain not added.\n*/\n\npackage js;\n\nclass Node {  \n\n  public static var console(default,null) : js.node.stdio.Console = untyped __js__('console');\n  public static var process(default,null) : js.node.Process = untyped __js__('process');\n  public static var module(default,null) : Dynamic = untyped __js__('module');\n  public static var exports : Dynamic = untyped __js__('exports');\n  public static var __filename(default,null) : String = untyped __js__('__filename');\n  public static var __dirname(default,null) : String = untyped __js__('__dirname');\n\n  public static var require(default,null): String->Dynamic = untyped __js__(\"require\");\n  public static var setTimeout(default,null): (Void->Void)->Int->?Array<String>->Int = untyped __js__(\"setTimeout\");\n  public static var setInterval(default,null): (Void->Void)->Int->?Array<String>->Int = untyped __js__(\"setInterval\");\n  public static var clearTimeout(default,null): Int->Void = untyped __js__(\"clearTimeout\");\n  public static var clearInterval(default,null): Int->Void = untyped __js__(\"clearInterval\");\n\n}\n\n\n"],
"names":[],
"mappings":"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"
}