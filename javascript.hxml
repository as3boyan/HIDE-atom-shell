#integrate files to classpath
-cp src
-cp externs/atom-shell
-cp externs/haxe-js-kit

#this class wil be used as entry point for your app.
-main AtomShellMain

#JavaScript target
-js bin/HIDE-atom-shell.js

-D browser

#You can use -D source-map-content (requires Haxe 3.1+) to have the .hx 
#files directly embedded into the map file, this way you only have to 
#upload it, and it will be always in sync with the compiled .js even if 
#you modify your .hx files.
-D source-map-content

#Generate source map and add debug information
-debug

#dead code elimination : remove unused code
#"-dce no" : do not remove unused code
#"-dce std" : remove unused code in the std lib (default)
#"-dce full" : remove all unused code
-dce full

--next

-cp src
-cp externs/atom-shell
-cp externs/haxe-js-kit

-cp externs/codemirror
-cp externs/alertify
-cp libs/hxparse/src
-cp libs/haxeparser/src
-cp libs/haxeprinter/src

-lib jQueryExtern
-lib tjson
-resource libs/haxeprinter/res/config.json@config
-D noStyle
-D nodejs

-main Main

-js bin/HIDE.js

-D webpage

-D source-map-content

-debug

-dce full

# -cmd "rm -rf ~/atom-shell/resources/app/*"
# -cmd "cp -r bin/* ~/atom-shell/resources/app"